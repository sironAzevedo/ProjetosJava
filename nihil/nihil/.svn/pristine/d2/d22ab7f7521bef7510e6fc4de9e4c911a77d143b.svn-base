<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"

       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
          http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd 
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
">

    <context:component-scan base-package="br.com.spassu.nihil"></context:component-scan>
    <context:annotation-config/>
    
    
    
    <bean id="propertiesConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:nihil/nihil.properties</value>
                <value>classpath:nihil/log.properties</value>
            </list>
        </property>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
    </bean>
    
    <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName">
            <value>java:/comp/env/nihilDS</value>
        </property>
    </bean>
    
    <!--  Hibernate SessionFactory  -->
    
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.max_fetch_depth">${hibernate.max_fetch_depth}</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.use_sql_comments">${hibernate.use_sql_comments}</prop>
            </props>
        </property>
        <property name="packagesToScan">
            <list>
                <value>br.com.spassu.nihil.common.entity</value>
            </list>
        </property>
    </bean>
    
    <!-- Transaction Manager -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager"/>
    
    <!-- DAO -->
    <bean id="dao" class="br.com.spassu.nihil.service.persistence.GenericDao">
        <property name="sessionFactory" ref="sessionFactory"/>
        <property name="customTransactionHandler">
            <bean class="br.com.spassu.nihil.service.persistence.SpringBasedTransactionHandler">
                <constructor-arg ref="transactionManager"/>
            </bean>
        </property>
    </bean>    
    
    
    <!--
    ################################################################################################
    #                               J O B S 
    ################################################################################################
    -->
    
    <bean id="jobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="monitorServiceImpl"/>
        <property name="targetMethod" value="reachableVerify"/>
        <property name="concurrent" value="false"/>
    </bean>
    
    <bean id="simpleTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
        <!-- see the example of method invoking job above -->
        <property name="jobDetail" ref="jobDetail"/>
        <!-- 10 seconds -->
        <property name="startDelay" value="20000"/>
        <!-- repeat every 60 seconds -->
        <property name="repeatInterval" value="60000"/>
    </bean>        
    
    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="simpleTrigger"/>
            </list>
        </property>
    </bean>    
    
    <!--
    ################################################################################################
    #                               F I M     J O B S 
    ################################################################################################
    -->
    
    <!--
    ################################################################################################
    #                               J A V A   M A I L 
    ################################################################################################
    -->
    
    <!-- Cria um bean de mensagem padrÃ£o -->
    <bean id="mailMessage" class="org.springframework.mail.SimpleMailMessage"/>

    <!-- Configura o servidor SMTP de E-mail -->
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl"> 
        <property name="host" value="${email.smtp}" />
        <property name="username" value="${email.usuairio}" />
        <property name="password" value="${email.senha}" />
        <property name="port" value="${email.porta}" />
        <property name="javaMailProperties"> 
            <props> 
                <prop key="mail.transport.protocol">smtp</prop>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.debug">true</prop>
                <prop key="mail.mime.multipart.allowempty">true</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
                <prop key="mail.smtp.socketFactory.fallback">false</prop>
            </props> 
        </property> 
    </bean>
    
    
    
    <!--
    ################################################################################################
    #                               F I M     J A V A   M A I L 
    ################################################################################################
    -->
    
    
</beans>
