package br.com.petrobras.sistam.desktop.agenciamento.formularios.receita;

import br.com.petrobras.fcorp.common.exception.BusinessException;
import br.com.petrobras.fcorp.swing.base.SDialog;
import br.com.petrobras.fcorp.swing.base.action.GenericAction;
import br.com.petrobras.fcorp.swing.components.SButton;
import br.com.petrobras.fcorp.swing.components.SComboBox;
import br.com.petrobras.fcorp.swing.components.SLabel;
import br.com.petrobras.fcorp.swing.components.SPanel;
import br.com.petrobras.fcorp.swing.components.STextArea;
import br.com.petrobras.fcorp.swing.components.util.GenericDocument;
import br.com.petrobras.sistam.common.entity.Agenciamento;
import br.com.petrobras.sistam.common.entity.DocumentacaoCabotagem;
import br.com.petrobras.sistam.common.valueobjects.CTACProdutoVo;
import br.com.petrobras.sistam.common.valueobjects.CTACReceitaVo;
import br.com.petrobras.sistam.desktop.components.SistamDateChooser;
import br.com.petrobras.sistam.desktop.components.TimeZoneComboBox;
import br.com.petrobras.sistam.desktop.components.lookups.porto.PortoLookup;
import br.com.petrobras.sistam.desktop.util.RelatorioUtil;
import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
import java.awt.BorderLayout;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import java.util.TimeZone;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.ImageIcon;
import javax.swing.JScrollPane;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.WindowConstants;
import javax.swing.border.BevelBorder;
import javax.swing.border.LineBorder;
import org.apache.commons.beanutils.BeanUtils;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.Binding;
import org.jdesktop.beansbinding.BindingGroup;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import org.slf4j.LoggerFactory;

public class EmitirCTACReceitaDialog extends SDialog {

    private EmitirCTACReceitaModel model;
    private DocumentacaoCabotagem cabotagem;

    public EmitirCTACReceitaDialog(java.awt.Frame parent, DocumentacaoCabotagem cabotagem, Agenciamento agenciamento, CTACReceitaVo voFormulario) {
        super(parent, true);

        this.cabotagem = cabotagem;
        model = new EmitirCTACReceitaModel(agenciamento, voFormulario, cabotagem);
        model.carregarComplementosPorPortoDesembarque();
        initComponents();
        setLocationRelativeTo(parent);

        timeZoneComboBox.setSelectedItem(TimeZone.getTimeZone(agenciamento.getAgencia().getTimezone()));
    }

    public EmitirCTACReceitaModel getModel() {
        return model;
    }

    public void gerarFormulario() {
        model.validar();
        model.carregarVO();
        model.registrarEmissao();

        if (cabotagem.isPermitidoEditarCTAC()) {
            RelatorioUtil.abrirFormulairoCTACReceitaPorProdutos(model.getListaVoFormulario());
        } else {
            RelatorioUtil.abrirFormulairoCTACReceitaComProdutos(model.getVoFormulario());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings({"unchecked", "PMD"})
    @SuppressFBWarnings
    //CHECKSTYLE:OFF
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new BindingGroup();

        GenericAction actionGerarFormulario = new GenericAction();
        SPanel pnlCabecalho = new SPanel();
        SLabel sLabel8 = new SLabel();
        SLabel sLabel10 = new SLabel();
        SLabel labelNome = new SLabel();
        SLabel labelNomeConteudo = new SLabel();
        SPanel pnlPrincipal = new SPanel();
        SPanel pnlManobras = new SPanel();
        SLabel sLabel2 = new SLabel();
        PortoLookup cbPorto = new PortoLookup();
        JScrollPane jScrollPane1 = new JScrollPane();
        STextArea sTextArea1 = new STextArea();
        SLabel sLabel1 = new SLabel();
        SLabel sLabel3 = new SLabel();
        SLabel sLabel9 = new SLabel();
        SistamDateChooser sistamDateChooser1 = new SistamDateChooser();
        timeZoneComboBox = new TimeZoneComboBox();
        SLabel sLabel4 = new SLabel();
        SComboBox cbEnderecoEmbarque = new SComboBox();
        SLabel sLabel5 = new SLabel();
        SComboBox cbEnderecoDesembarque = new SComboBox();
        SPanel pnlBotoes = new SPanel();
        SButton sButton1 = new SButton();

        actionGerarFormulario.setIcon(new ImageIcon(getClass().getResource("/icons/print.png"))); // NOI18N
        actionGerarFormulario.setMethodName("gerarFormulario");
        actionGerarFormulario.setTarget(this);
        actionGerarFormulario.setText("Gerar Formulário");
        actionGerarFormulario.setToolTipText("Gera o formulário");

        Binding binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.possuiPermissao}"), actionGerarFormulario, BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Emitir CTAC");

        pnlCabecalho.setBorder(new LineBorder(new Color(0, 0, 0), 1, true));
        pnlCabecalho.setName("pnlCabecalho"); // NOI18N

        sLabel8.setText("Viagem:");
        sLabel8.setName("sLabel8"); // NOI18N

        sLabel10.setName("sLabel10"); // NOI18N
        sLabel10.setRequiredField(true);

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.agenciamento.vgm}"), sLabel10, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        labelNome.setText("Nome:");
        labelNome.setName("labelNome"); // NOI18N

        labelNomeConteudo.setName("labelNomeConteudo"); // NOI18N
        labelNomeConteudo.setRequiredField(true);

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.agenciamento.embarcacao.nomeCompleto}"), labelNomeConteudo, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        GroupLayout pnlCabecalhoLayout = new GroupLayout(pnlCabecalho);
        pnlCabecalho.setLayout(pnlCabecalhoLayout);
        pnlCabecalhoLayout.setHorizontalGroup(
            pnlCabecalhoLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(Alignment.TRAILING, pnlCabecalhoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelNome, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(labelNomeConteudo, GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(sLabel8, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(sLabel10, GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
                .addGap(86, 86, 86))
        );
        pnlCabecalhoLayout.setVerticalGroup(
            pnlCabecalhoLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(Alignment.TRAILING, pnlCabecalhoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCabecalhoLayout.createParallelGroup(Alignment.TRAILING)
                    .addComponent(labelNomeConteudo, GroupLayout.PREFERRED_SIZE, 16, GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlCabecalhoLayout.createParallelGroup(Alignment.LEADING)
                        .addComponent(sLabel10, GroupLayout.PREFERRED_SIZE, 14, GroupLayout.PREFERRED_SIZE)
                        .addGroup(pnlCabecalhoLayout.createParallelGroup(Alignment.BASELINE)
                            .addComponent(sLabel8, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelNome, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        getContentPane().add(pnlCabecalho, BorderLayout.PAGE_START);

        pnlPrincipal.setBorder(BorderFactory.createEtchedBorder());
        pnlPrincipal.setName("pnlPrincipal"); // NOI18N

        pnlManobras.setBorder(BorderFactory.createEtchedBorder());
        pnlManobras.setName("pnlManobras"); // NOI18N

        sLabel2.setText("Porto de Embarque:");
        sLabel2.setName("sLabel2"); // NOI18N

        cbPorto.setText("portoLookup1");
        cbPorto.setName("cbPorto"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.portoEmbarque}"), cbPorto, BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        sTextArea1.setColumns(20);
        sTextArea1.setDocument(new GenericDocument(150));
        sTextArea1.setLineWrap(true);
        sTextArea1.setRows(3);
        sTextArea1.setWrapStyleWord(true);
        sTextArea1.setName("sTextArea1"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.observacao}"), sTextArea1, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jScrollPane1.setViewportView(sTextArea1);

        sLabel1.setText("Observação:");
        sLabel1.setName("sLabel1"); // NOI18N

        sLabel3.setText("Data de Emissão:");
        sLabel3.setName("sLabel3"); // NOI18N

        sLabel9.setText("Fuso Horário:");
        sLabel9.setName("sLabel9"); // NOI18N

        sistamDateChooser1.setName("sistamDateChooser1"); // NOI18N
        sistamDateChooser1.setTimeZoneComboBox(timeZoneComboBox);

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.dataEmissao}"), sistamDateChooser1, BeanProperty.create("date"));
        bindingGroup.addBinding(binding);

        timeZoneComboBox.setEnabled(false);
        timeZoneComboBox.setName("timeZoneComboBox"); // NOI18N

        sLabel4.setText("Endereço de Embarque:");
        sLabel4.setName("sLabel4"); // NOI18N

        cbEnderecoEmbarque.setDisplayProperty("enderecoComplemento");
        cbEnderecoEmbarque.setName("cbEnderecoEmbarque"); // NOI18N

        ELProperty eLProperty = ELProperty.create("${model.complementosEmbarque}");
        JComboBoxBinding jComboBoxBinding = SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, this, eLProperty, cbEnderecoEmbarque);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.complementoPortoEmbarque}"), cbEnderecoEmbarque, BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        sLabel5.setText("Endereço de Desembarque:");
        sLabel5.setName("sLabel5"); // NOI18N

        cbEnderecoDesembarque.setDisplayProperty("enderecoComplemento");
        cbEnderecoDesembarque.setName("cbEnderecoDesembarque"); // NOI18N

        eLProperty = ELProperty.create("${model.complementosDesembarque}");
        jComboBoxBinding = SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, this, eLProperty, cbEnderecoDesembarque);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.complementoPortoDesembarque}"), cbEnderecoDesembarque, BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        GroupLayout pnlManobrasLayout = new GroupLayout(pnlManobras);
        pnlManobras.setLayout(pnlManobrasLayout);
        pnlManobrasLayout.setHorizontalGroup(
            pnlManobrasLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlManobrasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlManobrasLayout.createParallelGroup(Alignment.LEADING)
                    .addComponent(sLabel1, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel4, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel2, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel5, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel3, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel9, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.RELATED)
                .addGroup(pnlManobrasLayout.createParallelGroup(Alignment.LEADING)
                    .addComponent(cbEnderecoDesembarque, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbPorto, GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
                    .addComponent(cbEnderecoEmbarque, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(pnlManobrasLayout.createSequentialGroup()
                        .addGroup(pnlManobrasLayout.createParallelGroup(Alignment.LEADING)
                            .addComponent(sistamDateChooser1, GroupLayout.PREFERRED_SIZE, 104, GroupLayout.PREFERRED_SIZE)
                            .addComponent(timeZoneComboBox, GroupLayout.PREFERRED_SIZE, 167, GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlManobrasLayout.setVerticalGroup(
            pnlManobrasLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlManobrasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlManobrasLayout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(sLabel9, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(timeZoneComboBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.UNRELATED)
                .addGroup(pnlManobrasLayout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(sistamDateChooser1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.UNRELATED)
                .addGroup(pnlManobrasLayout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(cbEnderecoDesembarque, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel5, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.UNRELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlManobrasLayout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(cbPorto, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.UNRELATED)
                .addGroup(pnlManobrasLayout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(cbEnderecoEmbarque, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.UNRELATED)
                .addGroup(pnlManobrasLayout.createParallelGroup(Alignment.LEADING)
                    .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 112, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        GroupLayout pnlPrincipalLayout = new GroupLayout(pnlPrincipal);
        pnlPrincipal.setLayout(pnlPrincipalLayout);
        pnlPrincipalLayout.setHorizontalGroup(
            pnlPrincipalLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(pnlManobras, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlPrincipalLayout.setVerticalGroup(
            pnlPrincipalLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlPrincipalLayout.createSequentialGroup()
                .addComponent(pnlManobras, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(pnlPrincipal, BorderLayout.CENTER);

        pnlBotoes.setBorder(BorderFactory.createBevelBorder(BevelBorder.RAISED));
        pnlBotoes.setName("pnlBotoes"); // NOI18N

        sButton1.setAction(actionGerarFormulario);
        sButton1.setName("sButton1"); // NOI18N
        pnlBotoes.add(sButton1);

        getContentPane().add(pnlBotoes, BorderLayout.PAGE_END);

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //CHECKSTYLE:ON
    // Variables declaration - do not modify//GEN-BEGIN:variables
    TimeZoneComboBox timeZoneComboBox;
    private BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
