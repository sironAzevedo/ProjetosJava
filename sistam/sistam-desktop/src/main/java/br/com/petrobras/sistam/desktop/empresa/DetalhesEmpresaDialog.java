package br.com.petrobras.sistam.desktop.empresa;

import br.com.petrobras.fcorp.swing.base.SDialog;
import br.com.petrobras.fcorp.swing.base.action.GenericAction;
import br.com.petrobras.fcorp.swing.components.SButton;
import br.com.petrobras.fcorp.swing.components.SComboBox;
import br.com.petrobras.fcorp.swing.components.SFormattedTextField;
import br.com.petrobras.fcorp.swing.components.SLabel;
import br.com.petrobras.fcorp.swing.components.SPanel;
import br.com.petrobras.fcorp.swing.components.STable;
import br.com.petrobras.fcorp.swing.components.STextField;
import br.com.petrobras.fcorp.swing.components.util.GenericDocument;
import br.com.petrobras.sistam.common.entity.EmpresaMaritima;
import br.com.petrobras.sistam.common.entity.Servico;
import br.com.petrobras.sistam.common.enums.TipoServico;
import br.com.petrobras.sistam.desktop.SistamApp;
import br.com.petrobras.sistam.desktop.util.DesktopUtil;
import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.ImageIcon;
import javax.swing.JScrollPane;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.WindowConstants;
import javax.swing.border.BevelBorder;
import javax.swing.border.SoftBevelBorder;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.Binding;
import org.jdesktop.beansbinding.BindingGroup;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.JTableBinding;
import org.jdesktop.swingbinding.JTableBinding.ColumnBinding;
import org.jdesktop.swingbinding.SwingBindings;

public class DetalhesEmpresaDialog extends SDialog {
    private DetalhesEmpresaDialogModel model;
    
    public DetalhesEmpresaDialog(java.awt.Frame parent, EmpresaMaritima empresa) {
        super(parent, true);
        this.model = new DetalhesEmpresaDialogModel(empresa);
        initComponents();
        setLocationRelativeTo(parent);
        DesktopUtil.configurarComponenteCNPJ(campoCnpj, actionSalvar);
    }
    
    public DetalhesEmpresaDialogModel getModel() {
        return model;
    }
    
    public void adicionar(){
        Servico novo = model.obterNovoServico();
        DetalhesServicoDialog dialog = new DetalhesServicoDialog(SistamApp.getSistamApp().getMainFrame(), novo);
        dialog.setVisible(true);
        
        if (dialog.getModel().isSalvo()){
            model.adicionar(dialog.getModel().getServico());
        }
    }
    
    public void salvar(){
        model.salvar();
        dispose();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings({"unchecked", "PMD"}) @SuppressFBWarnings
    //CHECKSTYLE:OFF
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new BindingGroup();

        GenericAction actionAdicionar = new GenericAction();
        GenericAction actionExcluir = new GenericAction();
        actionSalvar = new GenericAction();
        SPanel painelInformacoes = new SPanel();
        SLabel labelEmpresa = new SLabel();
        STextField campoEmpresa = new STextField();
        SLabel labelEmpresa1 = new SLabel();
        campoCnpj = new SFormattedTextField();
        SLabel labelEmpresa2 = new SLabel();
        STextField campoEmail = new STextField();
        SLabel labelAgencia = new SLabel();
        SComboBox comboAgencia = new SComboBox();
        SLabel labelTelefones = new SLabel();
        STextField campoTelefones = new STextField();
        SComboBox comboAgencia1 = new SComboBox();
        SLabel sLabel1 = new SLabel();
        SLabel labelCidade = new SLabel();
        STextField campoCidade = new STextField();
        SLabel labelEstado = new SLabel();
        STextField campoEstado = new STextField();
        SPanel sPanel1 = new SPanel();
        JScrollPane jScrollPane1 = new JScrollPane();
        STable sTable1 = new STable();
        SButton botaoAdicionar = new SButton();
        SButton botaoAdicionar2 = new SButton();
        SPanel painelBotoes = new SPanel();
        SButton botaoAdicionar1 = new SButton();

        actionAdicionar.setIcon(new ImageIcon(getClass().getResource("/icons/add.png"))); // NOI18N
        actionAdicionar.setMethodName("adicionar");
        actionAdicionar.setTarget(this);
        actionAdicionar.setText("Adicionar");
        actionAdicionar.setToolTipText("Adiciona um novo serviço para a empresa");

        actionExcluir.setIcon(new ImageIcon(getClass().getResource("/icons/delete.png"))); // NOI18N
        actionExcluir.setMethodName("excluir");
        actionExcluir.setTarget(model);
        actionExcluir.setText("Excluir");
        actionExcluir.setToolTipText("Exclui o serviço selecionado");

        Binding binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${not empty model.servicoSelecionado}"), actionExcluir, BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        actionSalvar.setIcon(new ImageIcon(getClass().getResource("/icons/disk.png"))); // NOI18N
        actionSalvar.setMethodName("salvar");
        actionSalvar.setTarget(this);
        actionSalvar.setText("Salvar");
        actionSalvar.setToolTipText("Salva as informações da empresa");

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Empresa");

        painelInformacoes.setBorder(BorderFactory.createTitledBorder("Informações"));
        painelInformacoes.setName("painelInformacoes"); // NOI18N

        labelEmpresa.setText("Empresa:");
        labelEmpresa.setName("labelEmpresa"); // NOI18N

        campoEmpresa.setDocument(new GenericDocument(100));
        campoEmpresa.setName("campoEmpresa"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.empresa.razaoSocial}"), campoEmpresa, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        labelEmpresa1.setText("CNPJ:");
        labelEmpresa1.setName("labelEmpresa1"); // NOI18N

        campoCnpj.setName("campoCnpj"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.empresa.cnpjComMascara}"), campoCnpj, BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        labelEmpresa2.setText("E-mail:");
        labelEmpresa2.setName("labelEmpresa2"); // NOI18N

        campoEmail.setDocument(new GenericDocument(100));
        campoEmail.setName("campoEmail"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.empresa.email}"), campoEmail, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        labelAgencia.setText("Agência:");
        labelAgencia.setName("labelAgencia"); // NOI18N

        comboAgencia.setName("comboAgencia"); // NOI18N

        ELProperty eLProperty = ELProperty.create("${model.listaDeAgencias}");
        JComboBoxBinding jComboBoxBinding = SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, this, eLProperty, comboAgencia);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.empresa.agencia}"), comboAgencia, BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        labelTelefones.setText("Telefone(s):");
        labelTelefones.setName("labelTelefones"); // NOI18N

        campoTelefones.setDocument(new GenericDocument(50));
        campoTelefones.setName("campoTelefones"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.empresa.telefone}"), campoTelefones, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        comboAgencia1.setName("comboAgencia1"); // NOI18N

        eLProperty = ELProperty.create("${model.tiposSimNao}");
        jComboBoxBinding = SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, this, eLProperty, comboAgencia1);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.ativoSimNaoSelecionado}"), comboAgencia1, BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        sLabel1.setText("Ativa?");
        sLabel1.setName("sLabel1"); // NOI18N

        labelCidade.setText("Cidade:");
        labelCidade.setName("labelCidade"); // NOI18N

        campoCidade.setDocument(new GenericDocument(100, 
            GenericDocument.OPTION_APPLY_UPPERCASE ));
    campoCidade.setName("campoCidade"); // NOI18N

    binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.empresa.cidade}"), campoCidade, BeanProperty.create("text"));
    bindingGroup.addBinding(binding);

    labelEstado.setText("Estado:");
    labelEstado.setName("labelEstado"); // NOI18N

    campoEstado.setDocument(new GenericDocument(2, 
        GenericDocument.OPTION_APPLY_UPPERCASE ));
campoEstado.setName("campoEstado"); // NOI18N

binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.empresa.estado}"), campoEstado, BeanProperty.create("text"));
bindingGroup.addBinding(binding);

        GroupLayout painelInformacoesLayout = new GroupLayout(painelInformacoes);
painelInformacoes.setLayout(painelInformacoesLayout);
painelInformacoesLayout.setHorizontalGroup(
    painelInformacoesLayout.createParallelGroup(Alignment.LEADING)
    .addGroup(painelInformacoesLayout.createSequentialGroup()
        .addGap(17, 17, 17)
        .addGroup(painelInformacoesLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(labelCidade, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addComponent(labelEmpresa2, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addComponent(labelEmpresa1, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addComponent(labelEmpresa, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addComponent(labelAgencia, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(ComponentPlacement.RELATED)
        .addGroup(painelInformacoesLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(painelInformacoesLayout.createSequentialGroup()
                .addComponent(comboAgencia, GroupLayout.PREFERRED_SIZE, 141, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(sLabel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.UNRELATED)
                .addComponent(comboAgencia1, GroupLayout.PREFERRED_SIZE, 68, GroupLayout.PREFERRED_SIZE))
            .addComponent(campoEmpresa, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(painelInformacoesLayout.createSequentialGroup()
                .addComponent(campoCnpj, GroupLayout.PREFERRED_SIZE, 141, GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(labelTelefones, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(campoTelefones, GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE))
            .addComponent(campoEmail, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(painelInformacoesLayout.createSequentialGroup()
                .addComponent(campoCidade, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(ComponentPlacement.UNRELATED)
                .addComponent(labelEstado, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(campoEstado, GroupLayout.PREFERRED_SIZE, 34, GroupLayout.PREFERRED_SIZE)))
        .addContainerGap())
    );
    painelInformacoesLayout.setVerticalGroup(
        painelInformacoesLayout.createParallelGroup(Alignment.LEADING)
        .addGroup(painelInformacoesLayout.createSequentialGroup()
            .addGroup(painelInformacoesLayout.createParallelGroup(Alignment.BASELINE)
                .addComponent(labelAgencia, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(comboAgencia, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(comboAgencia1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(sLabel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(ComponentPlacement.RELATED)
            .addGroup(painelInformacoesLayout.createParallelGroup(Alignment.BASELINE)
                .addComponent(campoEmpresa, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(labelEmpresa, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(ComponentPlacement.UNRELATED)
            .addGroup(painelInformacoesLayout.createParallelGroup(Alignment.BASELINE)
                .addComponent(campoCnpj, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(labelTelefones, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(campoTelefones, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(labelEmpresa1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(ComponentPlacement.UNRELATED)
            .addGroup(painelInformacoesLayout.createParallelGroup(Alignment.BASELINE)
                .addComponent(labelEmpresa2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(campoEmail, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(ComponentPlacement.UNRELATED)
            .addGroup(painelInformacoesLayout.createParallelGroup(Alignment.BASELINE)
                .addComponent(labelCidade, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(campoCidade, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(campoEstado, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(labelEstado, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
            .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    sPanel1.setBorder(BorderFactory.createTitledBorder("Serviços"));
    sPanel1.setName("sPanel1"); // NOI18N

    jScrollPane1.setName("jScrollPane1"); // NOI18N

    sTable1.setName("sTable1"); // NOI18N

    eLProperty = ELProperty.create("${model.empresa.servicos}");
        JTableBinding jTableBinding = SwingBindings.createJTableBinding(UpdateStrategy.READ_WRITE, this, eLProperty, sTable1);
        ColumnBinding columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${nomeServico}"));
    columnBinding.setColumnName("Nome");
    columnBinding.setColumnClass(String.class);
    columnBinding.setEditable(false);
    columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${tipoServico}"));
    columnBinding.setColumnName("Tipo Serviço");
    columnBinding.setColumnClass(TipoServico.class);
    columnBinding.setEditable(false);
    bindingGroup.addBinding(jTableBinding);
    jTableBinding.bind();binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.servicoSelecionado}"), sTable1, BeanProperty.create("selectedElement"));
    bindingGroup.addBinding(binding);

    jScrollPane1.setViewportView(sTable1);

    botaoAdicionar.setAction(actionExcluir);
    botaoAdicionar.setName("botaoAdicionar"); // NOI18N

    botaoAdicionar2.setAction(actionAdicionar);
    botaoAdicionar2.setName("botaoAdicionar2"); // NOI18N

        GroupLayout sPanel1Layout = new GroupLayout(sPanel1);
    sPanel1.setLayout(sPanel1Layout);
    sPanel1Layout.setHorizontalGroup(
        sPanel1Layout.createParallelGroup(Alignment.LEADING)
        .addGroup(sPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(sPanel1Layout.createParallelGroup(Alignment.LEADING)
                .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 456, Short.MAX_VALUE)
                .addGroup(Alignment.TRAILING, sPanel1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(botaoAdicionar2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(ComponentPlacement.RELATED)
                    .addComponent(botaoAdicionar, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
            .addContainerGap())
    );
    sPanel1Layout.setVerticalGroup(
        sPanel1Layout.createParallelGroup(Alignment.LEADING)
        .addGroup(sPanel1Layout.createSequentialGroup()
            .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 172, GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(ComponentPlacement.RELATED)
            .addGroup(sPanel1Layout.createParallelGroup(Alignment.BASELINE)
                .addComponent(botaoAdicionar, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(botaoAdicionar2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
    );

    painelBotoes.setBorder(new SoftBevelBorder(BevelBorder.RAISED));
    painelBotoes.setName("painelBotoes"); // NOI18N

    botaoAdicionar1.setAction(actionSalvar);
    botaoAdicionar1.setName("botaoAdicionar1"); // NOI18N
    painelBotoes.add(botaoAdicionar1);

        GroupLayout layout = new GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(Alignment.LEADING)
                .addComponent(sPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(painelInformacoes, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(painelBotoes, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addContainerGap())
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(painelInformacoes, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(ComponentPlacement.RELATED)
            .addComponent(sPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addGap(5, 5, 5)
            .addComponent(painelBotoes, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addContainerGap())
    );

    bindingGroup.bind();

    pack();
    }// </editor-fold>//GEN-END:initComponents
    //CHECKSTYLE:ON

    // Variables declaration - do not modify//GEN-BEGIN:variables
    GenericAction actionSalvar;
    SFormattedTextField campoCnpj;
    private BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}
