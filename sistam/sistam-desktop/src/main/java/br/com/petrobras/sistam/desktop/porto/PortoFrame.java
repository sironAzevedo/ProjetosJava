package br.com.petrobras.sistam.desktop.porto;

import br.com.petrobras.fcorp.swing.base.SInternalFrame;
import br.com.petrobras.fcorp.swing.base.action.GenericAction;
import br.com.petrobras.fcorp.swing.components.SButton;
import br.com.petrobras.fcorp.swing.components.SComboBox;
import br.com.petrobras.fcorp.swing.components.SLabel;
import br.com.petrobras.fcorp.swing.components.SPanel;
import br.com.petrobras.fcorp.swing.components.STable;
import br.com.petrobras.sistam.common.entity.AgenciaPorto;
import br.com.petrobras.sistam.common.entity.Porto;
import br.com.petrobras.sistam.desktop.SistamApp;
import br.com.petrobras.snarf.desktop.assync.AssyncInvoker;
import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.ImageIcon;
import javax.swing.JScrollPane;
import javax.swing.LayoutStyle.ComponentPlacement;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.Binding;
import org.jdesktop.beansbinding.BindingGroup;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.JTableBinding;
import org.jdesktop.swingbinding.JTableBinding.ColumnBinding;
import org.jdesktop.swingbinding.SwingBindings;

public class PortoFrame extends SInternalFrame {
    private PortoModel model;
    
    public PortoFrame() {
        this.model = new PortoModel();
        initComponents();
        
        AssyncInvoker
                .create(this, "carregarListaPortosNacionais")
                .settingLoadingIconOn(labelCarregando)
                .schedule();
    }

    public PortoModel getModel() {
        return model;
    }

    public void adicionarPortoDaAgencia(){
        AgenciaPorto porto = model.obterNovoPorto();
        DetalhesPortoDialog dialog = new DetalhesPortoDialog(SistamApp.getSistamApp().getMainFrame(), porto);
        dialog.setVisible(true);
        
        if (dialog.getModel().estaSalvo()){
            model.pesquisar();
        }
    }
    
    public void editarPortoDaAgencia(){
        AgenciaPorto porto = model.getPortoSelecionado();
        DetalhesPortoDialog dialog = new DetalhesPortoDialog(SistamApp.getSistamApp().getMainFrame(), porto);
        dialog.setVisible(true);
        
         if (dialog.getModel().estaSalvo()){
            model.pesquisar();
         }
    }
    
    public void adicionarInformacaoComplementar(){
        DetalhesInformacoesPortoDialog dialog = new DetalhesInformacoesPortoDialog(SistamApp.getSistamApp().getMainFrame());
        dialog.setVisible(true);
        model.carregarListaPortosNacionais();
    }
    
    public void editarInformacaoComplementar(){
        Porto porto = model.getService().buscarPorto(model.getPortoNacionalSelecionado());
        DetalhesInformacoesPortoDialog dialog = new DetalhesInformacoesPortoDialog(SistamApp.getSistamApp().getMainFrame());
        dialog.getModel().setPortoSelecionado(porto);
        dialog.setVisible(true);
        model.carregarListaPortosNacionais();
    }
    
    public void carregarListaPortosNacionais(){    
        model.carregarListaPortosNacionais();
        labelCarregando.setVisible(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings({"unchecked", "PMD"}) @SuppressFBWarnings
    //CHECKSTYLE:OFF
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new BindingGroup();

        GenericAction actionAdicionarPortoDaAgencia = new GenericAction();
        GenericAction actionEditarPortoDaAgencia = new GenericAction();
        actionPesquisarPortosDaAgencia = new GenericAction();
        GenericAction actionAdicionarInformacaoComplementar = new GenericAction();
        GenericAction actionEditarInformacaoComplementar = new GenericAction();
        SPanel sPanel1 = new SPanel();
        JScrollPane jScrollPane1 = new JScrollPane();
        STable sTable1 = new STable();
        SLabel labelAgencia = new SLabel();
        SComboBox comboAgencias = new SComboBox();
        SButton botaoPesquisar = new SButton();
        SButton botaoEditar = new SButton();
        SButton botaoAdicionar = new SButton();
        SPanel sPanel2 = new SPanel();
        JScrollPane jScrollPane2 = new JScrollPane();
        STable sTable2 = new STable();
        SButton botaoAdicionar1 = new SButton();
        SButton botaoEditar1 = new SButton();
        labelCarregando = new SLabel();

        actionAdicionarPortoDaAgencia.setIcon(new ImageIcon(getClass().getResource("/icons/add.png"))); // NOI18N
        actionAdicionarPortoDaAgencia.setMethodName("adicionarPortoDaAgencia");
        actionAdicionarPortoDaAgencia.setTarget(this);
        actionAdicionarPortoDaAgencia.setText("Adicionar");
        actionAdicionarPortoDaAgencia.setToolTipText("Adiciona um novo porto para uma agência");

        actionEditarPortoDaAgencia.setIcon(new ImageIcon(getClass().getResource("/icons/edit.png"))); // NOI18N
        actionEditarPortoDaAgencia.setMethodName("editarPortoDaAgencia");
        actionEditarPortoDaAgencia.setTarget(this);
        actionEditarPortoDaAgencia.setText("Editar");
        actionEditarPortoDaAgencia.setToolTipText("Edita o porto selecionado de uma agência");

        Binding binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${not empty model.portoSelecionado}"), actionEditarPortoDaAgencia, BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        actionPesquisarPortosDaAgencia.setIcon(new ImageIcon(getClass().getResource("/icons/listagem_busca.png"))); // NOI18N
        actionPesquisarPortosDaAgencia.setMethodName("pesquisar");
        actionPesquisarPortosDaAgencia.setTarget(model);
        actionPesquisarPortosDaAgencia.setText("Pesquisar");
        actionPesquisarPortosDaAgencia.setToolTipText("Pesquisa os portos da agência informada");

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${not empty model.agenciaSelecionada}"), actionPesquisarPortosDaAgencia, BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        actionAdicionarInformacaoComplementar.setIcon(new ImageIcon(getClass().getResource("/icons/add.png"))); // NOI18N
        actionAdicionarInformacaoComplementar.setMethodName("adicionarInformacaoComplementar");
        actionAdicionarInformacaoComplementar.setTarget(this);
        actionAdicionarInformacaoComplementar.setText("Adicionar");
        actionAdicionarInformacaoComplementar.setToolTipText("Adiciona informações complementares de um porto");

        actionEditarInformacaoComplementar.setIcon(new ImageIcon(getClass().getResource("/icons/edit.png"))); // NOI18N
        actionEditarInformacaoComplementar.setMethodName("editarInformacaoComplementar");
        actionEditarInformacaoComplementar.setTarget(this);
        actionEditarInformacaoComplementar.setText("Editar");
        actionEditarInformacaoComplementar.setToolTipText("Edita as informações complementares selecionadas");

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${not empty model.portoNacionalSelecionado}"), actionEditarInformacaoComplementar, BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        setTitle("Portos");

        sPanel1.setBorder(BorderFactory.createTitledBorder("Lista de Portos da Agência"));
        sPanel1.setName("sPanel1"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        sTable1.setName("sTable1"); // NOI18N

        ELProperty eLProperty = ELProperty.create("${model.listaPorto}");
        JTableBinding jTableBinding = SwingBindings.createJTableBinding(UpdateStrategy.READ_WRITE, this, eLProperty, sTable1);
        ColumnBinding columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${porto}"));
        columnBinding.setColumnName("Porto");
        columnBinding.setColumnClass(Porto.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${municipio}"));
        columnBinding.setColumnName("Município/Estado");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.portoSelecionado}"), sTable1, BeanProperty.create("selectedElement"));
        bindingGroup.addBinding(binding);

        jScrollPane1.setViewportView(sTable1);

        labelAgencia.setText("Agência:");
        labelAgencia.setName("labelAgencia"); // NOI18N

        comboAgencias.setName("comboAgencias"); // NOI18N

        eLProperty = ELProperty.create("${model.listaAgencia}");
        JComboBoxBinding jComboBoxBinding = SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, this, eLProperty, comboAgencias);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.agenciaSelecionada}"), comboAgencias, BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        botaoPesquisar.setAction(actionPesquisarPortosDaAgencia);
        botaoPesquisar.setName("botaoPesquisar"); // NOI18N

        botaoEditar.setAction(actionEditarPortoDaAgencia);
        botaoEditar.setName("botaoEditar"); // NOI18N

        botaoAdicionar.setAction(actionAdicionarPortoDaAgencia);
        botaoAdicionar.setName("botaoAdicionar"); // NOI18N

        GroupLayout sPanel1Layout = new GroupLayout(sPanel1);
        sPanel1.setLayout(sPanel1Layout);
        sPanel1Layout.setHorizontalGroup(
            sPanel1Layout.createParallelGroup(Alignment.LEADING)
            .addGroup(sPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sPanel1Layout.createParallelGroup(Alignment.LEADING)
                    .addComponent(jScrollPane1, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 728, Short.MAX_VALUE)
                    .addGroup(sPanel1Layout.createSequentialGroup()
                        .addComponent(labelAgencia, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addComponent(comboAgencias, GroupLayout.PREFERRED_SIZE, 167, GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(botaoPesquisar, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(Alignment.TRAILING, sPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(botaoAdicionar, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(botaoEditar, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        sPanel1Layout.setVerticalGroup(
            sPanel1Layout.createParallelGroup(Alignment.LEADING)
            .addGroup(Alignment.TRAILING, sPanel1Layout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(sPanel1Layout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(labelAgencia, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboAgencias, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoPesquisar, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 150, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.UNRELATED)
                .addGroup(sPanel1Layout.createParallelGroup(Alignment.LEADING)
                    .addComponent(botaoAdicionar, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoEditar, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
        );

        sPanel2.setBorder(BorderFactory.createTitledBorder("Informações Complementares dos Portos Nacionais"));
        sPanel2.setName("sPanel2"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        sTable2.setName("sTable2"); // NOI18N

        eLProperty = ELProperty.create("${model.portosNacionais}");
        jTableBinding = SwingBindings.createJTableBinding(UpdateStrategy.READ_WRITE, this, eLProperty, sTable2);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${nomeCompleto}"));
        columnBinding.setColumnName("Porto");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${complemento.nomeCtac}"));
        columnBinding.setColumnName("Nome CTAC");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${complemento.endereco}"));
        columnBinding.setColumnName("Endereço");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${complemento.cidade}"));
        columnBinding.setColumnName("Cidade");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${complemento.estado}"));
        columnBinding.setColumnName("Estado");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${complemento.inscricaoEstadual}"));
        columnBinding.setColumnName("Inscrição Estadual");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${complemento.cnpjComMascara}"));
        columnBinding.setColumnName("CNPJ");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.portoNacionalSelecionado}"), sTable2, BeanProperty.create("selectedElement"));
        bindingGroup.addBinding(binding);

        jScrollPane2.setViewportView(sTable2);

        botaoAdicionar1.setAction(actionAdicionarInformacaoComplementar);
        botaoAdicionar1.setName("botaoAdicionar1"); // NOI18N

        botaoEditar1.setAction(actionEditarInformacaoComplementar);
        botaoEditar1.setName("botaoEditar1"); // NOI18N

        labelCarregando.setText("Carregando...");
        labelCarregando.setName("labelCarregando"); // NOI18N

        GroupLayout sPanel2Layout = new GroupLayout(sPanel2);
        sPanel2.setLayout(sPanel2Layout);
        sPanel2Layout.setHorizontalGroup(
            sPanel2Layout.createParallelGroup(Alignment.LEADING)
            .addGroup(sPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sPanel2Layout.createParallelGroup(Alignment.LEADING)
                    .addComponent(jScrollPane2, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 728, Short.MAX_VALUE)
                    .addGroup(Alignment.TRAILING, sPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(botaoAdicionar1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(botaoEditar1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                    .addGroup(sPanel2Layout.createSequentialGroup()
                        .addComponent(labelCarregando, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        sPanel2Layout.setVerticalGroup(
            sPanel2Layout.createParallelGroup(Alignment.LEADING)
            .addGroup(sPanel2Layout.createSequentialGroup()
                .addComponent(labelCarregando, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                .addGap(11, 11, 11)
                .addGroup(sPanel2Layout.createParallelGroup(Alignment.LEADING)
                    .addComponent(botaoAdicionar1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoEditar1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
        );

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(Alignment.LEADING)
                    .addComponent(sPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sPanel2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(sPanel2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //CHECKSTYLE:ON

    // Variables declaration - do not modify//GEN-BEGIN:variables
    GenericAction actionPesquisarPortosDaAgencia;
    SLabel labelCarregando;
    private BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}
