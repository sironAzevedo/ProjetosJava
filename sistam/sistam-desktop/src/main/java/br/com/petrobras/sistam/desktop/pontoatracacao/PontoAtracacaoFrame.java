package br.com.petrobras.sistam.desktop.pontoatracacao;

import br.com.petrobras.fcorp.swing.base.SInternalFrame;
import br.com.petrobras.fcorp.swing.base.action.GenericAction;
import br.com.petrobras.fcorp.swing.components.SButton;
import br.com.petrobras.fcorp.swing.components.SComboBox;
import br.com.petrobras.fcorp.swing.components.SLabel;
import br.com.petrobras.fcorp.swing.components.SPanel;
import br.com.petrobras.fcorp.swing.components.STable;
import br.com.petrobras.sistam.common.entity.PontoAtracacao;
import br.com.petrobras.sistam.common.entity.PontoOperacional;
import br.com.petrobras.sistam.common.entity.Porto;
import br.com.petrobras.sistam.desktop.SistamApp;
import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.ImageIcon;
import javax.swing.JScrollPane;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.border.BevelBorder;
import javax.swing.border.SoftBevelBorder;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.Binding;
import org.jdesktop.beansbinding.BindingGroup;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.JTableBinding;
import org.jdesktop.swingbinding.JTableBinding.ColumnBinding;
import org.jdesktop.swingbinding.SwingBindings;

public class PontoAtracacaoFrame extends SInternalFrame {
    private PontoAtracacaoFrameModel model;
    
    public PontoAtracacaoFrame() {
        this.model = new PontoAtracacaoFrameModel();
        initComponents();
    }

    public PontoAtracacaoFrameModel getModel() {
        return model;
    }
    
    public void adicionar(){
        PontoAtracacao novo = model.obterNovoPontoAtracacao();
        DetalhesPontoAtracacaoDialog dialog = new DetalhesPontoAtracacaoDialog(SistamApp.getSistamApp().getMainFrame(), novo);
        dialog.setVisible(true);
        
        if (dialog.getModel().isSalvo() && model.getPortoSelecionado() != null){
            model.pesquisar();
        }
    }
    
    public void editar(){
        PontoAtracacao pontoAtracacao = model.obterPontoAtracacaoParaEdicao();
        DetalhesPontoAtracacaoDialog dialog = new DetalhesPontoAtracacaoDialog(SistamApp.getSistamApp().getMainFrame(), pontoAtracacao);
        dialog.setVisible(true);
        
        if (dialog.getModel().isSalvo() && model.getPortoSelecionado() != null){
            model.pesquisar();
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings({"unchecked", "PMD"}) @SuppressFBWarnings
    //CHECKSTYLE:OFF
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new BindingGroup();

        GenericAction actionAdicionar = new GenericAction();
        GenericAction actionEditar = new GenericAction();
        GenericAction actionPesquisar = new GenericAction();
        SPanel painelBotoes = new SPanel();
        SButton botaoAdicionar = new SButton();
        SButton botaoEditar = new SButton();
        SPanel sPanel1 = new SPanel();
        JScrollPane jScrollPane1 = new JScrollPane();
        STable sTable1 = new STable();
        SPanel painelFiltros = new SPanel();
        SButton botaoPesquisar = new SButton();
        SLabel labelAgencia = new SLabel();
        SComboBox comboAgencias = new SComboBox();
        SLabel labelPorto = new SLabel();
        SComboBox comboPortos = new SComboBox();

        actionAdicionar.setIcon(new ImageIcon(getClass().getResource("/icons/add.png"))); // NOI18N
        actionAdicionar.setMethodName("adicionar");
        actionAdicionar.setTarget(this);
        actionAdicionar.setText("Adicionar");
        actionAdicionar.setToolTipText("Adiciona um novo ponto de atracação");

        actionEditar.setIcon(new ImageIcon(getClass().getResource("/icons/edit.png"))); // NOI18N
        actionEditar.setMethodName("editar");
        actionEditar.setTarget(this);
        actionEditar.setText("Editar");
        actionEditar.setToolTipText("Edita o ponto de atracação selecionado");

        Binding binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${not empty model.pontoAtracacaoSelecionado}"), actionEditar, BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        actionPesquisar.setIcon(new ImageIcon(getClass().getResource("/icons/listagem_busca.png"))); // NOI18N
        actionPesquisar.setMethodName("pesquisar");
        actionPesquisar.setTarget(model);
        actionPesquisar.setText("Pesquisar");
        actionPesquisar.setToolTipText("Pesquisa os pontos de atracação de acordo com os filtros informados");

        setTitle("Pontos de Atracação");

        painelBotoes.setBorder(new SoftBevelBorder(BevelBorder.RAISED));
        painelBotoes.setName("painelBotoes"); // NOI18N

        botaoAdicionar.setAction(actionAdicionar);
        botaoAdicionar.setName("botaoAdicionar"); // NOI18N
        painelBotoes.add(botaoAdicionar);

        botaoEditar.setAction(actionEditar);
        botaoEditar.setName("botaoEditar"); // NOI18N
        painelBotoes.add(botaoEditar);

        sPanel1.setBorder(BorderFactory.createTitledBorder("Lista de Pontos de Atracação"));
        sPanel1.setName("sPanel1"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        sTable1.setName("sTable1"); // NOI18N

        ELProperty eLProperty = ELProperty.create("${model.listaDePontos}");
        JTableBinding jTableBinding = SwingBindings.createJTableBinding(UpdateStrategy.READ_WRITE, this, eLProperty, sTable1);
        ColumnBinding columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${nome}"));
        columnBinding.setColumnName("Ponto de Atracação");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${sigla}"));
        columnBinding.setColumnName("Sigla");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${pontoOperacional}"));
        columnBinding.setColumnName("Ponto Operacional");
        columnBinding.setColumnClass(PontoOperacional.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${pontoOperacional.porto}"));
        columnBinding.setColumnName("Porto");
        columnBinding.setColumnClass(Porto.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.pontoAtracacaoSelecionado}"), sTable1, BeanProperty.create("selectedElement"));
        bindingGroup.addBinding(binding);

        jScrollPane1.setViewportView(sTable1);

        GroupLayout sPanel1Layout = new GroupLayout(sPanel1);
        sPanel1.setLayout(sPanel1Layout);
        sPanel1Layout.setHorizontalGroup(
            sPanel1Layout.createParallelGroup(Alignment.LEADING)
            .addGroup(sPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE)
                .addContainerGap())
        );
        sPanel1Layout.setVerticalGroup(
            sPanel1Layout.createParallelGroup(Alignment.LEADING)
            .addGroup(sPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                .addContainerGap())
        );

        painelFiltros.setBorder(BorderFactory.createTitledBorder("Filtros"));
        painelFiltros.setName("painelFiltros"); // NOI18N

        botaoPesquisar.setAction(actionPesquisar);
        botaoPesquisar.setName("botaoPesquisar"); // NOI18N

        labelAgencia.setText("Agência:");
        labelAgencia.setName("labelAgencia"); // NOI18N

        comboAgencias.setName("comboAgencias"); // NOI18N

        eLProperty = ELProperty.create("${model.listaDeAgencias}");
        JComboBoxBinding jComboBoxBinding = SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, this, eLProperty, comboAgencias);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.agenciaSelecionada}"), comboAgencias, BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        labelPorto.setText("Porto:");
        labelPorto.setName("labelPorto"); // NOI18N

        comboPortos.setName("comboPortos"); // NOI18N

        eLProperty = ELProperty.create("${model.listaPortos}");
        jComboBoxBinding = SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, this, eLProperty, comboPortos);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.portoSelecionado}"), comboPortos, BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        GroupLayout painelFiltrosLayout = new GroupLayout(painelFiltros);
        painelFiltros.setLayout(painelFiltrosLayout);
        painelFiltrosLayout.setHorizontalGroup(
            painelFiltrosLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(painelFiltrosLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(labelAgencia, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(comboAgencias, GroupLayout.PREFERRED_SIZE, 167, GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(labelPorto, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(comboPortos, GroupLayout.PREFERRED_SIZE, 167, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botaoPesquisar, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        painelFiltrosLayout.setVerticalGroup(
            painelFiltrosLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(painelFiltrosLayout.createSequentialGroup()
                .addGroup(painelFiltrosLayout.createParallelGroup(Alignment.LEADING)
                    .addGroup(painelFiltrosLayout.createParallelGroup(Alignment.BASELINE)
                        .addComponent(labelAgencia, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addComponent(comboAgencias, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addComponent(botaoPesquisar, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelPorto, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                    .addComponent(comboPortos, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(Alignment.LEADING)
                    .addComponent(painelBotoes, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painelFiltros, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painelFiltros, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.UNRELATED)
                .addComponent(sPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(painelBotoes, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //CHECKSTYLE:ON

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}
