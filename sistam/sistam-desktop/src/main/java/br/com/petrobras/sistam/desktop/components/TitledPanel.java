package br.com.petrobras.sistam.desktop.components;

import br.com.petrobras.fcorp.swing.components.SButton;
import br.com.petrobras.fcorp.swing.components.SLabel;
import br.com.petrobras.fcorp.swing.components.SPanel;
import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.Icon;
import javax.swing.JComponent;
import javax.swing.border.Border;

/**
 *
 * @author x4rc
 */
public class TitledPanel extends SPanel {
    public static final Border OUT_BORDER = javax.swing.BorderFactory.createEmptyBorder(2, 2, 2, 2);
    public static final Border OVER_BODER = javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 0, 0, javax.swing.UIManager.getDefaults().getColor("controlLHighlight")), javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 1, javax.swing.UIManager.getDefaults().getColor("controlDkShadow"))), javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
    public static final Border PRESSED_BORDER = javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 0, 0, javax.swing.UIManager.getDefaults().getColor("controlDkShadow")), javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 1, javax.swing.UIManager.getDefaults().getColor("controlLHighlight"))), javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

    public TitledPanel() {
        initComponents();
    }
    
    public String getTitle() {
        return this.headerLabel.getText();
    }

    public void setTitle(String newTitle) {
        Object oldTitle = this.getTitle();
        this.headerLabel.setText(newTitle);
        this.firePropertyChange("title", oldTitle, newTitle);
    }

    public Icon getIcon() {
        return this.headerLabel.getIcon();
    }

    public void setIcon(Icon newIcon) {
        Object oldIcon = this.getIcon();
        this.headerLabel.setIcon(newIcon);
        this.firePropertyChange("icon", oldIcon, newIcon);
    }

    public JComponent getContent() {
        return this.contentPane;
    }

    public void setContent(JComponent newContent) {
        JComponent oldContent = (JComponent) ((BorderLayout)this.getLayout()).getLayoutComponent(BorderLayout.CENTER);
        this.remove(oldContent);
        this.add(newContent, BorderLayout.CENTER);
        this.firePropertyChange("content", null, newContent);
    }

    public void addCommandButton(SButton button) {
        button = customizeLayoutOfButton(button);
        commandPanel.add(button);
        adjustSizeOfCommandPanel();
    }

    public void removeCommandButton(SButton button) {
        commandPanel.remove(button);
    }

    private SButton customizeLayoutOfButton(final SButton button) {
        button.setBorder(OUT_BORDER);
        button.setContentAreaFilled(false);
        button.setFocusPainted(false);
        button.addMouseListener(new MouseAdapter() {
            @Override public void mouseEntered(MouseEvent e) {
                button.setBorder(OVER_BODER);
            }
            @Override public void mousePressed(MouseEvent e) {
                button.setBorder(PRESSED_BORDER);
            }
            @Override public void mouseReleased(MouseEvent e) {
                if (button.contains(e.getPoint())) {
                    button.setBorder(OVER_BODER);
                } else {
                    button.setBorder(OUT_BORDER);
                }
            }
            @Override public void mouseExited(MouseEvent e) {
                button.setBorder(OUT_BORDER);
            }
        });
        return button;
    }

    private void adjustSizeOfCommandPanel() {
        int count = commandPanel.getComponentCount();
        int size = ((FlowLayout)commandPanel.getLayout()).getHgap() * (count + 1);
        for(int i = 0; i < count; i++) {
            size += commandPanel.getComponent(i).getPreferredSize().getWidth();
        }
        commandPanel.setPreferredSize(new Dimension(size, 10));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings({"unchecked", "PMD"}) @SuppressFBWarnings
    //CHECKSTYLE:OFF
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headerPane = new br.com.petrobras.fcorp.swing.components.SPanel();
        headerLabel = new br.com.petrobras.fcorp.swing.components.SLabel();
        commandPanel = new br.com.petrobras.fcorp.swing.components.SPanel();
        contentPane = new br.com.petrobras.fcorp.swing.components.SPanel();

        setLayout(new java.awt.BorderLayout());

        headerPane.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        headerPane.setPreferredSize(new java.awt.Dimension(400, 25));
        headerPane.setLayout(new java.awt.BorderLayout());

        headerLabel.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 4, 0, 0));
        headerLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icon.png"))); // NOI18N
        headerLabel.setText("TitledPanel");
        headerPane.add(headerLabel, java.awt.BorderLayout.CENTER);

        commandPanel.setPreferredSize(new java.awt.Dimension(40, 21));
        commandPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 0, 0));
        headerPane.add(commandPanel, java.awt.BorderLayout.EAST);

        add(headerPane, java.awt.BorderLayout.NORTH);

        javax.swing.GroupLayout contentPaneLayout = new javax.swing.GroupLayout(contentPane);
        contentPane.setLayout(contentPaneLayout);
        contentPaneLayout.setHorizontalGroup(
            contentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        contentPaneLayout.setVerticalGroup(
            contentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 275, Short.MAX_VALUE)
        );

        add(contentPane, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    //CHECKSTYLE:ON

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private br.com.petrobras.fcorp.swing.components.SPanel commandPanel;
    private br.com.petrobras.fcorp.swing.components.SPanel contentPane;
    public br.com.petrobras.fcorp.swing.components.SLabel headerLabel;
    private br.com.petrobras.fcorp.swing.components.SPanel headerPane;
    // End of variables declaration//GEN-END:variables

}
