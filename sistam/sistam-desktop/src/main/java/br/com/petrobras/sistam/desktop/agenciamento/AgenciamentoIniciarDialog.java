package br.com.petrobras.sistam.desktop.agenciamento;

import br.com.petrobras.fcorp.swing.base.SDialog;
import br.com.petrobras.fcorp.swing.base.action.GenericAction;
import br.com.petrobras.fcorp.swing.components.SButton;
import br.com.petrobras.fcorp.swing.components.SCheckBox;
import br.com.petrobras.fcorp.swing.components.SComboBox;
import br.com.petrobras.sistam.desktop.components.SistamDateChooser;
import br.com.petrobras.fcorp.swing.components.SLabel;
import br.com.petrobras.fcorp.swing.components.SPanel;
import br.com.petrobras.fcorp.swing.components.SSlider;
import br.com.petrobras.fcorp.swing.components.STextField;
import br.com.petrobras.fcorp.swing.components.dialog.DialogMessages;
import br.com.petrobras.sistam.desktop.components.SistamTimeChooser;
import br.com.petrobras.fcorp.swing.components.util.GenericDocument;
import br.com.petrobras.sistam.desktop.components.TimeZoneComboBox;
import br.com.petrobras.sistam.desktop.components.lookups.embarcacao.EmbarcacaoLookup;
import br.com.petrobras.sistam.desktop.components.lookups.porto.PortoLookup;
import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.util.ResourceBundle;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.ImageIcon;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.WindowConstants;
import javax.swing.border.LineBorder;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.Binding;
import org.jdesktop.beansbinding.BindingGroup;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;

/**
 *
 * Classe AgenciamentoIniciarDialog
 */
public class AgenciamentoIniciarDialog extends SDialog {
    
    
    private AgenciamentoIniciarModel model;
    

    /** Creates new form AgenciamentoIniciarDialog */
    public AgenciamentoIniciarDialog(java.awt.Frame parent, boolean modal) {        
        super(parent, modal);
        model = new AgenciamentoIniciarModel();
        initComponents();
        setLocationRelativeTo(parent);  
    } 

    public AgenciamentoIniciarModel getModel() {
        return model;
    }  
    
    public void salvar(){
        boolean continuar = true;
        
        if (model.verificarSeAgenciamentoJaFoiCriado()){
            continuar = DialogMessages.confirm(this, "Já existe um agenciamento para a embarcação, porto e eta informados. Deseja continuar?");
        }
        
        if (continuar){
            model.salvar();
            this.dispose();
        }
    } 

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings({"unchecked", "PMD"}) @SuppressFBWarnings
    //CHECKSTYLE:OFF
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new BindingGroup();

        GenericAction actionSalvar = new GenericAction();
        GenericAction actionFormularios = new GenericAction();
        SSlider sSlider1 = new SSlider();
        SPanel pnlCentral = new SPanel();
        SPanel sPanel3 = new SPanel();
        SPanel pnlDestino = new SPanel();
        SLabel sLabel38 = new SLabel();
        PortoLookup portoLookup1 = new PortoLookup();
        SPanel sPanel1 = new SPanel();
        SLabel sLabel3 = new SLabel();
        SComboBox sComboBox1 = new SComboBox();
        SLabel sLabel4 = new SLabel();
        SComboBox sComboBox2 = new SComboBox();
        SLabel sLabel5 = new SLabel();
        timeZoneComboBox = new TimeZoneComboBox();
        SPanel sPanel6 = new SPanel();
        EmbarcacaoLookup embarcacaoLookup1 = new EmbarcacaoLookup();
        SLabel sLabel1 = new SLabel();
        STextField sTextField1 = new STextField();
        SLabel sLabel2 = new SLabel();
        SLabel sLabel34 = new SLabel();
        SistamDateChooser dtEstimadaChegada = new SistamDateChooser();
        SistamTimeChooser hrEta = new SistamTimeChooser();
        SLabel labelArmador1 = new SLabel();
        SComboBox comboFrota = new SComboBox();
        SPanel sPanel5 = new SPanel();
        SLabel sLabel35 = new SLabel();
        SistamDateChooser dtEstimadaSaida = new SistamDateChooser();
        SistamTimeChooser hrEstSaida = new SistamTimeChooser();
        SLabel sLabel37 = new SLabel();
        PortoLookup portoDestino = new PortoLookup();
        SPanel sPanel4 = new SPanel();
        SPanel sPanel2 = new SPanel();
        CheckBoxCarga = new SCheckBox();
        CheckBoxProtecao = new SCheckBox();
        CheckBoxPlataforma = new SCheckBox();
        SLabel sLabel6 = new SLabel();
        SComboBox sComboBox3 = new SComboBox();
        SLabel sLabel7 = new SLabel();
        SComboBox sComboBox4 = new SComboBox();
        SPanel pnlBotoes = new SPanel();
        SButton btSalvar = new SButton();

        actionSalvar.setComponentToRepaint(btSalvar);
        actionSalvar.setIcon(new ImageIcon(getClass().getResource("/icons/disk.png"))); // NOI18N
        actionSalvar.setMethodName("salvar");
        actionSalvar.setTarget(this);
        actionSalvar.setText("Salvar");

        actionFormularios.setIcon(new ImageIcon(getClass().getResource("/icons/props.png"))); // NOI18N
        actionFormularios.setText("Formulários");

        sSlider1.setName("sSlider1"); // NOI18N

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Iniciar Agenciamento");

        pnlCentral.setName("pnlCentral"); // NOI18N

        ResourceBundle bundle = ResourceBundle.getBundle("sistam-labels"); // NOI18N
        sPanel3.setBorder(BorderFactory.createTitledBorder(bundle.getString("dadosAgenciamento"))); // NOI18N
        sPanel3.setName("sPanel3"); // NOI18N

        pnlDestino.setBorder(BorderFactory.createTitledBorder(bundle.getString("origem"))); // NOI18N
        pnlDestino.setName("pnlDestino"); // NOI18N

        sLabel38.setText(bundle.getString("lblPortoDestino")); // NOI18N
        sLabel38.setName("sLabel38"); // NOI18N

        portoLookup1.setName("portoLookup1"); // NOI18N

        Binding binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.agenciamento.portoOrigem}"), portoLookup1, BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        GroupLayout pnlDestinoLayout = new GroupLayout(pnlDestino);
        pnlDestino.setLayout(pnlDestinoLayout);
        pnlDestinoLayout.setHorizontalGroup(
            pnlDestinoLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlDestinoLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(sLabel38, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(portoLookup1, GroupLayout.PREFERRED_SIZE, 136, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        pnlDestinoLayout.setVerticalGroup(
            pnlDestinoLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlDestinoLayout.createSequentialGroup()
                .addGroup(pnlDestinoLayout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(sLabel38, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(portoLookup1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        sPanel1.setBorder(BorderFactory.createTitledBorder(bundle.getString("programacao"))); // NOI18N
        sPanel1.setName("sPanel1"); // NOI18N

        sLabel3.setText(bundle.getString("lblPorto")); // NOI18N
        sLabel3.setName("sLabel3"); // NOI18N

        sComboBox1.setName("sComboBox1"); // NOI18N

        ELProperty eLProperty = ELProperty.create("${model.portos}");
        JComboBoxBinding jComboBoxBinding = SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, this, eLProperty, sComboBox1);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.agenciamento.porto}"), sComboBox1, BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        sLabel4.setText(bundle.getString("lblAgencia")); // NOI18N
        sLabel4.setName("sLabel4"); // NOI18N

        sComboBox2.setName("sComboBox2"); // NOI18N

        eLProperty = ELProperty.create("${model.agencias}");
        jComboBoxBinding = SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, this, eLProperty, sComboBox2);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.agenciamento.agencia}"), sComboBox2, BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        sLabel5.setText(bundle.getString("fusoHorario")); // NOI18N
        sLabel5.setName("sLabel5"); // NOI18N

        timeZoneComboBox.setEnabled(false);
        timeZoneComboBox.setName("timeZoneComboBox"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.timeZoneSelecionado}"), timeZoneComboBox, BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        sPanel6.setBorder(new LineBorder(new Color(0, 0, 0), 1, true));
        sPanel6.setName("sPanel6"); // NOI18N

        embarcacaoLookup1.setName("embarcacaoLookup"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.agenciamento.embarcacao}"), embarcacaoLookup1, BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        sLabel1.setText(bundle.getString("lblEmbarcacao")); // NOI18N
        sLabel1.setName("sLabel1"); // NOI18N

        sTextField1.setDocument(new GenericDocument(10,
            GenericDocument.OPTION_APPLY_UPPERCASE));
    sTextField1.setName("txtViagem"); // NOI18N

    binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.agenciamento.vgm}"), sTextField1, BeanProperty.create("text"));
    bindingGroup.addBinding(binding);

    sLabel2.setText(bundle.getString("lblViagem")); // NOI18N
    sLabel2.setName("sLabel2"); // NOI18N

    sLabel34.setText(bundle.getString("lblHoraEstimada")); // NOI18N
    sLabel34.setName("sLabel34"); // NOI18N

    dtEstimadaChegada.setName("dtEstimadaChegada"); // NOI18N
    dtEstimadaChegada.setTimeChooser(hrEta);
    dtEstimadaChegada.setTimeZoneComboBox(timeZoneComboBox);

    binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.agenciamento.eta}"), dtEstimadaChegada, BeanProperty.create("date"));
    bindingGroup.addBinding(binding);

    hrEta.setName("hrEta"); // NOI18N

        GroupLayout sPanel6Layout = new GroupLayout(sPanel6);
    sPanel6.setLayout(sPanel6Layout);
    sPanel6Layout.setHorizontalGroup(
        sPanel6Layout.createParallelGroup(Alignment.LEADING)
        .addGroup(sPanel6Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(sPanel6Layout.createParallelGroup(Alignment.LEADING)
                .addComponent(sLabel1, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(sLabel2, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(ComponentPlacement.RELATED)
            .addGroup(sPanel6Layout.createParallelGroup(Alignment.LEADING, false)
                .addGroup(sPanel6Layout.createSequentialGroup()
                    .addComponent(sTextField1, GroupLayout.PREFERRED_SIZE, 87, GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(ComponentPlacement.RELATED)
                    .addComponent(sLabel34, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(ComponentPlacement.RELATED)
                    .addComponent(dtEstimadaChegada, GroupLayout.PREFERRED_SIZE, 86, GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(ComponentPlacement.RELATED)
                    .addComponent(hrEta, GroupLayout.PREFERRED_SIZE, 49, GroupLayout.PREFERRED_SIZE))
                .addComponent(embarcacaoLookup1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addContainerGap(122, Short.MAX_VALUE))
    );
    sPanel6Layout.setVerticalGroup(
        sPanel6Layout.createParallelGroup(Alignment.LEADING)
        .addGroup(sPanel6Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(sPanel6Layout.createParallelGroup(Alignment.BASELINE)
                .addComponent(sLabel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(embarcacaoLookup1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(ComponentPlacement.RELATED)
            .addGroup(sPanel6Layout.createParallelGroup(Alignment.TRAILING)
                .addComponent(sLabel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGroup(sPanel6Layout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(sTextField1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel34, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(dtEstimadaChegada, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(hrEta, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
            .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    labelArmador1.setText("Frota:");
    labelArmador1.setName("labelArmador1"); // NOI18N

    comboFrota.setName("comboFrota"); // NOI18N

    eLProperty = ELProperty.create("${model.tipoFrota}");
    jComboBoxBinding = SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, this, eLProperty, comboFrota);
    bindingGroup.addBinding(jComboBoxBinding);
    binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.agenciamento.tipoFrota}"), comboFrota, BeanProperty.create("selectedItem"));
    bindingGroup.addBinding(binding);

        GroupLayout sPanel1Layout = new GroupLayout(sPanel1);
    sPanel1.setLayout(sPanel1Layout);
    sPanel1Layout.setHorizontalGroup(
        sPanel1Layout.createParallelGroup(Alignment.LEADING)
        .addGroup(sPanel1Layout.createSequentialGroup()
            .addGap(15, 15, 15)
            .addGroup(sPanel1Layout.createParallelGroup(Alignment.LEADING)
                .addComponent(sLabel4, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(sLabel5, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(sLabel3, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(labelArmador1, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(ComponentPlacement.RELATED)
            .addGroup(sPanel1Layout.createParallelGroup(Alignment.LEADING)
                .addComponent(comboFrota, GroupLayout.PREFERRED_SIZE, 210, GroupLayout.PREFERRED_SIZE)
                .addComponent(sComboBox1, GroupLayout.PREFERRED_SIZE, 209, GroupLayout.PREFERRED_SIZE)
                .addComponent(timeZoneComboBox, GroupLayout.PREFERRED_SIZE, 209, GroupLayout.PREFERRED_SIZE)
                .addComponent(sComboBox2, GroupLayout.PREFERRED_SIZE, 209, GroupLayout.PREFERRED_SIZE))
            .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addComponent(sPanel6, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    sPanel1Layout.setVerticalGroup(
        sPanel1Layout.createParallelGroup(Alignment.LEADING)
        .addGroup(sPanel1Layout.createSequentialGroup()
            .addGroup(sPanel1Layout.createParallelGroup(Alignment.BASELINE)
                .addComponent(sLabel4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(sComboBox2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(ComponentPlacement.RELATED)
            .addGroup(sPanel1Layout.createParallelGroup(Alignment.BASELINE)
                .addComponent(sLabel5, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(timeZoneComboBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(ComponentPlacement.RELATED)
            .addGroup(sPanel1Layout.createParallelGroup(Alignment.BASELINE)
                .addComponent(sLabel3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(sComboBox1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(ComponentPlacement.RELATED)
            .addGroup(sPanel1Layout.createParallelGroup(Alignment.BASELINE)
                .addComponent(labelArmador1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(comboFrota, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(ComponentPlacement.RELATED)
            .addComponent(sPanel6, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    sPanel5.setBorder(BorderFactory.createTitledBorder(bundle.getString("saidaEmbarcacao"))); // NOI18N
    sPanel5.setName("sPanel5"); // NOI18N

    sLabel35.setText(bundle.getString("lblDataEstSaida")); // NOI18N
    sLabel35.setName("sLabel35"); // NOI18N

    dtEstimadaSaida.setName("dtEstimadaSaida"); // NOI18N
    dtEstimadaSaida.setTimeChooser(hrEstSaida);
    dtEstimadaSaida.setTimeZoneComboBox(timeZoneComboBox);

    binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.agenciamento.dataEstimadaSaida}"), dtEstimadaSaida, BeanProperty.create("date"));
    bindingGroup.addBinding(binding);

    hrEstSaida.setName("hrEstSaida"); // NOI18N

    sLabel37.setText(bundle.getString("lblPortoDestino")); // NOI18N
    sLabel37.setName("sLabel37"); // NOI18N

    portoDestino.setName("portoDestino"); // NOI18N

    binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.agenciamento.portoDestino}"), portoDestino, BeanProperty.create("value"));
    bindingGroup.addBinding(binding);

        GroupLayout sPanel5Layout = new GroupLayout(sPanel5);
    sPanel5.setLayout(sPanel5Layout);
    sPanel5Layout.setHorizontalGroup(
        sPanel5Layout.createParallelGroup(Alignment.LEADING)
        .addGroup(sPanel5Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(sPanel5Layout.createParallelGroup(Alignment.LEADING)
                .addGroup(sPanel5Layout.createSequentialGroup()
                    .addGap(10, 10, 10)
                    .addComponent(sLabel35, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(ComponentPlacement.RELATED)
                    .addComponent(dtEstimadaSaida, GroupLayout.PREFERRED_SIZE, 76, GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(ComponentPlacement.RELATED)
                    .addComponent(hrEstSaida, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE))
                .addGroup(Alignment.TRAILING, sPanel5Layout.createSequentialGroup()
                    .addComponent(sLabel37, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(ComponentPlacement.RELATED)
                    .addComponent(portoDestino, GroupLayout.PREFERRED_SIZE, 134, GroupLayout.PREFERRED_SIZE)))
            .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    sPanel5Layout.setVerticalGroup(
        sPanel5Layout.createParallelGroup(Alignment.LEADING)
        .addGroup(sPanel5Layout.createSequentialGroup()
            .addGroup(sPanel5Layout.createParallelGroup(Alignment.BASELINE)
                .addComponent(sLabel37, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(portoDestino, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(ComponentPlacement.RELATED)
            .addGroup(sPanel5Layout.createParallelGroup(Alignment.BASELINE)
                .addComponent(sLabel35, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(dtEstimadaSaida, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(hrEstSaida, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
            .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    sPanel4.setBorder(BorderFactory.createLineBorder(new Color(0, 0, 0)));
    sPanel4.setName("sPanel4"); // NOI18N

    sPanel2.setBorder(BorderFactory.createTitledBorder("Tipo Agenciamento"));
    sPanel2.setName("sPanel2"); // NOI18N

    CheckBoxCarga.setText("Carga");
    CheckBoxCarga.setName("CheckBoxCarga"); // NOI18N
    CheckBoxCarga.setOpaque(false);

    binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.agenciamento.agenciamentoCarga}"), CheckBoxCarga, BeanProperty.create("selected"));
    bindingGroup.addBinding(binding);
    binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.habilitar}"), CheckBoxCarga, BeanProperty.create("enabled"));
    bindingGroup.addBinding(binding);

    CheckBoxProtecao.setText("Proteção");
    CheckBoxProtecao.setName("CheckBoxProtecao"); // NOI18N
    CheckBoxProtecao.setOpaque(false);

    binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.agenciamento.agenciamentoProtecao}"), CheckBoxProtecao, BeanProperty.create("selected"));
    bindingGroup.addBinding(binding);
    binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.habilitar}"), CheckBoxProtecao, BeanProperty.create("enabled"));
    bindingGroup.addBinding(binding);

    CheckBoxPlataforma.setText("Plataforma");
    CheckBoxPlataforma.setName("CheckBoxPlataforma"); // NOI18N
    CheckBoxPlataforma.setOpaque(false);

    binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.agenciamento.agenciamentoPlataforma}"), CheckBoxPlataforma, BeanProperty.create("selected"));
    bindingGroup.addBinding(binding);

        GroupLayout sPanel2Layout = new GroupLayout(sPanel2);
    sPanel2.setLayout(sPanel2Layout);
    sPanel2Layout.setHorizontalGroup(
        sPanel2Layout.createParallelGroup(Alignment.LEADING)
        .addGroup(sPanel2Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(CheckBoxCarga, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(ComponentPlacement.UNRELATED)
            .addComponent(CheckBoxProtecao, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(ComponentPlacement.RELATED)
            .addComponent(CheckBoxPlataforma, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addContainerGap(23, Short.MAX_VALUE))
    );
    sPanel2Layout.setVerticalGroup(
        sPanel2Layout.createParallelGroup(Alignment.LEADING)
        .addGroup(sPanel2Layout.createSequentialGroup()
            .addGroup(sPanel2Layout.createParallelGroup(Alignment.BASELINE)
                .addComponent(CheckBoxCarga, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(CheckBoxProtecao, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(CheckBoxPlataforma, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
            .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    sLabel6.setText("Tipo Contrato:");
    sLabel6.setName("sLabel6"); // NOI18N

    sComboBox3.setName("sComboBox3"); // NOI18N

    eLProperty = ELProperty.create("${model.tipoContrato}");
    jComboBoxBinding = SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, this, eLProperty, sComboBox3);
    bindingGroup.addBinding(jComboBoxBinding);
    binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.agenciamento.tipoContrato}"), sComboBox3, BeanProperty.create("selectedItem"));
    bindingGroup.addBinding(binding);

    sLabel7.setText("Tipo Armador:");
    sLabel7.setName("sLabel7"); // NOI18N

    sComboBox4.setName("sComboBox4"); // NOI18N

    eLProperty = ELProperty.create("${model.tipoArmador}");
    jComboBoxBinding = SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, this, eLProperty, sComboBox4);
    bindingGroup.addBinding(jComboBoxBinding);
    binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.agenciamento.tipoArmador}"), sComboBox4, BeanProperty.create("selectedItem"));
    bindingGroup.addBinding(binding);

        GroupLayout sPanel4Layout = new GroupLayout(sPanel4);
    sPanel4.setLayout(sPanel4Layout);
    sPanel4Layout.setHorizontalGroup(
        sPanel4Layout.createParallelGroup(Alignment.LEADING)
        .addGroup(sPanel4Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(sPanel4Layout.createParallelGroup(Alignment.LEADING)
                .addGroup(sPanel4Layout.createSequentialGroup()
                    .addGroup(sPanel4Layout.createParallelGroup(Alignment.LEADING)
                        .addComponent(sLabel6, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addComponent(sLabel7, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(ComponentPlacement.RELATED)
                    .addGroup(sPanel4Layout.createParallelGroup(Alignment.LEADING, false)
                        .addComponent(sComboBox4, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(sComboBox3, GroupLayout.PREFERRED_SIZE, 116, GroupLayout.PREFERRED_SIZE))
                    .addGap(0, 0, Short.MAX_VALUE))
                .addComponent(sPanel2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addContainerGap())
    );
    sPanel4Layout.setVerticalGroup(
        sPanel4Layout.createParallelGroup(Alignment.LEADING)
        .addGroup(sPanel4Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(sPanel4Layout.createParallelGroup(Alignment.CENTER)
                .addComponent(sLabel6, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(sComboBox3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(ComponentPlacement.UNRELATED)
            .addGroup(sPanel4Layout.createParallelGroup(Alignment.CENTER)
                .addComponent(sLabel7, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(sComboBox4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(ComponentPlacement.RELATED)
            .addComponent(sPanel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

        GroupLayout sPanel3Layout = new GroupLayout(sPanel3);
    sPanel3.setLayout(sPanel3Layout);
    sPanel3Layout.setHorizontalGroup(
        sPanel3Layout.createParallelGroup(Alignment.LEADING)
        .addGroup(sPanel3Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(sPanel3Layout.createParallelGroup(Alignment.LEADING)
                .addComponent(sPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(sPanel3Layout.createSequentialGroup()
                    .addComponent(sPanel4, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addPreferredGap(ComponentPlacement.RELATED)
                    .addGroup(sPanel3Layout.createParallelGroup(Alignment.LEADING, false)
                        .addComponent(pnlDestino, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(sPanel5, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addContainerGap())
    );
    sPanel3Layout.setVerticalGroup(
        sPanel3Layout.createParallelGroup(Alignment.LEADING)
        .addGroup(sPanel3Layout.createSequentialGroup()
            .addComponent(sPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(ComponentPlacement.RELATED)
            .addGroup(sPanel3Layout.createParallelGroup(Alignment.LEADING, false)
                .addGroup(sPanel3Layout.createSequentialGroup()
                    .addComponent(pnlDestino, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addGap(5, 5, 5)
                    .addComponent(sPanel5, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addComponent(sPanel4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
            .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    pnlBotoes.setBorder(BorderFactory.createEtchedBorder());
    pnlBotoes.setName("pnlBotoes"); // NOI18N
    pnlBotoes.setPreferredSize(new Dimension(14, 40));

    btSalvar.setAction(actionSalvar);
    btSalvar.setText("Salvar");
    btSalvar.setName("btSalvar"); // NOI18N
    pnlBotoes.add(btSalvar);

        GroupLayout pnlCentralLayout = new GroupLayout(pnlCentral);
    pnlCentral.setLayout(pnlCentralLayout);
    pnlCentralLayout.setHorizontalGroup(
        pnlCentralLayout.createParallelGroup(Alignment.LEADING)
        .addGroup(Alignment.TRAILING, pnlCentralLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(pnlCentralLayout.createParallelGroup(Alignment.TRAILING)
                .addComponent(pnlBotoes, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(sPanel3, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addContainerGap())
    );
    pnlCentralLayout.setVerticalGroup(
        pnlCentralLayout.createParallelGroup(Alignment.LEADING)
        .addGroup(pnlCentralLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(sPanel3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(ComponentPlacement.RELATED)
            .addComponent(pnlBotoes, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    getContentPane().add(pnlCentral, BorderLayout.CENTER);

    bindingGroup.bind();

    pack();
    }// </editor-fold>//GEN-END:initComponents
    //CHECKSTYLE:ON

    // Variables declaration - do not modify//GEN-BEGIN:variables
    SCheckBox CheckBoxCarga;
    SCheckBox CheckBoxPlataforma;
    SCheckBox CheckBoxProtecao;
    TimeZoneComboBox timeZoneComboBox;
    private BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}
