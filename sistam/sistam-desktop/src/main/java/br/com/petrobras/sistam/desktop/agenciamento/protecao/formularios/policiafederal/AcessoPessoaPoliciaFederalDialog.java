package br.com.petrobras.sistam.desktop.agenciamento.protecao.formularios.policiafederal;

import br.com.petrobras.fcorp.swing.base.SDialog;
import br.com.petrobras.fcorp.swing.base.action.GenericAction;
import br.com.petrobras.fcorp.swing.components.SButton;
import br.com.petrobras.fcorp.swing.components.SComboBox;
import br.com.petrobras.fcorp.swing.components.SDateChooser;
import br.com.petrobras.fcorp.swing.components.SLabel;
import br.com.petrobras.fcorp.swing.components.SPanel;
import br.com.petrobras.fcorp.swing.components.STable;
import br.com.petrobras.fcorp.swing.components.STextField;
import br.com.petrobras.fcorp.swing.components.STimeChooser;
import br.com.petrobras.fcorp.swing.components.renderers.ImageBooleanRenderer;
import br.com.petrobras.fcorp.swing.components.util.GenericDocument;
import br.com.petrobras.sistam.common.entity.ServicoAcessoPessoa;
import br.com.petrobras.sistam.desktop.components.SistamDateChooser;
import br.com.petrobras.sistam.desktop.components.SistamTimeChooser;
import br.com.petrobras.sistam.desktop.components.TimeZoneComboBox;
import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
import java.awt.BorderLayout;
import java.awt.Component;
import java.util.Date;
import java.util.TimeZone;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JScrollPane;
import javax.swing.LayoutStyle;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.WindowConstants;
import javax.swing.border.BevelBorder;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.beansbinding.AutoBinding;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.Binding;
import org.jdesktop.beansbinding.BindingGroup;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.JTableBinding;
import org.jdesktop.swingbinding.SwingBindings;

public class AcessoPessoaPoliciaFederalDialog extends SDialog {
    private AcessoPessoaPoliciaFederalModel model;
    
    public AcessoPessoaPoliciaFederalDialog(java.awt.Frame parent, ServicoAcessoPessoa servicoAcessoPessoa) {
        super(parent, true);
        model = new AcessoPessoaPoliciaFederalModel(servicoAcessoPessoa);
        initComponents();        
        setLocationRelativeTo(parent);   
        habilitarComponentes();
        
    }

    public AcessoPessoaPoliciaFederalModel getModel() {
        return model;
    }
    
    public void gerarFormulario(){
        model.validar();
        model.gerarFormulario();
        dispose();
    }
    
    public void adiconarVisitante(){
        model.adiconarVisitante();
    }
    
    public void excluirVisitante(){
        model.excluirVisitante();
    }
    
    public final void habilitarComponentes(){
        if(model.getFiltro().isRequerimentoEmbarque() || model.getFiltro().isRequerimentoAcessoEmbarcacao()){
            componentesDesembarque();
            componentesVisitaAEmbarcacao();
        }else if((model.getFiltro().isRequerimentoDesembarque())){
            componentesVisitaAEmbarcacao();
        }else if((model.getFiltro().isRequerimentoVisitaEmbarcacao())){
            componentesDesembarque();
        }
    }
    
    public void componentesDesembarque(){ 
        spRequerimentoDesembarque.setEnabled(false);
        txtEmpresa.setEnabled(false);
        txtNumeroVoo.setEnabled(false);
        DcDataVoo.setEnabled(false);
        timeHoraVoo.setEnabled(false);
        txtDestino.setEnabled(false);
    }
    
    public void componentesVisitaAEmbarcacao(){
        spRequerimentoVisitaEmbarcacao.setEnabled(false);
        txtNomeVisitante.setEnabled(false);
        txtParentescoVisitante.setEnabled(false);
        dcDataNascimento.setEnabled(false);
        txtTipoDocumento.setEnabled(false);
        txtNumeroDocumento.setEnabled(false);
        tabelaVisitantes.setEnabled(false);
        btnAdicionarVisitante.setEnabled(false);
        btnRemoverVisitante.setEnabled(false);        
    }
    
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings({"unchecked", "PMD"}) @SuppressFBWarnings
    //CHECKSTYLE:OFF
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new BindingGroup();

        GenericAction actionGerarFormulario = new GenericAction();
        ImageBooleanRenderer imageBooleanGerado = new ImageBooleanRenderer();
        GenericAction actionAdicionarVisitante = new GenericAction();
        GenericAction actionExcluirVisitante = new GenericAction();
        SPanel pnlPrincipal = new SPanel();
        SPanel panelPessoas = new SPanel();
        JScrollPane jScrollPane2 = new JScrollPane();
        STable sTable2 = new STable();
        SPanel panelRepresentanteLegal = new SPanel();
        SLabel sLabel2 = new SLabel();
        SComboBox sComboBox1 = new SComboBox();
        SPanel sPanel1 = new SPanel();
        SLabel sLabel1 = new SLabel();
        SLabel sLabel3 = new SLabel();
        spRequerimentoVisitaEmbarcacao = new SPanel();
        scrollTripulante = new JScrollPane();
        tabelaVisitantes = new STable();
        btnAdicionarVisitante = new SButton();
        btnRemoverVisitante = new SButton();
        SLabel sLabel12 = new SLabel();
        txtNomeVisitante = new STextField();
        SLabel sLabel13 = new SLabel();
        txtParentescoVisitante = new STextField();
        SLabel sLabel14 = new SLabel();
        dcDataNascimento = new SDateChooser();
        SLabel sLabel15 = new SLabel();
        txtTipoDocumento = new STextField();
        SLabel sLabel16 = new SLabel();
        txtNumeroDocumento = new STextField();
        spRequerimentoDesembarque = new SPanel();
        SLabel sLabel8 = new SLabel();
        txtEmpresa = new STextField();
        SLabel sLabel9 = new SLabel();
        txtNumeroVoo = new STextField();
        SLabel sLabel10 = new SLabel();
        SLabel sLabel11 = new SLabel();
        txtDestino = new STextField();
        DcDataVoo = new SistamDateChooser();
        timeHoraVoo = new SistamTimeChooser();
        SPanel pnlBotoes = new SPanel();
        SButton sButton1 = new SButton();

        actionGerarFormulario.setIcon(new ImageIcon(getClass().getResource("/icons/print.png"))); // NOI18N
        actionGerarFormulario.setMethodName("gerarFormulario");
        actionGerarFormulario.setTarget(this);
        actionGerarFormulario.setText("Gerar Formulário");
        actionGerarFormulario.setToolTipText("Gera o formulário");

        imageBooleanGerado.setFalseIcon(new ImageIcon(getClass().getResource("/icons/props.png"))); // NOI18N
        imageBooleanGerado.setTrueIcon(new ImageIcon(getClass().getResource("/icons/document-accept.png"))); // NOI18N

        actionAdicionarVisitante.setIcon(new ImageIcon(getClass().getResource("/icons/add.png"))); // NOI18N
        actionAdicionarVisitante.setMethodName("adiconarVisitante");
        actionAdicionarVisitante.setTarget(model);
        actionAdicionarVisitante.setText("");
        actionAdicionarVisitante.setToolTipText("Adicionar Visitante");

        actionExcluirVisitante.setConfirm("Confirma exclusão do visitante selecionado?");
        actionExcluirVisitante.setIcon(new ImageIcon(getClass().getResource("/icons/delete.png"))); // NOI18N
        actionExcluirVisitante.setMethodName("excluirVisitante");
        actionExcluirVisitante.setTarget(model);
        actionExcluirVisitante.setToolTipText("Excluir Visitante");

        Binding binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.filtro.visitanteSelecionado!=null}"), actionExcluirVisitante, BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Formulário Polícia Federal");

        pnlPrincipal.setBorder(BorderFactory.createEtchedBorder());
        pnlPrincipal.setName("pnlPrincipal"); // NOI18N

        panelPessoas.setBorder(BorderFactory.createTitledBorder("Pessoas"));
        panelPessoas.setName("panelPessoas"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        sTable2.setSortable(true);
        sTable2.setName("sTable2"); // NOI18N

        ELProperty eLProperty = ELProperty.create("${model.filtro.pessoasVO}");
        JTableBinding jTableBinding = SwingBindings.createJTableBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, sTable2);
        JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${selecionado}"));
        columnBinding.setColumnName("");
        columnBinding.setColumnClass(Boolean.class);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${pessoa.nome}"));
        columnBinding.setColumnName("Nome");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${pessoa.formularioGeradoPolicia}"));
        columnBinding.setColumnName("");
        columnBinding.setColumnClass(Boolean.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane2.setViewportView(sTable2);
        sTable2.getColumnModel().getColumn(0).setPreferredWidth(20);
        sTable2.getColumnModel().getColumn(0).setMaxWidth(20);
        sTable2.getColumnModel().getColumn(2).setPreferredWidth(20);
        sTable2.getColumnModel().getColumn(2).setMaxWidth(20);
        sTable2.getColumnModel().getColumn(2).setCellRenderer(imageBooleanGerado);

        GroupLayout panelPessoasLayout = new GroupLayout(panelPessoas);
        panelPessoas.setLayout(panelPessoasLayout);
        panelPessoasLayout.setHorizontalGroup(
            panelPessoasLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(panelPessoasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        panelPessoasLayout.setVerticalGroup(
            panelPessoasLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(panelPessoasLayout.createSequentialGroup()
                .addComponent(jScrollPane2, GroupLayout.PREFERRED_SIZE, 134, GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        panelRepresentanteLegal.setName("panelRepresentanteLegal"); // NOI18N

        sLabel2.setText("Representante Legal:");
        sLabel2.setName("sLabel2"); // NOI18N

        sComboBox1.setName("sComboBox1"); // NOI18N
        sComboBox1.setPopupResizeEnabled(true);

        eLProperty = ELProperty.create("${model.listaRepresentanteLegal}");
        JComboBoxBinding jComboBoxBinding = SwingBindings.createJComboBoxBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, sComboBox1);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.filtro.representanteLegal}"), sComboBox1, BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        GroupLayout panelRepresentanteLegalLayout = new GroupLayout(panelRepresentanteLegal);
        panelRepresentanteLegal.setLayout(panelRepresentanteLegalLayout);
        panelRepresentanteLegalLayout.setHorizontalGroup(
            panelRepresentanteLegalLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(panelRepresentanteLegalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sLabel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sComboBox1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelRepresentanteLegalLayout.setVerticalGroup(
            panelRepresentanteLegalLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(panelRepresentanteLegalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelRepresentanteLegalLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(sLabel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sComboBox1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        sPanel1.setBorder(BorderFactory.createTitledBorder("Legenda"));
        sPanel1.setName("sPanel1"); // NOI18N
        sPanel1.setOpaque(false);

        sLabel1.setIcon(new ImageIcon(getClass().getResource("/icons/document-accept.png"))); // NOI18N
        sLabel1.setText("Formulário Gerado");
        sLabel1.setName("sLabel1"); // NOI18N

        sLabel3.setIcon(new ImageIcon(getClass().getResource("/icons/props.png"))); // NOI18N
        sLabel3.setText("Formulário Não Gerado");
        sLabel3.setName("sLabel3"); // NOI18N

        GroupLayout sPanel1Layout = new GroupLayout(sPanel1);
        sPanel1.setLayout(sPanel1Layout);
        sPanel1Layout.setHorizontalGroup(
            sPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(sPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sLabel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sLabel3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        sPanel1Layout.setVerticalGroup(
            sPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(sPanel1Layout.createSequentialGroup()
                .addGroup(sPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(sLabel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        spRequerimentoVisitaEmbarcacao.setBorder(BorderFactory.createTitledBorder("Requerimento de Visita"));
        spRequerimentoVisitaEmbarcacao.setName("spRequerimentoVisitaEmbarcacao"); // NOI18N

        scrollTripulante.setName("scrollTripulante"); // NOI18N

        tabelaVisitantes.setSortable(true);
        tabelaVisitantes.setName("tabelaVisitantes"); // NOI18N
        tabelaVisitantes.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        eLProperty = ELProperty.create("${model.filtro.visitanteVOs}");
        jTableBinding = SwingBindings.createJTableBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, tabelaVisitantes);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${nome}"));
        columnBinding.setColumnName("Nome");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${parentesco}"));
        columnBinding.setColumnName("Parentesco");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${dtNascimento}"));
        columnBinding.setColumnName("Dt Nascimento");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${tipoDocumento}"));
        columnBinding.setColumnName("Tipo Documento");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${numeroDocumento}"));
        columnBinding.setColumnName("Nº Documento");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.filtro.visitanteSelecionado}"), tabelaVisitantes, BeanProperty.create("selectedElement"));
        bindingGroup.addBinding(binding);

        scrollTripulante.setViewportView(tabelaVisitantes);

        btnAdicionarVisitante.setAction(actionAdicionarVisitante);
        btnAdicionarVisitante.setToolTipText("Adicionar Visitante");
        btnAdicionarVisitante.setName("btnAdicionarVisitante"); // NOI18N

        btnRemoverVisitante.setAction(actionExcluirVisitante);
        btnRemoverVisitante.setToolTipText("Excluir Visitante");
        btnRemoverVisitante.setName("btnRemoverVisitante"); // NOI18N

        sLabel12.setText("Nome:");
        sLabel12.setName("sLabel12"); // NOI18N

        txtNomeVisitante.setDocument(new GenericDocument(30));
        txtNomeVisitante.setName("txtNomeVisitante"); // NOI18N

        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.filtro.visitante.nome}"), txtNomeVisitante, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        sLabel13.setText("Parentesco:");
        sLabel13.setName("sLabel13"); // NOI18N

        txtParentescoVisitante.setDocument(new GenericDocument(9));
        txtParentescoVisitante.setName("txtParentescoVisitante"); // NOI18N

        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.filtro.visitante.parentesco}"), txtParentescoVisitante, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        sLabel14.setText("Data de Nascimento:");
        sLabel14.setName("sLabel14"); // NOI18N

        dcDataNascimento.setName("dcDataNascimento"); // NOI18N

        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.filtro.visitante.dataNascimento}"), dcDataNascimento, BeanProperty.create("date"));
        bindingGroup.addBinding(binding);

        sLabel15.setText("Tipo Documento:");
        sLabel15.setName("sLabel15"); // NOI18N

        txtTipoDocumento.setDocument(new GenericDocument(10));
        txtTipoDocumento.setName("txtTipoDocumento"); // NOI18N

        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.filtro.visitante.tipoDocumento}"), txtTipoDocumento, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        sLabel16.setText("Nº Documento:");
        sLabel16.setName("sLabel16"); // NOI18N

        txtNumeroDocumento.setDocument(new GenericDocument(14));
        txtNumeroDocumento.setName("txtNumeroDocumento"); // NOI18N

        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.filtro.visitante.numeroDocumento}"), txtNumeroDocumento, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        GroupLayout spRequerimentoVisitaEmbarcacaoLayout = new GroupLayout(spRequerimentoVisitaEmbarcacao);
        spRequerimentoVisitaEmbarcacao.setLayout(spRequerimentoVisitaEmbarcacaoLayout);
        spRequerimentoVisitaEmbarcacaoLayout.setHorizontalGroup(
            spRequerimentoVisitaEmbarcacaoLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(spRequerimentoVisitaEmbarcacaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(spRequerimentoVisitaEmbarcacaoLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(sLabel12, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel13, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel15, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(spRequerimentoVisitaEmbarcacaoLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(spRequerimentoVisitaEmbarcacaoLayout.createSequentialGroup()
                        .addGroup(spRequerimentoVisitaEmbarcacaoLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(txtParentescoVisitante, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtTipoDocumento, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(spRequerimentoVisitaEmbarcacaoLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addGroup(GroupLayout.Alignment.TRAILING, spRequerimentoVisitaEmbarcacaoLayout.createSequentialGroup()
                                .addComponent(sLabel14, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dcDataNascimento, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                            .addGroup(GroupLayout.Alignment.TRAILING, spRequerimentoVisitaEmbarcacaoLayout.createSequentialGroup()
                                .addComponent(sLabel16, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNumeroDocumento, GroupLayout.PREFERRED_SIZE, 119, GroupLayout.PREFERRED_SIZE))))
                    .addComponent(txtNomeVisitante, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(59, 59, 59))
            .addGroup(GroupLayout.Alignment.TRAILING, spRequerimentoVisitaEmbarcacaoLayout.createSequentialGroup()
                .addGap(0, 10, Short.MAX_VALUE)
                .addComponent(scrollTripulante, GroupLayout.PREFERRED_SIZE, 504, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(spRequerimentoVisitaEmbarcacaoLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(btnRemoverVisitante, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdicionarVisitante, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );
        spRequerimentoVisitaEmbarcacaoLayout.setVerticalGroup(
            spRequerimentoVisitaEmbarcacaoLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(spRequerimentoVisitaEmbarcacaoLayout.createSequentialGroup()
                .addGroup(spRequerimentoVisitaEmbarcacaoLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(sLabel12, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNomeVisitante, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(spRequerimentoVisitaEmbarcacaoLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(sLabel13, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtParentescoVisitante, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel14, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(dcDataNascimento, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(spRequerimentoVisitaEmbarcacaoLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(sLabel15, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTipoDocumento, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel16, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNumeroDocumento, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(spRequerimentoVisitaEmbarcacaoLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(scrollTripulante, GroupLayout.PREFERRED_SIZE, 101, GroupLayout.PREFERRED_SIZE)
                    .addGroup(GroupLayout.Alignment.TRAILING, spRequerimentoVisitaEmbarcacaoLayout.createSequentialGroup()
                        .addComponent(btnAdicionarVisitante, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemoverVisitante, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)))
                .addGap(33, 33, 33))
        );

        spRequerimentoDesembarque.setBorder(BorderFactory.createTitledBorder("Requerimento de Desembarque"));
        spRequerimentoDesembarque.setName("spRequerimentoDesembarque"); // NOI18N

        sLabel8.setText("Empresa:");
        sLabel8.setName("sLabel8"); // NOI18N

        txtEmpresa.setDocument(new GenericDocument(24));
        txtEmpresa.setName("txtEmpresa"); // NOI18N

        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.empresaAviacao}"), txtEmpresa, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        sLabel9.setText("Nº Vôo");
        sLabel9.setName("sLabel9"); // NOI18N

        txtNumeroVoo.setDocument(new GenericDocument(7));
        txtNumeroVoo.setName("txtNumeroVoo"); // NOI18N

        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.numeroVoo}"), txtNumeroVoo, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        sLabel10.setText("Data/Hora:");
        sLabel10.setName("sLabel10"); // NOI18N

        sLabel11.setText("Destino:");
        sLabel11.setName("sLabel11"); // NOI18N

        txtDestino.setDocument(new GenericDocument(28));
        txtDestino.setName("txtDestino"); // NOI18N

        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.destino}"), txtDestino, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        DcDataVoo.setName("DcDataVoo"); // NOI18N
        DcDataVoo.setTimeChooser(timeHoraVoo);

        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.dataVoo}"), DcDataVoo, BeanProperty.create("date"));
        bindingGroup.addBinding(binding);

        timeHoraVoo.setName("timeHoraVoo"); // NOI18N

        GroupLayout spRequerimentoDesembarqueLayout = new GroupLayout(spRequerimentoDesembarque);
        spRequerimentoDesembarque.setLayout(spRequerimentoDesembarqueLayout);
        spRequerimentoDesembarqueLayout.setHorizontalGroup(
            spRequerimentoDesembarqueLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(spRequerimentoDesembarqueLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(spRequerimentoDesembarqueLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(sLabel8, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel9, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel10, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel11, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(spRequerimentoDesembarqueLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(txtEmpresa, GroupLayout.DEFAULT_SIZE, 496, Short.MAX_VALUE)
                    .addComponent(txtNumeroVoo, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtDestino, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(spRequerimentoDesembarqueLayout.createSequentialGroup()
                        .addComponent(DcDataVoo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(timeHoraVoo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        spRequerimentoDesembarqueLayout.setVerticalGroup(
            spRequerimentoDesembarqueLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(spRequerimentoDesembarqueLayout.createSequentialGroup()
                .addGroup(spRequerimentoDesembarqueLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(sLabel8, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmpresa, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(spRequerimentoDesembarqueLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(sLabel9, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNumeroVoo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(spRequerimentoDesembarqueLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(spRequerimentoDesembarqueLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                        .addComponent(DcDataVoo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addComponent(timeHoraVoo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                    .addComponent(sLabel10, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(spRequerimentoDesembarqueLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(sLabel11, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDestino, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        spRequerimentoDesembarqueLayout.linkSize(SwingConstants.VERTICAL, new Component[] {txtDestino, txtEmpresa, txtNumeroVoo});

        GroupLayout pnlPrincipalLayout = new GroupLayout(pnlPrincipal);
        pnlPrincipal.setLayout(pnlPrincipalLayout);
        pnlPrincipalLayout.setHorizontalGroup(
            pnlPrincipalLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(panelPessoas, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(spRequerimentoDesembarque, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(spRequerimentoVisitaEmbarcacao, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlPrincipalLayout.createSequentialGroup()
                .addGroup(pnlPrincipalLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(panelRepresentanteLegal, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlPrincipalLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(sPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlPrincipalLayout.setVerticalGroup(
            pnlPrincipalLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, pnlPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelPessoas, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spRequerimentoDesembarque, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spRequerimentoVisitaEmbarcacao, GroupLayout.PREFERRED_SIZE, 211, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelRepresentanteLegal, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sPanel1, GroupLayout.PREFERRED_SIZE, 48, GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(pnlPrincipal, BorderLayout.CENTER);

        pnlBotoes.setBorder(BorderFactory.createBevelBorder(BevelBorder.RAISED));
        pnlBotoes.setName("pnlBotoes"); // NOI18N

        sButton1.setAction(actionGerarFormulario);
        sButton1.setName("sButton1"); // NOI18N
        pnlBotoes.add(sButton1);

        getContentPane().add(pnlBotoes, BorderLayout.PAGE_END);

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //CHECKSTYLE:ON
    // Variables declaration - do not modify//GEN-BEGIN:variables
    SistamDateChooser DcDataVoo;
    SButton btnAdicionarVisitante;
    SButton btnRemoverVisitante;
    SDateChooser dcDataNascimento;
    JScrollPane scrollTripulante;
    SPanel spRequerimentoDesembarque;
    SPanel spRequerimentoVisitaEmbarcacao;
    STable tabelaVisitantes;
    SistamTimeChooser timeHoraVoo;
    STextField txtDestino;
    STextField txtEmpresa;
    STextField txtNomeVisitante;
    STextField txtNumeroDocumento;
    STextField txtNumeroVoo;
    STextField txtParentescoVisitante;
    STextField txtTipoDocumento;
    private BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}
