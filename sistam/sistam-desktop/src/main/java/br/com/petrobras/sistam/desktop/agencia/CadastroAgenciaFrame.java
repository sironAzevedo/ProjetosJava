package br.com.petrobras.sistam.desktop.agencia;

import br.com.petrobras.fcorp.swing.base.SInternalFrame;
import br.com.petrobras.fcorp.swing.base.action.GenericAction;
import br.com.petrobras.fcorp.swing.components.SButton;
import br.com.petrobras.fcorp.swing.components.SPanel;
import br.com.petrobras.fcorp.swing.components.STable;
import br.com.petrobras.sistam.common.entity.Agencia;
import br.com.petrobras.sistam.desktop.SistamApp;
import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.ImageIcon;
import javax.swing.JScrollPane;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.border.BevelBorder;
import javax.swing.border.SoftBevelBorder;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.Binding;
import org.jdesktop.beansbinding.BindingGroup;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.swingbinding.JTableBinding;
import org.jdesktop.swingbinding.JTableBinding.ColumnBinding;
import org.jdesktop.swingbinding.SwingBindings;

public class CadastroAgenciaFrame extends SInternalFrame {
    private CadastroAgenciaModel model;
    
    public CadastroAgenciaFrame() {
        this.model = new CadastroAgenciaModel();
        initComponents();
    }

    public CadastroAgenciaModel getModel() {
        return model;
    }
    
    public void editar(){
        DetalheAgenciaDialog dialog = new DetalheAgenciaDialog(SistamApp.getSistamApp().getMainFrame(), model.getAgenciaSelecionada());
        dialog.setVisible(true);
        model.consultar();
    }

    public void incluir(){
        DetalheAgenciaDialog dialog = new DetalheAgenciaDialog(SistamApp.getSistamApp().getMainFrame(), new Agencia());
        dialog.setVisible(true);
        model.consultar();
    }
    
    public void abrirTelaRepresentante(){
        CadastroAgenciaRepresentanteLegalDialog dialog = new CadastroAgenciaRepresentanteLegalDialog(SistamApp.getSistamApp().getMainFrame(), model.getAgenciaSelecionada());
        dialog.setVisible(true);
        model.consultar();
    }
    
    public void abrirTelaOrgaoDespacho(){
        CadastroAgenciaOrgaoDespacholDialog dialog = new CadastroAgenciaOrgaoDespacholDialog(SistamApp.getSistamApp().getMainFrame(), model.getAgenciaSelecionada());
        dialog.setVisible(true);
        model.consultar();
    }
    
    public void abrirTelaDestinatarios(){
        DestinatariosDialog dialog = new DestinatariosDialog(SistamApp.getSistamApp().getMainFrame(), model.getAgenciaSelecionada());
        dialog.setVisible(true);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings({"unchecked", "PMD"}) @SuppressFBWarnings
    //CHECKSTYLE:OFF
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new BindingGroup();

        GenericAction actionEditar = new GenericAction();
        GenericAction actionRepresentante = new GenericAction();
        GenericAction actionOrgaoDespacho = new GenericAction();
        GenericAction actionIncluir = new GenericAction();
        GenericAction actionDestinatarios = new GenericAction();
        SPanel painelBotoes = new SPanel();
        SButton botaoEditar3 = new SButton();
        SButton botaoEditar = new SButton();
        SButton botaoEditar1 = new SButton();
        SButton botaoEditar2 = new SButton();
        SButton botaoEditar4 = new SButton();
        SPanel sPanel1 = new SPanel();
        JScrollPane jScrollPane1 = new JScrollPane();
        STable sTable1 = new STable();

        actionEditar.setIcon(new ImageIcon(getClass().getResource("/icons/edit.png"))); // NOI18N
        actionEditar.setMethodName("editar");
        actionEditar.setTarget(this);
        actionEditar.setText("Editar");
        actionEditar.setToolTipText("Edita a agência selecionada");

        Binding binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${not empty model.agenciaSelecionada}"), actionEditar, BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        actionRepresentante.setIcon(new ImageIcon(getClass().getResource("/icons/group.png"))); // NOI18N
        actionRepresentante.setMethodName("abrirTelaRepresentante");
        actionRepresentante.setTarget(this);
        actionRepresentante.setText("Representante Legal");
        actionRepresentante.setToolTipText("Visualiza representantes legais da agência selecionada");

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${not empty model.agenciaSelecionada}"), actionRepresentante, BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        actionOrgaoDespacho.setIcon(new ImageIcon(getClass().getResource("/icons/building.png"))); // NOI18N
        actionOrgaoDespacho.setMethodName("abrirTelaOrgaoDespacho");
        actionOrgaoDespacho.setTarget(this);
        actionOrgaoDespacho.setText("Órgão Despacho");
        actionOrgaoDespacho.setToolTipText("Visualiza órgãos da agência selecionada");

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${not empty model.agenciaSelecionada}"), actionOrgaoDespacho, BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        actionIncluir.setIcon(new ImageIcon(getClass().getResource("/icons/add.png"))); // NOI18N
        actionIncluir.setMethodName("incluir");
        actionIncluir.setNeededSecurityResources(new String[] {"INCLUIR_AGENCIA"});
        actionIncluir.setTarget(this);
        actionIncluir.setText("Incluir");
        actionIncluir.setToolTipText("Inclui uma nova agência");

        actionDestinatarios.setIcon(new ImageIcon(getClass().getResource("/icons/address_16.png"))); // NOI18N
        actionDestinatarios.setMethodName("abrirTelaDestinatarios");
        actionDestinatarios.setTarget(this);
        actionDestinatarios.setText("Destinatários");
        actionDestinatarios.setToolTipText("Visualiza e cadastra novos destinatários");

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${not empty model.agenciaSelecionada}"), actionDestinatarios, BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        setTitle("Agências");
        setToolTipText("");

        painelBotoes.setBorder(new SoftBevelBorder(BevelBorder.RAISED));
        painelBotoes.setName("painelBotoes"); // NOI18N

        botaoEditar3.setAction(actionIncluir);
        botaoEditar3.setName("botaoEditar3"); // NOI18N
        painelBotoes.add(botaoEditar3);

        botaoEditar.setAction(actionEditar);
        botaoEditar.setName("botaoEditar"); // NOI18N
        painelBotoes.add(botaoEditar);

        botaoEditar1.setAction(actionRepresentante);
        botaoEditar1.setName("botaoEditar1"); // NOI18N
        painelBotoes.add(botaoEditar1);

        botaoEditar2.setAction(actionOrgaoDespacho);
        botaoEditar2.setName("botaoEditar2"); // NOI18N
        painelBotoes.add(botaoEditar2);

        botaoEditar4.setAction(actionDestinatarios);
        botaoEditar4.setName("botaoEditar4"); // NOI18N
        painelBotoes.add(botaoEditar4);

        sPanel1.setBorder(BorderFactory.createTitledBorder("Lista de Agências"));
        sPanel1.setName("sPanel1"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        sTable1.setSortable(true);
        sTable1.setName("sTable1"); // NOI18N

        ELProperty eLProperty = ELProperty.create("${model.agencias}");
        JTableBinding jTableBinding = SwingBindings.createJTableBinding(UpdateStrategy.READ_WRITE, this, eLProperty, sTable1);
        ColumnBinding columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${cnpjComMascara}"));
        columnBinding.setColumnName("CNPJ");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${nome}"));
        columnBinding.setColumnName("Nome");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${email}"));
        columnBinding.setColumnName("E-mail");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${telefone}"));
        columnBinding.setColumnName("Telefone");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${cidade}"));
        columnBinding.setColumnName("Cidade");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.agenciaSelecionada}"), sTable1, BeanProperty.create("selectedElement"));
        bindingGroup.addBinding(binding);

        jScrollPane1.setViewportView(sTable1);

        GroupLayout sPanel1Layout = new GroupLayout(sPanel1);
        sPanel1.setLayout(sPanel1Layout);
        sPanel1Layout.setHorizontalGroup(
            sPanel1Layout.createParallelGroup(Alignment.LEADING)
            .addGroup(sPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        sPanel1Layout.setVerticalGroup(
            sPanel1Layout.createParallelGroup(Alignment.LEADING)
            .addGroup(sPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                .addContainerGap())
        );

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(Alignment.LEADING)
                    .addComponent(painelBotoes, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE)
                    .addComponent(sPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(painelBotoes, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //CHECKSTYLE:ON

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}
