package br.com.petrobras.sistam.desktop.agenciamento.protecao;

import br.com.petrobras.fcorp.swing.base.SDialog;
import br.com.petrobras.fcorp.swing.base.action.GenericAction;
import br.com.petrobras.fcorp.swing.components.SButton;
import br.com.petrobras.fcorp.swing.components.SLabel;
import br.com.petrobras.fcorp.swing.components.SPanel;
import br.com.petrobras.fcorp.swing.components.STextArea;
import br.com.petrobras.fcorp.swing.components.STextField;
import br.com.petrobras.fcorp.swing.components.util.GenericDocument;
import br.com.petrobras.sistam.common.entity.ServicoExecutado;
import br.com.petrobras.sistam.desktop.components.SistamDateChooser;
import br.com.petrobras.sistam.desktop.components.SistamTimeChooser;
import br.com.petrobras.sistam.desktop.components.TimeZoneComboBox;
import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.TimeZone;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JScrollPane;
import javax.swing.LayoutStyle;
import javax.swing.WindowConstants;
import javax.swing.border.BevelBorder;
import org.jdesktop.beansbinding.AutoBinding;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.Binding;
import org.jdesktop.beansbinding.BindingGroup;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.ELProperty;

public class CancelamentoDoServicoProtecaoDialog extends SDialog {
    
    public final static String SERVICO_PROTECAO_CANCELADO = "SERVICO_PROTECAO_CANCELADO";

    private CancelamentoDoServicoProtecaoModel model;

    public CancelamentoDoServicoProtecaoDialog(java.awt.Frame parent, ServicoExecutado servicoExecutado) {
        super(parent, true);
        this.model = new CancelamentoDoServicoProtecaoModel(servicoExecutado);
        initComponents();
        setLocationRelativeTo(parent);

        timeZoneComboBox1.setSelectedItem(TimeZone.getTimeZone(servicoExecutado.getServicoProtecao().getAgenciamento().getAgencia().getTimezone()));
    }

    public CancelamentoDoServicoProtecaoModel getModel() {
        return model;
    }

    public void confirmar() {
        model.cancelar();
        firePropertyChange(SERVICO_PROTECAO_CANCELADO, null, null);
        dispose();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings({"unchecked", "PMD"})
    @SuppressFBWarnings
    //CHECKSTYLE:OFF
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new BindingGroup();

        GenericAction actionConfirmar = new GenericAction();
        timeZoneComboBox1 = new TimeZoneComboBox();
        SPanel pnlEscalas = new SPanel();
        SPanel painelBotoes = new SPanel();
        botaoConfirmar = new SButton();
        painelInformacoes = new SPanel();
        SLabel sLabel2 = new SLabel();
        JScrollPane jScrollPane1 = new JScrollPane();
        STextArea sTextArea1 = new STextArea();
        SLabel sLabel3 = new SLabel();
        sistamDateChooser1 = new SistamDateChooser();
        SistamTimeChooser sistamTimeChooser1 = new SistamTimeChooser();
        SLabel sLabel4 = new SLabel();
        STextField sTextField1 = new STextField();

        actionConfirmar.setConfirm("Deseja realmente cancelar o Serviço?");
        actionConfirmar.setIcon(new ImageIcon(getClass().getResource("/icons/concluir.png"))); // NOI18N
        actionConfirmar.setMethodName("confirmar");
        actionConfirmar.setTarget(this);
        actionConfirmar.setText("Confirmar");
        actionConfirmar.setToolTipText("Confirma o cancelamento do Serviço");

        Binding binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${!model.situacaoCancelado}"), actionConfirmar, BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        timeZoneComboBox1.setName("timeZoneComboBox1"); // NOI18N

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cancelamento do Serviço");

        pnlEscalas.setName("pnlEscalas"); // NOI18N

        painelBotoes.setBorder(BorderFactory.createBevelBorder(BevelBorder.RAISED));
        painelBotoes.setName("painelBotoes"); // NOI18N

        botaoConfirmar.setAction(actionConfirmar);
        botaoConfirmar.setName("botaoConfirmar"); // NOI18N
        painelBotoes.add(botaoConfirmar);

        painelInformacoes.setBorder(BorderFactory.createTitledBorder("Informações"));
        painelInformacoes.setName("painelInformacoes"); // NOI18N

        sLabel2.setText("Justificativa:");
        sLabel2.setName("sLabel2"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        sTextArea1.setColumns(20);
        sTextArea1.setDocument(new GenericDocument(256));
        sTextArea1.setLineWrap(true);
        sTextArea1.setRows(3);
        sTextArea1.setWrapStyleWord(true);
        sTextArea1.setName("sTextArea1"); // NOI18N

        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.servicoExecutado.servicoProtecao.justificativa}"), sTextArea1, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${!model.situacaoCancelado}"), sTextArea1, BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jScrollPane1.setViewportView(sTextArea1);

        sLabel3.setText("Cancelado em:");
        sLabel3.setName("sLabel3"); // NOI18N

        sistamDateChooser1.setName("sistamDateChooser1"); // NOI18N
        sistamDateChooser1.setTimeChooser(sistamTimeChooser1);
        sistamDateChooser1.setTimeZoneComboBox(timeZoneComboBox1);

        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.servicoExecutado.servicoProtecao.dataCancelamento}"), sistamDateChooser1, BeanProperty.create("date"));
        bindingGroup.addBinding(binding);
        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${!model.situacaoCancelado}"), sistamDateChooser1, BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        sistamTimeChooser1.setName("sistamTimeChooser1"); // NOI18N

        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${!model.situacaoCancelado}"), sistamTimeChooser1, BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        sLabel4.setText("Por:");
        sLabel4.setName("sLabel4"); // NOI18N

        sTextField1.setEnabled(false);
        sTextField1.setName("sTextField1"); // NOI18N

        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.nomeUsuarioLogado}"), sTextField1, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        sTextField1.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                sTextField1ActionPerformed(evt);
            }
        });
        sTextField1.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                sTextField1ActionPerformed(evt);
            }
        });

        GroupLayout painelInformacoesLayout = new GroupLayout(painelInformacoes);
        painelInformacoes.setLayout(painelInformacoesLayout);
        painelInformacoesLayout.setHorizontalGroup(
            painelInformacoesLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(painelInformacoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelInformacoesLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(painelInformacoesLayout.createSequentialGroup()
                        .addComponent(sLabel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addGap(383, 383, 383))
                    .addGroup(painelInformacoesLayout.createSequentialGroup()
                        .addGroup(painelInformacoesLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(painelInformacoesLayout.createSequentialGroup()
                                .addGroup(painelInformacoesLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                    .addComponent(sLabel4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sLabel3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(painelInformacoesLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                    .addGroup(painelInformacoesLayout.createSequentialGroup()
                                        .addComponent(sistamDateChooser1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(sistamTimeChooser1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(sTextField1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addContainerGap())))
        );
        painelInformacoesLayout.setVerticalGroup(
            painelInformacoesLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(painelInformacoesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sLabel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(painelInformacoesLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(sLabel3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sistamDateChooser1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sistamTimeChooser1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(painelInformacoesLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(sLabel4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sTextField1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        GroupLayout pnlEscalasLayout = new GroupLayout(pnlEscalas);
        pnlEscalas.setLayout(pnlEscalasLayout);
        pnlEscalasLayout.setHorizontalGroup(
            pnlEscalasLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(pnlEscalasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEscalasLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(painelBotoes, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painelInformacoes, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlEscalasLayout.setVerticalGroup(
            pnlEscalasLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(pnlEscalasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painelInformacoes, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(painelBotoes, GroupLayout.PREFERRED_SIZE, 39, GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(pnlEscalas, BorderLayout.CENTER);

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sTextField1ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_sTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sTextField1ActionPerformed
    //CHECKSTYLE:ON
    // Variables declaration - do not modify//GEN-BEGIN:variables
    SButton botaoConfirmar;
    SPanel painelInformacoes;
    SistamDateChooser sistamDateChooser1;
    TimeZoneComboBox timeZoneComboBox1;
    private BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}
