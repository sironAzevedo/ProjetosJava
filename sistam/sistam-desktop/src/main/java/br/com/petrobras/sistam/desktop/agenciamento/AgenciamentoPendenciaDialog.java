package br.com.petrobras.sistam.desktop.agenciamento;

import br.com.petrobras.fcorp.swing.base.SDialog;
import br.com.petrobras.fcorp.swing.base.action.GenericAction;
import br.com.petrobras.fcorp.swing.components.SButton;
import br.com.petrobras.fcorp.swing.components.SCheckList;
import br.com.petrobras.fcorp.swing.components.SLabel;
import br.com.petrobras.fcorp.swing.components.SPanel;
import br.com.petrobras.sistam.common.entity.Agenciamento;
import br.com.petrobras.sistam.desktop.SistamApp;
import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.util.ResourceBundle;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.ImageIcon;
import javax.swing.JScrollPane;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.WindowConstants;
import javax.swing.border.BevelBorder;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.Binding;
import org.jdesktop.beansbinding.BindingGroup;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.swingbinding.JListBinding;
import org.jdesktop.swingbinding.SwingBindings;

public class AgenciamentoPendenciaDialog extends SDialog {
    private AgenciamentoPendenciaModel model;
    
    public AgenciamentoPendenciaDialog(java.awt.Frame parent, Agenciamento agenciamento) {
        super(parent, true);
        model = new AgenciamentoPendenciaModel(agenciamento);
        initComponents();
        
        setLocationRelativeTo(parent);
    }

    public AgenciamentoPendenciaModel getModel() {
        return model;
    }
    
      /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings({"unchecked", "PMD"}) @SuppressFBWarnings
    //CHECKSTYLE:OFF
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new BindingGroup();
        GenericAction actionSalvar = new GenericAction();
        SPanel pnlCabecalho = new SPanel();
        SLabel sLabel1 = new SLabel();
        SLabel sLabel2 = new SLabel();
        SLabel sLabel3 = new SLabel();
        SLabel sLabel4 = new SLabel();
        SPanel pnlCentral = new SPanel();
        JScrollPane jScrollPane1 = new JScrollPane();
        SCheckList sCheckList1 = new SCheckList();

        actionSalvar.setIcon(new ImageIcon(getClass().getResource("/icons/disk.png"))); // NOI18N
        actionSalvar.setMethodName("salvar");
        actionSalvar.setTarget(this);
        actionSalvar.setText("Salvar");

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pendência do Agenciamento");

        pnlCabecalho.setBorder(BorderFactory.createLineBorder(new Color(0, 0, 0)));
        pnlCabecalho.setName("pnlCabecalho"); // NOI18N

        ResourceBundle bundle = ResourceBundle.getBundle("sistam-labels"); // NOI18N
        sLabel1.setText(bundle.getString("lblNome")); // NOI18N
        sLabel1.setName("sLabel1"); // NOI18N

        sLabel2.setText(bundle.getString("lblViagem")); // NOI18N
        sLabel2.setName("sLabel2"); // NOI18N

        sLabel3.setName("sLabel3"); // NOI18N
        sLabel3.setRequiredField(true);

        Binding binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.agenciamento.embarcacao.nomeCompleto}"), sLabel3, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        sLabel4.setName("sLabel4"); // NOI18N
        sLabel4.setRequiredField(true);

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.agenciamento.vgm}"), sLabel4, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        GroupLayout pnlCabecalhoLayout = new GroupLayout(pnlCabecalho);
        pnlCabecalho.setLayout(pnlCabecalhoLayout);
        pnlCabecalhoLayout.setHorizontalGroup(
            pnlCabecalhoLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlCabecalhoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sLabel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(sLabel3, GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(sLabel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(sLabel4, GroupLayout.PREFERRED_SIZE, 109, GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlCabecalhoLayout.setVerticalGroup(
            pnlCabecalhoLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlCabecalhoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCabecalhoLayout.createParallelGroup(Alignment.LEADING)
                    .addGroup(pnlCabecalhoLayout.createSequentialGroup()
                        .addGroup(pnlCabecalhoLayout.createParallelGroup(Alignment.LEADING, false)
                            .addComponent(sLabel2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sLabel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(sLabel3, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(sLabel4, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        getContentPane().add(pnlCabecalho, BorderLayout.PAGE_START);

        pnlCentral.setBorder(BorderFactory.createTitledBorder("Pendência(s) não resolvida(s):"));
        pnlCentral.setName("pnlCentral"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        sCheckList1.setName("sCheckList1"); // NOI18N
        ELProperty eLProperty = ELProperty.create("${model.listaDePendencias}");
        JListBinding jListBinding = SwingBindings.createJListBinding(UpdateStrategy.READ_WRITE, this, eLProperty, sCheckList1);
        bindingGroup.addBinding(jListBinding);
        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.listaDePendenciasSelecionadas}"), sCheckList1, BeanProperty.create("selectedElements"));
        bindingGroup.addBinding(binding);

        jScrollPane1.setViewportView(sCheckList1);

        GroupLayout pnlCentralLayout = new GroupLayout(pnlCentral);
        pnlCentral.setLayout(pnlCentralLayout);
        pnlCentralLayout.setHorizontalGroup(
            pnlCentralLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlCentralLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlCentralLayout.setVerticalGroup(
            pnlCentralLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(Alignment.TRAILING, pnlCentralLayout.createSequentialGroup()
                .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(pnlCentral, BorderLayout.CENTER);

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //CHECKSTYLE:ON

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}
