package br.com.petrobras.sistam.desktop.agenciamento.operacoes;

import br.com.petrobras.fcorp.swing.base.SDialog;
import br.com.petrobras.fcorp.swing.base.action.GenericAction;
import br.com.petrobras.fcorp.swing.components.SButton;
import br.com.petrobras.fcorp.swing.components.SCheckBox;
import br.com.petrobras.fcorp.swing.components.SComboBox;
import br.com.petrobras.fcorp.swing.components.SLabel;
import br.com.petrobras.fcorp.swing.components.SPanel;
import br.com.petrobras.fcorp.swing.components.SRadioPanel;
import br.com.petrobras.fcorp.swing.components.STextField;
import br.com.petrobras.fcorp.swing.components.util.GenericDocument;
import br.com.petrobras.sistam.common.entity.DocumentacaoOperacao;
import br.com.petrobras.sistam.desktop.components.SistamDateChooser;
import br.com.petrobras.sistam.desktop.components.SistamTimeChooser;
import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
import java.awt.FlowLayout;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.ImageIcon;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.WindowConstants;
import javax.swing.border.BevelBorder;
import javax.swing.border.SoftBevelBorder;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.Binding;
import org.jdesktop.beansbinding.BindingGroup;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
public class AssociacaoProdutoDescargaCabotagemDialog extends SDialog {
    private AssociacaoProdutoDescargaCabotagemModel model;
    
    public AssociacaoProdutoDescargaCabotagemDialog(java.awt.Frame parent, DocumentacaoOperacao documentacaoProduto) {
        super(parent, true);
        this.model = new AssociacaoProdutoDescargaCabotagemModel(documentacaoProduto);
        initComponents();
        setLocationRelativeTo(parent);
    }

    public AssociacaoProdutoDescargaCabotagemModel getModel() {
        return model;
    }
    
    public void salvar(){
        model.salvar();
        dispose();
    }
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings({"unchecked", "PMD"}) @SuppressFBWarnings
    //CHECKSTYLE:OFF
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new BindingGroup();

        GenericAction actionSalvar = new GenericAction();
        SPanel painelInformacoes = new SPanel();
        SLabel labelProduto = new SLabel();
        SComboBox comboProduto = new SComboBox();
        SLabel labelCE = new SLabel();
        STextField sTextField1 = new STextField();
        SRadioPanel sRadioPanel1 = new SRadioPanel();
        SRadioPanel sRadioPanel2 = new SRadioPanel();
        SPanel sPanel1 = new SPanel();
        SCheckBox sCheckBox1 = new SCheckBox();
        SCheckBox sCheckBox2 = new SCheckBox();
        SCheckBox sCheckBox3 = new SCheckBox();
        SPanel sPanel2 = new SPanel();
        SLabel sLabel1 = new SLabel();
        STextField sTextField2 = new STextField();
        SLabel sLabel2 = new SLabel();
        SistamDateChooser sistamDateChooser1 = new SistamDateChooser();
        SPanel painelBotoes = new SPanel();
        SButton botaoSalvar = new SButton();

        actionSalvar.setIcon(new ImageIcon(getClass().getResource("/icons/disk.png"))); // NOI18N
        actionSalvar.setMethodName("salvar");
        actionSalvar.setTarget(this);
        actionSalvar.setText("Salvar");
        actionSalvar.setToolTipText("Salva as informações do produto da documentação");

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Produto da Documentação de Descarga Cabotagem");

        painelInformacoes.setBorder(BorderFactory.createTitledBorder("Informações"));
        painelInformacoes.setName("painelInformacoes"); // NOI18N

        labelProduto.setText("Produto:");
        labelProduto.setName("labelProduto"); // NOI18N

        comboProduto.setName("comboProduto"); // NOI18N

        ELProperty eLProperty = ELProperty.create("${model.listaProduto}");
        JComboBoxBinding jComboBoxBinding = SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, this, eLProperty, comboProduto);
        bindingGroup.addBinding(jComboBoxBinding);
        Binding binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.documentacaoProduto.operacao}"), comboProduto, BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        labelCE.setText("CE:");
        labelCE.setName("labelCE"); // NOI18N

        sTextField1.setDocument(new GenericDocument(15,GenericDocument.OPTION_APPLY_UPPERCASE ));
        sTextField1.setName("sTextField1"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.documentacaoProduto.conhecimentoEletronico}"), sTextField1, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        sRadioPanel1.setBorder(BorderFactory.createTitledBorder("Situação AFRMM"));
        sRadioPanel1.setHorizontalGap(10);
        sRadioPanel1.setName("sRadioPanel1"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.listaSituacaoAfrm}"), sRadioPanel1, BeanProperty.create("elements"));
        bindingGroup.addBinding(binding);
        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.documentacaoProduto.situacaoAfrm}"), sRadioPanel1, BeanProperty.create("selectedElement"));
        bindingGroup.addBinding(binding);

        sRadioPanel1.setLayout(new FlowLayout());

        sRadioPanel2.setBorder(BorderFactory.createTitledBorder("Situação da Carga"));
        sRadioPanel2.setHorizontalGap(10);
        sRadioPanel2.setName("sRadioPanel2"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.listaSituacaoCarga}"), sRadioPanel2, BeanProperty.create("elements"));
        bindingGroup.addBinding(binding);
        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.documentacaoProduto.situacaoCarga}"), sRadioPanel2, BeanProperty.create("selectedElement"));
        bindingGroup.addBinding(binding);

        sRadioPanel2.setLayout(new FlowLayout());

        sPanel1.setBorder(BorderFactory.createTitledBorder("Documentação Recebida"));
        sPanel1.setName("sPanel1"); // NOI18N

        sCheckBox1.setText("Anexo Único");
        sCheckBox1.setName("sCheckBox1"); // NOI18N
        sCheckBox1.setOpaque(false);

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.documentacaoProduto.anexoUnicoRecebido}"), sCheckBox1, BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        sCheckBox2.setText("Nota Fiscal");
        sCheckBox2.setName("sCheckBox2"); // NOI18N
        sCheckBox2.setOpaque(false);

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.documentacaoProduto.notaFiscalRecebida}"), sCheckBox2, BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        sCheckBox3.setText("CTAC");
        sCheckBox3.setName("sCheckBox3"); // NOI18N
        sCheckBox3.setOpaque(false);

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.documentacaoProduto.ctacRecebida}"), sCheckBox3, BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        GroupLayout sPanel1Layout = new GroupLayout(sPanel1);
        sPanel1.setLayout(sPanel1Layout);
        sPanel1Layout.setHorizontalGroup(
            sPanel1Layout.createParallelGroup(Alignment.LEADING)
            .addGroup(sPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sCheckBox1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(sCheckBox2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(sCheckBox3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        sPanel1Layout.setVerticalGroup(
            sPanel1Layout.createParallelGroup(Alignment.LEADING)
            .addGroup(sPanel1Layout.createParallelGroup(Alignment.BASELINE)
                .addComponent(sCheckBox1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(sCheckBox2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(sCheckBox3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        );

        sPanel2.setBorder(BorderFactory.createTitledBorder("DMM"));
        sPanel2.setName("sPanel2"); // NOI18N

        sLabel1.setText("Protocolo:");
        sLabel1.setName("sLabel1"); // NOI18N

        sTextField2.setDocument(new GenericDocument(20));
        sTextField2.setName("sTextField2"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.documentacaoProduto.protocoloDmm}"), sTextField2, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        sLabel2.setText("Data:");
        sLabel2.setName("sLabel2"); // NOI18N

        sistamDateChooser1.setName("sistamDateChooser1"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.documentacaoProduto.dataProtocoloDmm}"), sistamDateChooser1, BeanProperty.create("date"));
        bindingGroup.addBinding(binding);

        GroupLayout sPanel2Layout = new GroupLayout(sPanel2);
        sPanel2.setLayout(sPanel2Layout);
        sPanel2Layout.setHorizontalGroup(
            sPanel2Layout.createParallelGroup(Alignment.LEADING)
            .addGroup(sPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sLabel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(sTextField2, GroupLayout.PREFERRED_SIZE, 148, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.UNRELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(sLabel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(sistamDateChooser1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        sPanel2Layout.setVerticalGroup(
            sPanel2Layout.createParallelGroup(Alignment.LEADING)
            .addGroup(Alignment.TRAILING, sPanel2Layout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(sPanel2Layout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(sLabel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sTextField2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sistamDateChooser1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        GroupLayout painelInformacoesLayout = new GroupLayout(painelInformacoes);
        painelInformacoes.setLayout(painelInformacoesLayout);
        painelInformacoesLayout.setHorizontalGroup(
            painelInformacoesLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(painelInformacoesLayout.createSequentialGroup()
                .addGroup(painelInformacoesLayout.createParallelGroup(Alignment.LEADING)
                    .addGroup(Alignment.TRAILING, painelInformacoesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(sRadioPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(Alignment.TRAILING, painelInformacoesLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(painelInformacoesLayout.createParallelGroup(Alignment.LEADING)
                            .addComponent(labelProduto, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelCE, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addGroup(painelInformacoesLayout.createParallelGroup(Alignment.LEADING)
                            .addComponent(comboProduto, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(painelInformacoesLayout.createSequentialGroup()
                                .addComponent(sTextField1, GroupLayout.PREFERRED_SIZE, 113, GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(painelInformacoesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(sRadioPanel2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(painelInformacoesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(painelInformacoesLayout.createParallelGroup(Alignment.LEADING)
                            .addComponent(sPanel2, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        painelInformacoesLayout.setVerticalGroup(
            painelInformacoesLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(painelInformacoesLayout.createSequentialGroup()
                .addGroup(painelInformacoesLayout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(labelProduto, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboProduto, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.UNRELATED)
                .addGroup(painelInformacoesLayout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(labelCE, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sTextField1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.UNRELATED)
                .addComponent(sRadioPanel1, GroupLayout.PREFERRED_SIZE, 53, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(sRadioPanel2, GroupLayout.PREFERRED_SIZE, 53, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(sPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.UNRELATED)
                .addComponent(sPanel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        );

        painelBotoes.setBorder(new SoftBevelBorder(BevelBorder.RAISED));
        painelBotoes.setName("painelBotoes"); // NOI18N

        botaoSalvar.setAction(actionSalvar);
        botaoSalvar.setName("botaoSalvar"); // NOI18N
        painelBotoes.add(botaoSalvar);

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(Alignment.LEADING)
                    .addComponent(painelInformacoes, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painelBotoes, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painelInformacoes, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(painelBotoes, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //CHECKSTYLE:ON

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}
