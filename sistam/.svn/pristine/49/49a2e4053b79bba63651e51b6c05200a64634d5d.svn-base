package br.com.petrobras.sistam.desktop.agenciamento.visita;

import br.com.petrobras.fcorp.swing.base.SDialog;
import br.com.petrobras.fcorp.swing.base.action.GenericAction;
import br.com.petrobras.fcorp.swing.components.SButton;
import br.com.petrobras.fcorp.swing.components.SCheckBox;
import br.com.petrobras.fcorp.swing.components.SComboBox;
import br.com.petrobras.fcorp.swing.components.SLabel;
import br.com.petrobras.fcorp.swing.components.SNumericTextField;
import br.com.petrobras.fcorp.swing.components.SPanel;
import br.com.petrobras.fcorp.swing.components.SRadioPanel;
import br.com.petrobras.fcorp.swing.components.STable;
import br.com.petrobras.fcorp.swing.components.STextArea;
import br.com.petrobras.fcorp.swing.components.STextField;
import br.com.petrobras.fcorp.swing.components.util.GenericDocument;
import br.com.petrobras.sistam.common.entity.ResponsavelCustoEntity;
import br.com.petrobras.sistam.common.entity.Visita;
import br.com.petrobras.sistam.common.enums.ResponsavelCusto;
import br.com.petrobras.sistam.common.enums.TipoTransporte;
import br.com.petrobras.sistam.desktop.components.SistamDateChooser;
import br.com.petrobras.sistam.desktop.components.SistamNumberCellRenderer;
import br.com.petrobras.sistam.desktop.components.SistamTimeChooser;
import br.com.petrobras.sistam.desktop.components.TimeZoneComboBox;
import br.com.petrobras.snarf.desktop.assync.AssyncInvoker;
import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.TimeZone;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.ImageIcon;
import javax.swing.JScrollPane;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.SwingConstants;
import javax.swing.WindowConstants;
import javax.swing.border.BevelBorder;
import javax.swing.border.LineBorder;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.Binding;
import org.jdesktop.beansbinding.BindingGroup;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.JTableBinding;
import org.jdesktop.swingbinding.JTableBinding.ColumnBinding;
import org.jdesktop.swingbinding.SwingBindings;

public class DetalheVisitaDialog extends SDialog {
    public static final String VISITA_INSERIDO = "VISITA_INSERIDO";
    public static final String VISITA_ALTERADO = "VISITA_ALTERADO";
    
    private DetalheVisitaModel model;
   
    public DetalheVisitaDialog(java.awt.Frame parent, Visita visita) {
        super(parent, true);
        model = new DetalheVisitaModel(visita);
        initComponents();
        setLocationRelativeTo(parent);
        
        AssyncInvoker
                .create(model, "carregarListaDeAgentes")
                .disabling(comboAgentes)
                .settingLoadingIconOn(labelAgente)
                .schedule();
        
        timeZoneComboBox.setSelectedItem(TimeZone.getTimeZone(visita.getAgenciamento().getAgencia().getTimezone()));
    }
    
    public DetalheVisitaModel getModel() {
        return model;
    }
    
    public void salvar() {
        //Propriedade que informe se está havendo alteração ou criação de uma visita
        String property = model.getVisita().getId() == null ? VISITA_INSERIDO : VISITA_ALTERADO;

        model.salvar();
        firePropertyChange(property, null, null);

        //Se não for pra continuar inserindo, fecha a tela.
        if (!model.isContinuarInserindo()) {
            dispose();
        } else {
            //caso continue inserindo, prepara uma nova visista
            model.prepararNovaVisita();
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings({"unchecked", "PMD"}) @SuppressFBWarnings
    //CHECKSTYLE:OFF
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new BindingGroup();

        GenericAction actionAdicionar = new GenericAction();
        GenericAction actionSalvar = new GenericAction();
        GenericAction actionExcluir = new GenericAction();
        SistamNumberCellRenderer rendererCusto = new SistamNumberCellRenderer();
        SPanel pnlCabecalho = new SPanel();
        SLabel sLabel7 = new SLabel();
        SLabel sLabel8 = new SLabel();
        SLabel sLabel3 = new SLabel();
        SLabel sLabel9 = new SLabel();
        SLabel sLabel10 = new SLabel();
        timeZoneComboBox = new TimeZoneComboBox();
        SPanel pnlEscalas = new SPanel();
        SPanel pnlTipoServico = new SPanel();
        JScrollPane jScrollPane1 = new JScrollPane();
        STable tblServicosManobra = new STable();
        SLabel sLabel1 = new SLabel();
        SComboBox sComboBox1 = new SComboBox();
        SLabel sLabel4 = new SLabel();
        SNumericTextField sNumericTextField2 = new SNumericTextField();
        SLabel sLabel5 = new SLabel();
        SLabel sLabel11 = new SLabel();
        SLabel sLabel12 = new SLabel();
        STextField tfDescricao = new STextField();
        STextField tfServico = new STextField();
        SComboBox cbCondNavio = new SComboBox();
        SLabel sLabel14 = new SLabel();
        cboResponsavelCusto = new SComboBox();
        SButton btnAdicionarServico = new SButton();
        SButton btnRemoverServico = new SButton();
        SPanel pnlManobras = new SPanel();
        SLabel sLabel6 = new SLabel();
        JScrollPane jScrollPane2 = new JScrollPane();
        STextArea txtObservacao = new STextArea();
        SPanel sPanel1 = new SPanel();
        SLabel sLabel2 = new SLabel();
        SLabel lblTermino = new SLabel();
        SistamDateChooser sistamDateChooserInicio = new SistamDateChooser();
        SistamDateChooser sistamDateChooserTermino = new SistamDateChooser();
        SistamTimeChooser sistamTimeChooserInicio = new SistamTimeChooser();
        SistamTimeChooser sistamTimeChooserTermino = new SistamTimeChooser();
        SLabel sLabel13 = new SLabel();
        SistamTimeChooser sistamTimeChooserProgramada = new SistamTimeChooser();
        SistamDateChooser sistamDateChooserProgramada = new SistamDateChooser();
        labelAgente = new SLabel();
        comboAgentes = new SComboBox();
        SCheckBox sCheckBox2 = new SCheckBox();
        SPanel pnlBotoes = new SPanel();
        SButton btnSalvar = new SButton();

        actionAdicionar.setIcon(new ImageIcon(getClass().getResource("/icons/add.png"))); // NOI18N
        actionAdicionar.setMethodName("adicionarTransporte");
        actionAdicionar.setTarget(model);

        Binding binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${not empty model.novaOperacaoProduto.produto and not empty model.novaOperacaoProduto.quatidadeEstimada and not empty model.novaOperacaoProduto.tipoOperacao}"), actionAdicionar, BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        actionSalvar.setIcon(new ImageIcon(getClass().getResource("/icons/disk.png"))); // NOI18N
        actionSalvar.setMethodName("salvar");
        actionSalvar.setTarget(this);
        actionSalvar.setText("Salvar");
        actionSalvar.setToolTipText("Salva as informações da visita");

        actionExcluir.setConfirm("Confirma exclusão do transporte selecionado?");
        actionExcluir.setIcon(new ImageIcon(getClass().getResource("/icons/delete.png"))); // NOI18N
        actionExcluir.setMethodName("excluirTransporte");
        actionExcluir.setTarget(model);

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${not empty model.transporteSelecionado}"), actionExcluir, BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Visita");

        pnlCabecalho.setBorder(new LineBorder(new Color(0, 0, 0), 1, true));
        pnlCabecalho.setName("pnlCabecalho"); // NOI18N

        sLabel7.setText("Nome:");
        sLabel7.setName("sLabel7"); // NOI18N

        sLabel8.setText("Viagem:");
        sLabel8.setName("sLabel8"); // NOI18N

        sLabel3.setName("sLabel3"); // NOI18N
        sLabel3.setRequiredField(true);

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.visita.agenciamento.embarcacao.nomeCompleto}"), sLabel3, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        sLabel9.setName("sLabel9"); // NOI18N
        sLabel9.setRequiredField(true);

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.visita.agenciamento.vgm}"), sLabel9, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        sLabel10.setText("Fuso Horário:");
        sLabel10.setName("sLabel10"); // NOI18N

        timeZoneComboBox.setEnabled(false);
        timeZoneComboBox.setName("timeZoneComboBox"); // NOI18N

        GroupLayout pnlCabecalhoLayout = new GroupLayout(pnlCabecalho);
        pnlCabecalho.setLayout(pnlCabecalhoLayout);
        pnlCabecalhoLayout.setHorizontalGroup(
            pnlCabecalhoLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlCabecalhoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sLabel7, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(sLabel3, GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(sLabel8, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(sLabel9, GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(sLabel10, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(timeZoneComboBox, GroupLayout.PREFERRED_SIZE, 156, GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlCabecalhoLayout.setVerticalGroup(
            pnlCabecalhoLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlCabecalhoLayout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlCabecalhoLayout.createParallelGroup(Alignment.CENTER)
                    .addComponent(sLabel8, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sLabel9, GroupLayout.PREFERRED_SIZE, 14, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel10, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(timeZoneComboBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(Alignment.CENTER, pnlCabecalhoLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(sLabel7, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
            .addGroup(Alignment.CENTER, pnlCabecalhoLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(sLabel3, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(11, 11, 11))
        );

        getContentPane().add(pnlCabecalho, BorderLayout.PAGE_START);

        pnlEscalas.setName("pnlEscalas"); // NOI18N

        pnlTipoServico.setBorder(BorderFactory.createTitledBorder("Lista de Transportes Utilizados na Visita"));
        pnlTipoServico.setName("pnlTipoServico"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        tblServicosManobra.setName("tblServicosManobra"); // NOI18N

        ELProperty eLProperty = ELProperty.create("${model.visita.transportes}");
        JTableBinding jTableBinding = SwingBindings.createJTableBinding(UpdateStrategy.READ_WRITE, this, eLProperty, tblServicosManobra);
        ColumnBinding columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${tipoTransporte}"));
        columnBinding.setColumnName("Tipo Transporte");
        columnBinding.setColumnClass(TipoTransporte.class);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${descricao}"));
        columnBinding.setColumnName("Descricao");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${servico}"));
        columnBinding.setColumnName("Servico");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${responsavelCusto}"));
        columnBinding.setColumnName("Res. Pelo Custo");
        columnBinding.setColumnClass(ResponsavelCustoEntity.class);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${custo}"));
        columnBinding.setColumnName("Custo");
        columnBinding.setColumnClass(Double.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.transporteSelecionado}"), tblServicosManobra, BeanProperty.create("selectedElement"));
        bindingGroup.addBinding(binding);

        jScrollPane1.setViewportView(tblServicosManobra);

        sLabel1.setText("Tipo de Transporte:");
        sLabel1.setName("sLabel1"); // NOI18N

        sComboBox1.setName("sComboBox1"); // NOI18N

        eLProperty = ELProperty.create("${model.listaTipoTransporte}");
        JComboBoxBinding jComboBoxBinding = SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, this, eLProperty, sComboBox1);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.novoTransporte.tipoTransporte}"), sComboBox1, BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        sLabel4.setText("Custo (R$):");
        sLabel4.setName("sLabel4"); // NOI18N

        sNumericTextField2.setIntegerPlaces(new Short((short)8));
        sNumericTextField2.setNumberClass(Double.class);
        sNumericTextField2.setText("sNumericTextField2");
        sNumericTextField2.setName("sNumericTextField2"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.novoTransporte.custo}"), sNumericTextField2, BeanProperty.create("doubleValue"));
        bindingGroup.addBinding(binding);

        sNumericTextField2.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                sNumericTextField2ActionPerformed(evt);
            }
        });
        sNumericTextField2.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                sNumericTextField2ActionPerformed(evt);
            }
        });

        sLabel5.setText("Descrição:");
        sLabel5.setName("sLabel5"); // NOI18N

        sLabel11.setText("Serviço:");
        sLabel11.setName("sLabel11"); // NOI18N

        sLabel12.setText("Cond. Embarcação:");
        sLabel12.setName("sLabel12"); // NOI18N

        tfDescricao.setDocument(new GenericDocument(100) );
        tfDescricao.setName("tfDescricao"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.novoTransporte.descricao}"), tfDescricao, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        tfServico.setDocument(new GenericDocument(100) );
        tfServico.setName("tfServico"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.novoTransporte.servico}"), tfServico, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        cbCondNavio.setName("cbCondNavio"); // NOI18N

        eLProperty = ELProperty.create("${model.listaCondicoesNavio}");
        jComboBoxBinding = SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, this, eLProperty, cbCondNavio);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.novoTransporte.condicaoNavio}"), cbCondNavio, BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        sLabel14.setText("Responsável pelo custo:");
        sLabel14.setName("sLabel14"); // NOI18N

        cboResponsavelCusto.setName("cboResponsavelCusto"); // NOI18N
        cboResponsavelCusto.setPopupResizeEnabled(true);

        eLProperty = ELProperty.create("${model.listaResponsavelCusto}");
        jComboBoxBinding = SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, this, eLProperty, cboResponsavelCusto);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.novoTransporte.responsavelCusto}"), cboResponsavelCusto, BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        btnAdicionarServico.setAction(actionAdicionar);
        btnAdicionarServico.setName("btnAdicionarServico"); // NOI18N

        btnRemoverServico.setAction(actionExcluir);
        btnRemoverServico.setName("btnRemoverServico"); // NOI18N

        GroupLayout pnlTipoServicoLayout = new GroupLayout(pnlTipoServico);
        pnlTipoServico.setLayout(pnlTipoServicoLayout);
        pnlTipoServicoLayout.setHorizontalGroup(
            pnlTipoServicoLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlTipoServicoLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(pnlTipoServicoLayout.createParallelGroup(Alignment.LEADING)
                    .addGroup(pnlTipoServicoLayout.createSequentialGroup()
                        .addGroup(pnlTipoServicoLayout.createParallelGroup(Alignment.LEADING)
                            .addComponent(sLabel1, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(sLabel4, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(sLabel5, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(sLabel11, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addGroup(pnlTipoServicoLayout.createParallelGroup(Alignment.LEADING)
                            .addComponent(tfDescricao, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tfServico, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(pnlTipoServicoLayout.createSequentialGroup()
                                .addGroup(pnlTipoServicoLayout.createParallelGroup(Alignment.LEADING, false)
                                    .addComponent(sNumericTextField2, GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                                    .addComponent(sComboBox1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(pnlTipoServicoLayout.createParallelGroup(Alignment.LEADING)
                                    .addComponent(sLabel14, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sLabel12, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(ComponentPlacement.RELATED)
                                .addGroup(pnlTipoServicoLayout.createParallelGroup(Alignment.LEADING, false)
                                    .addComponent(cboResponsavelCusto, GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                                    .addComponent(cbCondNavio, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(pnlTipoServicoLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 632, Short.MAX_VALUE)
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addGroup(pnlTipoServicoLayout.createParallelGroup(Alignment.LEADING)
                            .addComponent(btnRemoverServico, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAdicionarServico, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        pnlTipoServicoLayout.setVerticalGroup(
            pnlTipoServicoLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlTipoServicoLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(pnlTipoServicoLayout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(sComboBox1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboResponsavelCusto, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel14, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.RELATED)
                .addGroup(pnlTipoServicoLayout.createParallelGroup(Alignment.LEADING)
                    .addComponent(sLabel12, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlTipoServicoLayout.createParallelGroup(Alignment.BASELINE)
                        .addComponent(sLabel4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addComponent(sNumericTextField2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbCondNavio, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(ComponentPlacement.RELATED)
                .addGroup(pnlTipoServicoLayout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(sLabel5, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfDescricao, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.RELATED)
                .addGroup(pnlTipoServicoLayout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(tfServico, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel11, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.RELATED)
                .addGroup(pnlTipoServicoLayout.createParallelGroup(Alignment.LEADING)
                    .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 70, GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlTipoServicoLayout.createSequentialGroup()
                        .addComponent(btnAdicionarServico, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(ComponentPlacement.UNRELATED)
                        .addComponent(btnRemoverServico, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pnlManobras.setBorder(BorderFactory.createTitledBorder("Dados da Visita"));
        pnlManobras.setName("pnlManobras"); // NOI18N

        sLabel6.setText("Observação:");
        sLabel6.setName("sLabel6"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        txtObservacao.setColumns(20);
        txtObservacao.setDocument(new GenericDocument(950) );
        txtObservacao.setLineWrap(true);
        txtObservacao.setRows(4);
        txtObservacao.setWrapStyleWord(true);
        txtObservacao.setName("txtObservacao"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.visita.observacao}"), txtObservacao, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jScrollPane2.setViewportView(txtObservacao);

        sPanel1.setBorder(BorderFactory.createTitledBorder("Data e Hora"));
        sPanel1.setName("sPanel1"); // NOI18N

        sLabel2.setText("Início:");
        sLabel2.setName("sLabel2"); // NOI18N

        lblTermino.setText("Término:");
        lblTermino.setName("lblTermino"); // NOI18N

        sistamDateChooserInicio.setName("sistamDateChooserInicio"); // NOI18N
        sistamDateChooserInicio.setTimeChooser(sistamTimeChooserInicio);
        sistamDateChooserInicio.setTimeZoneComboBox(timeZoneComboBox);

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.visita.dataInicio}"), sistamDateChooserInicio, BeanProperty.create("date"));
        bindingGroup.addBinding(binding);

        sistamDateChooserTermino.setName("sistamDateChooserTermino"); // NOI18N
        sistamDateChooserTermino.setTimeChooser(sistamTimeChooserTermino);
        sistamDateChooserTermino.setTimeZoneComboBox(timeZoneComboBox);

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.visita.dataTermino}"), sistamDateChooserTermino, BeanProperty.create("date"));
        bindingGroup.addBinding(binding);

        sistamTimeChooserInicio.setName("sistamTimeChooserInicio"); // NOI18N

        sistamTimeChooserTermino.setName("sistamTimeChooserTermino"); // NOI18N

        sLabel13.setText("Programada:");
        sLabel13.setName("sLabel13"); // NOI18N

        sistamTimeChooserProgramada.setName("sistamTimeChooserProgramada"); // NOI18N

        sistamDateChooserProgramada.setName("sistamDateChooserProgramada"); // NOI18N
        sistamDateChooserProgramada.setTimeChooser(sistamTimeChooserProgramada);
        sistamDateChooserProgramada.setTimeZoneComboBox(timeZoneComboBox);

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.visita.dataProgramada}"), sistamDateChooserProgramada, BeanProperty.create("date"));
        bindingGroup.addBinding(binding);

        GroupLayout sPanel1Layout = new GroupLayout(sPanel1);
        sPanel1.setLayout(sPanel1Layout);
        sPanel1Layout.setHorizontalGroup(
            sPanel1Layout.createParallelGroup(Alignment.LEADING)
            .addGroup(sPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sPanel1Layout.createParallelGroup(Alignment.LEADING)
                    .addGroup(sPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(sPanel1Layout.createParallelGroup(Alignment.TRAILING)
                            .addComponent(sLabel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTermino, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addGroup(sPanel1Layout.createParallelGroup(Alignment.LEADING)
                            .addGroup(sPanel1Layout.createSequentialGroup()
                                .addComponent(sistamDateChooserInicio, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(ComponentPlacement.UNRELATED)
                                .addComponent(sistamTimeChooserInicio, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                            .addGroup(sPanel1Layout.createSequentialGroup()
                                .addComponent(sistamDateChooserTermino, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(ComponentPlacement.UNRELATED)
                                .addComponent(sistamTimeChooserTermino, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))))
                    .addGroup(sPanel1Layout.createSequentialGroup()
                        .addComponent(sLabel13, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addComponent(sistamDateChooserProgramada, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(sistamTimeChooserProgramada, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        sPanel1Layout.setVerticalGroup(
            sPanel1Layout.createParallelGroup(Alignment.LEADING)
            .addGroup(sPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sPanel1Layout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(sistamTimeChooserProgramada, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sistamDateChooserProgramada, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel13, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.RELATED)
                .addGroup(sPanel1Layout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(sLabel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sistamDateChooserInicio, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sistamTimeChooserInicio, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.RELATED)
                .addGroup(sPanel1Layout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(lblTermino, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sistamDateChooserTermino, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sistamTimeChooserTermino, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        labelAgente.setText("Agente:");
        labelAgente.setName("labelAgente"); // NOI18N

        comboAgentes.setName("comboAgentes"); // NOI18N

        eLProperty = ELProperty.create("${model.listaAgentes}");
        jComboBoxBinding = SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, this, eLProperty, comboAgentes);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.agenteSelecionado}"), comboAgentes, BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        GroupLayout pnlManobrasLayout = new GroupLayout(pnlManobras);
        pnlManobras.setLayout(pnlManobrasLayout);
        pnlManobrasLayout.setHorizontalGroup(
            pnlManobrasLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlManobrasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlManobrasLayout.createParallelGroup(Alignment.LEADING)
                    .addGroup(pnlManobrasLayout.createSequentialGroup()
                        .addComponent(sPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(ComponentPlacement.UNRELATED)
                        .addGroup(pnlManobrasLayout.createParallelGroup(Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(pnlManobrasLayout.createSequentialGroup()
                                .addComponent(sLabel6, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(pnlManobrasLayout.createSequentialGroup()
                        .addComponent(labelAgente, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addComponent(comboAgentes, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlManobrasLayout.setVerticalGroup(
            pnlManobrasLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(Alignment.TRAILING, pnlManobrasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlManobrasLayout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(labelAgente, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboAgentes, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.UNRELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlManobrasLayout.createParallelGroup(Alignment.LEADING, false)
                    .addGroup(pnlManobrasLayout.createSequentialGroup()
                        .addComponent(sLabel6, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2))
                    .addComponent(sPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        sCheckBox2.setText("Após salvar, continuar inserindo.");
        sCheckBox2.setName("sCheckBox2"); // NOI18N
        sCheckBox2.setOpaque(false);

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.continuarInserindo}"), sCheckBox2, BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        pnlBotoes.setBorder(BorderFactory.createBevelBorder(BevelBorder.RAISED));
        pnlBotoes.setName("pnlBotoes"); // NOI18N

        btnSalvar.setAction(actionSalvar);
        btnSalvar.setName("btnSalvar"); // NOI18N
        pnlBotoes.add(btnSalvar);

        GroupLayout pnlEscalasLayout = new GroupLayout(pnlEscalas);
        pnlEscalas.setLayout(pnlEscalasLayout);
        pnlEscalasLayout.setHorizontalGroup(
            pnlEscalasLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlEscalasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEscalasLayout.createParallelGroup(Alignment.LEADING)
                    .addComponent(pnlManobras, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlTipoServico, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlBotoes, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlEscalasLayout.createSequentialGroup()
                        .addComponent(sCheckBox2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlEscalasLayout.setVerticalGroup(
            pnlEscalasLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlEscalasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlManobras, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(pnlTipoServico, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(sCheckBox2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.UNRELATED)
                .addComponent(pnlBotoes, GroupLayout.PREFERRED_SIZE, 39, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(pnlEscalas, BorderLayout.CENTER);

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sNumericTextField2ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_sNumericTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sNumericTextField2ActionPerformed
    //CHECKSTYLE:ON

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private SComboBox cboResponsavelCusto;
    SComboBox comboAgentes;
    SLabel labelAgente;
    TimeZoneComboBox timeZoneComboBox;
    private BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}
