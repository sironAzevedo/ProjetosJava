package br.com.petrobras.sistam.desktop.relatorio;

import br.com.petrobras.fcorp.swing.base.SDialog;
import br.com.petrobras.fcorp.swing.base.action.GenericAction;
import br.com.petrobras.fcorp.swing.components.SButton;
import br.com.petrobras.fcorp.swing.components.SCheckList;
import br.com.petrobras.fcorp.swing.components.SComboBox;
import br.com.petrobras.fcorp.swing.components.SDateChooser;
import br.com.petrobras.fcorp.swing.components.SLabel;
import br.com.petrobras.fcorp.swing.components.SPanel;
import br.com.petrobras.fcorp.swing.components.STable;
import br.com.petrobras.sistam.common.entity.ResponsavelCustoEntity;
import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
import java.awt.BorderLayout;
import java.util.ResourceBundle;
import javax.swing.AbstractListModel;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JScrollPane;
import javax.swing.LayoutStyle;
import javax.swing.WindowConstants;
import javax.swing.border.BevelBorder;
import javax.swing.border.SoftBevelBorder;
import org.jdesktop.beansbinding.AutoBinding;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.Binding;
import org.jdesktop.beansbinding.BindingGroup;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.JListBinding;
import org.jdesktop.swingbinding.JTableBinding;
import org.jdesktop.swingbinding.SwingBindings;

public class RelatorioVisitaDialog extends SDialog {

    private RelatorioVisitaModel model;
    /** 
     * Constrói um dialog modal centralizado no frame pai.
     */
    public RelatorioVisitaDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        model = new RelatorioVisitaModel();
        initComponents();
        setLocationRelativeTo(parent);
    }

    public RelatorioVisitaModel getModel() {
        return model;
    }
    
    public void gerar() {
        boolean todos = false;
        if (model.getFiltro().getResponsaveis().isEmpty()) {
            tabelaResponsaveisCusto.setRowSelectionInterval(0, 0);
        } else {
            for (ResponsavelCustoEntity responsavelCustoEntity : model.getFiltro().getResponsaveis()) {
                if (responsavelCustoEntity.getId() == null) {
                    todos = true;
                    break;
                }
            }
        }
        
        if (todos) {
            for (ResponsavelCustoEntity responsavelCustoEntity : model.getFiltro().getResponsaveis()) {
                if (responsavelCustoEntity.getId() != null) {
                    model.getFiltro().getResponsaveis().remove(responsavelCustoEntity);
                }
            }
            tabelaResponsaveisCusto.setRowSelectionInterval(0, 0);
        }
        
        
        model.gerar();
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings({"unchecked", "PMD"}) @SuppressFBWarnings
    //CHECKSTYLE:OFF
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new BindingGroup();

        GenericAction actionGerar = new GenericAction();
        SPanel pabelGeral = new SPanel();
        SPanel panelBotao = new SPanel();
        SButton btGerar = new SButton();
        SPanel panelFiltros = new SPanel();
        SLabel sLabel1 = new SLabel();
        SLabel sLabel2 = new SLabel();
        SLabel sLabel3 = new SLabel();
        SLabel sLabel5 = new SLabel();
        SLabel sLabel6 = new SLabel();
        SComboBox cboAgencia = new SComboBox();
        SComboBox cboPorto = new SComboBox();
        SComboBox cboTipoTransporte = new SComboBox();
        SDateChooser dtPeriodoInicio = new SDateChooser();
        SLabel sLabel7 = new SLabel();
        SDateChooser dtPeriodoTermino = new SDateChooser();
        SComboBox cboAgente = new SComboBox();
        JScrollPane jScrollPane2 = new JScrollPane();
        tabelaResponsaveisCusto = new STable();

        actionGerar.setIcon(new ImageIcon(getClass().getResource("/icons/excel.png"))); // NOI18N
        actionGerar.setMethodName("gerar");
        actionGerar.setTarget(this);
        actionGerar.setText("Gerar");
        actionGerar.setToolTipText("Gerar o relatório de visitas");

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Relatório de Visitas");

        pabelGeral.setName("pabelGeral"); // NOI18N
        pabelGeral.setLayout(new BorderLayout());

        panelBotao.setBorder(new SoftBevelBorder(BevelBorder.RAISED));
        panelBotao.setName("panelBotao"); // NOI18N

        btGerar.setAction(actionGerar);
        btGerar.setName("btGerar"); // NOI18N
        panelBotao.add(btGerar);

        panelFiltros.setBorder(BorderFactory.createTitledBorder("Filtro para o Relatório"));
        panelFiltros.setName("panelFiltros"); // NOI18N

        sLabel1.setText("Agência:");
        sLabel1.setName("sLabel1"); // NOI18N

        sLabel2.setText("Porto:");
        sLabel2.setName("sLabel2"); // NOI18N

        sLabel3.setText("Agente:");
        sLabel3.setName("sLabel3"); // NOI18N

        sLabel5.setText("Tipo de Transporte:");
        sLabel5.setName("sLabel5"); // NOI18N

        sLabel6.setText("Período:");
        sLabel6.setName("sLabel6"); // NOI18N

        cboAgencia.setName("cboAgencia"); // NOI18N

        ELProperty eLProperty = ELProperty.create("${model.agencias}");
        JComboBoxBinding jComboBoxBinding = SwingBindings.createJComboBoxBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, cboAgencia);
        bindingGroup.addBinding(jComboBoxBinding);
        Binding binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.filtro.agencia}"), cboAgencia, BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        cboPorto.setName("cboPorto"); // NOI18N

        eLProperty = ELProperty.create("${model.portos}");
        jComboBoxBinding = SwingBindings.createJComboBoxBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, cboPorto);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.filtro.porto}"), cboPorto, BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        cboTipoTransporte.setName("cboTipoTransporte"); // NOI18N

        eLProperty = ELProperty.create("${model.tiposTransporte}");
        jComboBoxBinding = SwingBindings.createJComboBoxBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, cboTipoTransporte);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.filtro.tipoTransporte}"), cboTipoTransporte, BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        dtPeriodoInicio.setName("dtPeriodoInicio"); // NOI18N

        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.filtro.inicio}"), dtPeriodoInicio, BeanProperty.create("date"));
        bindingGroup.addBinding(binding);

        ResourceBundle bundle = ResourceBundle.getBundle("sistam-labels"); // NOI18N
        sLabel7.setText(bundle.getString("lblAte")); // NOI18N
        sLabel7.setName("sLabel7"); // NOI18N

        dtPeriodoTermino.setName("dtPeriodoTermino"); // NOI18N

        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.filtro.termino}"), dtPeriodoTermino, BeanProperty.create("date"));
        bindingGroup.addBinding(binding);

        cboAgente.setName("cboAgente"); // NOI18N

        eLProperty = ELProperty.create("${model.agentes}");
        jComboBoxBinding = SwingBindings.createJComboBoxBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, cboAgente);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.filtro.agente}"), cboAgente, BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        tabelaResponsaveisCusto.setName("tabelaResponsaveisCusto"); // NOI18N

        eLProperty = ELProperty.create("${model.responsaveis}");
        JTableBinding jTableBinding = SwingBindings.createJTableBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, tabelaResponsaveisCusto);
        JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${descricao}"));
        columnBinding.setColumnName("Responsável pelo Custo");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.filtro.responsaveis}"), tabelaResponsaveisCusto, BeanProperty.create("selectedElements"));
        bindingGroup.addBinding(binding);

        jScrollPane2.setViewportView(tabelaResponsaveisCusto);

        GroupLayout panelFiltrosLayout = new GroupLayout(panelFiltros);
        panelFiltros.setLayout(panelFiltrosLayout);
        panelFiltrosLayout.setHorizontalGroup(
            panelFiltrosLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(panelFiltrosLayout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addGroup(panelFiltrosLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(sLabel1, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel2, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel3, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelFiltrosLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(cboAgente, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
                    .addComponent(cboAgencia, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cboPorto, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(panelFiltrosLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(panelFiltrosLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(panelFiltrosLayout.createSequentialGroup()
                        .addComponent(sLabel5, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboTipoTransporte, GroupLayout.PREFERRED_SIZE, 170, GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47))
                    .addGroup(GroupLayout.Alignment.TRAILING, panelFiltrosLayout.createSequentialGroup()
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 56, GroupLayout.PREFERRED_SIZE)
                        .addComponent(sLabel6, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dtPeriodoInicio, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sLabel7, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dtPeriodoTermino, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelFiltrosLayout.setVerticalGroup(
            panelFiltrosLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(panelFiltrosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelFiltrosLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(sLabel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboAgencia, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelFiltrosLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(sLabel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboPorto, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelFiltrosLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(sLabel3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboAgente, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelFiltrosLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(cboTipoTransporte, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel5, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelFiltrosLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addGroup(panelFiltrosLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                        .addComponent(dtPeriodoInicio, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addComponent(sLabel6, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelFiltrosLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(dtPeriodoTermino, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addComponent(sLabel7, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pabelGeral, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelFiltros, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panelBotao, GroupLayout.PREFERRED_SIZE, 429, GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelFiltros, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelBotao, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pabelGeral, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //CHECKSTYLE:ON

    // Variables declaration - do not modify//GEN-BEGIN:variables
    STable tabelaResponsaveisCusto;
    private BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}
