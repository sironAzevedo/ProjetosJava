package br.com.petrobras.sistam.desktop.relatorio;

import br.com.petrobras.fcorp.swing.base.SDialog;
import br.com.petrobras.fcorp.swing.base.action.GenericAction;
import br.com.petrobras.fcorp.swing.components.SButton;
import br.com.petrobras.fcorp.swing.components.SCheckList;
import br.com.petrobras.fcorp.swing.components.SComboBox;
import br.com.petrobras.fcorp.swing.components.SLabel;
import br.com.petrobras.fcorp.swing.components.SPanel;
import br.com.petrobras.sistam.common.entity.Taxa;
import br.com.petrobras.sistam.desktop.components.JMesPanel;
import br.com.petrobras.sistam.desktop.components.TimeZoneComboBox;
import br.com.petrobras.sistam.desktop.util.RelatorioUtil;
import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.util.List;
import java.util.Map;
import java.util.ResourceBundle;
import javax.swing.AbstractListModel;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.ImageIcon;
import javax.swing.JScrollPane;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.WindowConstants;
import javax.swing.border.BevelBorder;
import javax.swing.border.SoftBevelBorder;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.Binding;
import org.jdesktop.beansbinding.BindingGroup;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.JListBinding;
import org.jdesktop.swingbinding.SwingBindings;

public class RelatorioControlePagamentoTaxaDialog extends SDialog {
    private RelatorioControlePagamentoTaxaModel model;
    
    public RelatorioControlePagamentoTaxaDialog(java.awt.Frame parent, boolean modal) {        
        super(parent, modal);
        model = new RelatorioControlePagamentoTaxaModel();
        initComponents();
        setLocationRelativeTo(parent);
    }

    public RelatorioControlePagamentoTaxaModel getModel() {
        return model;
    }
    
    public void exibirRelatorioMensalTaxa(){
       List<Taxa> listaTaxas = model.buscarTaxas();
       Map<String, Object> parametros = model.obterParametros();
       
       RelatorioUtil.abrirRelatorioControlePagamentoTaxas(listaTaxas, parametros);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings({"unchecked", "PMD"}) @SuppressFBWarnings
    //CHECKSTYLE:OFF
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new BindingGroup();

        GenericAction actionTaxaMensal = new GenericAction();
        SPanel pnlCentral = new SPanel();
        SPanel pnlBotoes = new SPanel();
        SButton botalImprimir = new SButton();
        SPanel pnlFiltro = new SPanel();
        SLabel sLabel4 = new SLabel();
        SComboBox comboAgencias = new SComboBox();
        SLabel sLabel1 = new SLabel();
        SLabel sLabel5 = new SLabel();
        comboFuso = new TimeZoneComboBox();
        JMesPanel jMesPanel1 = new JMesPanel();
        JScrollPane jScrollPane1 = new JScrollPane();
        SCheckList sCheckList1 = new SCheckList();
        SLabel sLabel3 = new SLabel();
        SComboBox comboPortos = new SComboBox();

        actionTaxaMensal.setComponentToRepaint(botalImprimir);
        actionTaxaMensal.setIcon(new ImageIcon(getClass().getResource("/icons/print.png"))); // NOI18N
        actionTaxaMensal.setMethodName("exibirRelatorioMensalTaxa");
        actionTaxaMensal.setTarget(this);
        actionTaxaMensal.setText("Imprimir");
        actionTaxaMensal.setToolTipText("Imprime o relatório para controle de pagamento de taxas portuárias");

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Relatório para Controle de Pagamento de Taxas Portuárias");
        setIconImage(null);

        pnlCentral.setName("pnlCentral"); // NOI18N

        pnlBotoes.setBorder(new SoftBevelBorder(BevelBorder.RAISED));
        pnlBotoes.setName("pnlBotoes"); // NOI18N
        pnlBotoes.setPreferredSize(new Dimension(14, 40));

        botalImprimir.setAction(actionTaxaMensal);
        botalImprimir.setName("botalImprimir"); // NOI18N
        pnlBotoes.add(botalImprimir);

        pnlFiltro.setBorder(BorderFactory.createTitledBorder("Filtro para o Relatório"));
        pnlFiltro.setName("pnlFiltro"); // NOI18N

        ResourceBundle bundle = ResourceBundle.getBundle("sistam-labels"); // NOI18N
        sLabel4.setText(bundle.getString("lblAgencia")); // NOI18N
        sLabel4.setName("sLabel4"); // NOI18N

        comboAgencias.setName("comboAgencias"); // NOI18N

        ELProperty eLProperty = ELProperty.create("${model.agencias}");
        JComboBoxBinding jComboBoxBinding = SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, this, eLProperty, comboAgencias);
        bindingGroup.addBinding(jComboBoxBinding);
        Binding binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.filtro.agencia}"), comboAgencias, BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        sLabel1.setText("Mês/Ano:");
        sLabel1.setName("sLabel1"); // NOI18N

        sLabel5.setText(bundle.getString("fusoHorario")); // NOI18N
        sLabel5.setName("sLabel5"); // NOI18N

        comboFuso.setEnabled(false);
        comboFuso.setName("comboFuso"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.timeZoneSelecionado}"), comboFuso, BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        jMesPanel1.setName("jMesPanel1"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.dataSelecionada}"), jMesPanel1, BeanProperty.create("date"));
        bindingGroup.addBinding(binding);
        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${not empty model.filtro.agencia}"), jMesPanel1, BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        sCheckList1.setModel(new AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        sCheckList1.setName("sCheckList1"); // NOI18N

        eLProperty = ELProperty.create("${model.tiposTaxa}");
        JListBinding jListBinding = SwingBindings.createJListBinding(UpdateStrategy.READ_WRITE, this, eLProperty, sCheckList1);
        jListBinding.setDetailBinding(ELProperty.create("${porExtenso}"));
        bindingGroup.addBinding(jListBinding);
        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.tiposTaxaSelecionados}"), sCheckList1, BeanProperty.create("selectedElements"));
        bindingGroup.addBinding(binding);

        jScrollPane1.setViewportView(sCheckList1);

        sLabel3.setText(bundle.getString("lblPorto")); // NOI18N
        sLabel3.setName("sLabel3"); // NOI18N

        comboPortos.setName("comboPortos"); // NOI18N

        eLProperty = ELProperty.create("${model.portos}");
        jComboBoxBinding = SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, this, eLProperty, comboPortos);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.filtro.porto}"), comboPortos, BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        GroupLayout pnlFiltroLayout = new GroupLayout(pnlFiltro);
        pnlFiltro.setLayout(pnlFiltroLayout);
        pnlFiltroLayout.setHorizontalGroup(
            pnlFiltroLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlFiltroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFiltroLayout.createParallelGroup(Alignment.LEADING)
                    .addComponent(sLabel4, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel3, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel5, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.UNRELATED)
                .addGroup(pnlFiltroLayout.createParallelGroup(Alignment.LEADING)
                    .addGroup(pnlFiltroLayout.createSequentialGroup()
                        .addComponent(comboFuso, GroupLayout.PREFERRED_SIZE, 155, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addComponent(sLabel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addComponent(jMesPanel1, GroupLayout.PREFERRED_SIZE, 94, GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlFiltroLayout.createSequentialGroup()
                        .addComponent(comboAgencias, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(2, 2, 2))
                    .addComponent(comboPortos, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(148, 148, 148))
            .addGroup(pnlFiltroLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1))
        );
        pnlFiltroLayout.setVerticalGroup(
            pnlFiltroLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlFiltroLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(pnlFiltroLayout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(sLabel4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboAgencias, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.RELATED)
                .addGroup(pnlFiltroLayout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(sLabel3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboPortos, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.RELATED)
                .addGroup(pnlFiltroLayout.createParallelGroup(Alignment.LEADING)
                    .addGroup(pnlFiltroLayout.createSequentialGroup()
                        .addGroup(pnlFiltroLayout.createParallelGroup(Alignment.BASELINE)
                            .addComponent(sLabel5, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboFuso, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7))
                    .addGroup(Alignment.TRAILING, pnlFiltroLayout.createSequentialGroup()
                        .addGroup(pnlFiltroLayout.createParallelGroup(Alignment.CENTER)
                            .addComponent(sLabel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jMesPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(ComponentPlacement.UNRELATED)))
                .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
                .addContainerGap())
        );

        GroupLayout pnlCentralLayout = new GroupLayout(pnlCentral);
        pnlCentral.setLayout(pnlCentralLayout);
        pnlCentralLayout.setHorizontalGroup(
            pnlCentralLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlCentralLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCentralLayout.createParallelGroup(Alignment.LEADING)
                    .addComponent(pnlFiltro, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlBotoes, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlCentralLayout.setVerticalGroup(
            pnlCentralLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlCentralLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlFiltro, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(pnlBotoes, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(pnlCentral, BorderLayout.CENTER);

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //CHECKSTYLE:ON

    // Variables declaration - do not modify//GEN-BEGIN:variables
    TimeZoneComboBox comboFuso;
    private BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}
