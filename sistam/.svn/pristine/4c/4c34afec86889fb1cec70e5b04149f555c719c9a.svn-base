package br.com.petrobras.sistam.desktop.agenciamento.protecao;

import br.com.petrobras.fcorp.swing.base.SDialog;
import br.com.petrobras.fcorp.swing.base.action.GenericAction;
import br.com.petrobras.fcorp.swing.components.SButton;
import br.com.petrobras.fcorp.swing.components.SCheckBox;
import br.com.petrobras.fcorp.swing.components.SPanel;
import br.com.petrobras.sistam.common.entity.ServicoRetiradaResiduoLixo;
import br.com.petrobras.sistam.desktop.SistamApp;
import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.LayoutStyle;
import javax.swing.WindowConstants;
import javax.swing.border.BevelBorder;
import javax.swing.border.SoftBevelBorder;
import org.jdesktop.beansbinding.AutoBinding;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.Binding;
import org.jdesktop.beansbinding.BindingGroup;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.ELProperty;

public class EnvioEmailServicoRetiradaResiduoLixoDialog extends SDialog{
    
    private EnvioEmailServicoRetiradaResiduoLixoModel model;

    public EnvioEmailServicoRetiradaResiduoLixoDialog(java.awt.Frame parent, ServicoRetiradaResiduoLixo servicoRetiradaResiduoLixo) {
        super(parent, true);
        model = new EnvioEmailServicoRetiradaResiduoLixoModel(servicoRetiradaResiduoLixo); 
        
        initComponents();
        setLocationRelativeTo(parent);
    } 
    
    public EnvioEmailServicoRetiradaResiduoLixoModel getModel() {
        return model;
    }
    
    public void enviar(){
        model.enviar();
        model.setEnviado(true);
        dispose();
    }
    
     public void previsualizar(){
        PrevisualizarDialog dialog = new PrevisualizarDialog(SistamApp.getSistamApp().getMainFrame(), model.getPrevisualizar());
        dialog.setVisible(true);
    }

    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings({"unchecked", "PMD"}) @SuppressFBWarnings
    //CHECKSTYLE:OFF
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new BindingGroup();

        actionEnviar = new GenericAction();
        actionVisualizar = new GenericAction();
        SPanel painelDados = new SPanel();
        SPanel sPanel1 = new SPanel();
        SCheckBox chkAgencia = new SCheckBox();
        SCheckBox chkEmpresaTransporte = new SCheckBox();
        painelBotoes = new SPanel();
        SButton btnPrevisualizar = new SButton();
        SButton sButton4 = new SButton();

        actionEnviar.setIcon(new ImageIcon(getClass().getResource("/icons/send.png"))); // NOI18N
        actionEnviar.setMethodName("enviar");
        actionEnviar.setTarget(this);
        actionEnviar.setText("Enviar");
        actionEnviar.setToolTipText("Envia e-mail");

        actionVisualizar.setIcon(new ImageIcon(getClass().getResource("/icons/listagem_busca.png"))); // NOI18N
        actionVisualizar.setMethodName("previsualizar");
        actionVisualizar.setTarget(this);
        actionVisualizar.setText("Pré-visualizar");

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Envio Solicitação de Transporte");

        painelDados.setBorder(BorderFactory.createTitledBorder(""));
        painelDados.setName("painelDados"); // NOI18N

        sPanel1.setBorder(BorderFactory.createTitledBorder("Para"));
        sPanel1.setName("sPanel1"); // NOI18N

        chkAgencia.setText("Agência Marítima");
        chkAgencia.setName("chkAgencia"); // NOI18N
        chkAgencia.setOpaque(false);

        Binding binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.filtro.agenciaMaritima}"), chkAgencia, BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);
        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.filtro.servicoRetiradaResiduoLixo.servicoProtecao.agenciamento.agencia.nome} - ${model.filtro.servicoRetiradaResiduoLixo.servicoProtecao.agenciamento.agencia.email}"), chkAgencia, BeanProperty.create("text"), "");
        bindingGroup.addBinding(binding);

        chkEmpresaTransporte.setText("Empresa Responsável pelo Transbordo");
        chkEmpresaTransporte.setName("chkEmpresaTransporte"); // NOI18N
        chkEmpresaTransporte.setOpaque(false);

        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.filtro.empresaResponsavel}"), chkEmpresaTransporte, BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);
        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.filtro.servicoRetiradaResiduoLixo.empresaServico.empresa.razaoSocial} - ${model.filtro.servicoRetiradaResiduoLixo.empresaServico.empresa.email}"), chkEmpresaTransporte, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        GroupLayout sPanel1Layout = new GroupLayout(sPanel1);
        sPanel1.setLayout(sPanel1Layout);
        sPanel1Layout.setHorizontalGroup(
            sPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(sPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(chkEmpresaTransporte, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkAgencia, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        sPanel1Layout.setVerticalGroup(
            sPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(sPanel1Layout.createSequentialGroup()
                .addComponent(chkAgencia, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(chkEmpresaTransporte, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        GroupLayout painelDadosLayout = new GroupLayout(painelDados);
        painelDados.setLayout(painelDadosLayout);
        painelDadosLayout.setHorizontalGroup(
            painelDadosLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(painelDadosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        painelDadosLayout.setVerticalGroup(
            painelDadosLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(painelDadosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sPanel1, GroupLayout.PREFERRED_SIZE, 72, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        painelBotoes.setBorder(new SoftBevelBorder(BevelBorder.RAISED));
        painelBotoes.setName("painelBotoes"); // NOI18N

        btnPrevisualizar.setAction(actionVisualizar);
        btnPrevisualizar.setName("btnPrevisualizar"); // NOI18N
        painelBotoes.add(btnPrevisualizar);

        sButton4.setAction(actionEnviar);
        sButton4.setName("sButton4"); // NOI18N
        painelBotoes.add(sButton4);

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(painelBotoes, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(painelDados, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(painelDados, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(painelBotoes, GroupLayout.PREFERRED_SIZE, 39, GroupLayout.PREFERRED_SIZE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //CHECKSTYLE:ON

    // Variables declaration - do not modify//GEN-BEGIN:variables
    GenericAction actionEnviar;
    GenericAction actionVisualizar;
    SPanel painelBotoes;
    private BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}
