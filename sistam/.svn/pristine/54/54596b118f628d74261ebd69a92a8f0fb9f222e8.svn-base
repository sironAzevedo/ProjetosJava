package br.com.petrobras.sistam.desktop.agenciamento.operacoes;

import br.com.petrobras.fcorp.swing.base.SDialog;
import br.com.petrobras.fcorp.swing.base.action.GenericAction;
import br.com.petrobras.fcorp.swing.components.SButton;
import br.com.petrobras.fcorp.swing.components.SComboBox;
import br.com.petrobras.fcorp.swing.components.SLabel;
import br.com.petrobras.fcorp.swing.components.SNumericTextField;
import br.com.petrobras.fcorp.swing.components.SPanel;
import br.com.petrobras.fcorp.swing.components.STextField;
import br.com.petrobras.fcorp.swing.components.util.GenericDocument;
import br.com.petrobras.sistam.common.entity.DocumentacaoOperacao;
import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.ImageIcon;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.WindowConstants;
import javax.swing.border.BevelBorder;
import javax.swing.border.SoftBevelBorder;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.Binding;
import org.jdesktop.beansbinding.BindingGroup;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
public class AssociacaoProdutoCargaCabotagemDialog extends SDialog {
    private AssociacaoProdutoCargaCabotagemModel model;
    
    public AssociacaoProdutoCargaCabotagemDialog(java.awt.Frame parent, DocumentacaoOperacao documentacaoProduto) {
        super(parent, true);
        this.model = new AssociacaoProdutoCargaCabotagemModel(documentacaoProduto);
        initComponents();
        setLocationRelativeTo(parent);
    }

    public AssociacaoProdutoCargaCabotagemModel getModel() {
        return model;
    }
    
    public void salvar(){
        model.salvar();
        dispose();
    }
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings({"unchecked", "PMD"}) @SuppressFBWarnings
    //CHECKSTYLE:OFF
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new BindingGroup();

        GenericAction actionSalvar = new GenericAction();
        SPanel painelInformacoes = new SPanel();
        SLabel labelProduto = new SLabel();
        SComboBox comboProduto = new SComboBox();
        SLabel labelQuantidadeKg = new SLabel();
        SNumericTextField sNumericTextField1 = new SNumericTextField();
        SLabel labelCE = new SLabel();
        STextField sTextField1 = new STextField();
        SLabel labelQuantidadeLitro = new SLabel();
        SNumericTextField sNumericTextField2 = new SNumericTextField();
        SLabel labelCtac = new SLabel();
        STextField sTextField2 = new STextField();
        SLabel labelQuantidadeLitro1 = new SLabel();
        SNumericTextField sNumericTextField3 = new SNumericTextField();
        SLabel labelCtac1 = new SLabel();
        STextField sTextField3 = new STextField();
        SPanel painelBotoes = new SPanel();
        SButton botaoSalvar = new SButton();

        actionSalvar.setIcon(new ImageIcon(getClass().getResource("/icons/disk.png"))); // NOI18N
        actionSalvar.setMethodName("salvar");
        actionSalvar.setTarget(this);
        actionSalvar.setText("Salvar");
        actionSalvar.setToolTipText("Salva as informações do produto da documentação");

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Produto da Documentação de Carga Cabotagem");

        painelInformacoes.setBorder(BorderFactory.createTitledBorder("Informações"));
        painelInformacoes.setName("painelInformacoes"); // NOI18N

        labelProduto.setText("Produto:");
        labelProduto.setName("labelProduto"); // NOI18N

        comboProduto.setName("comboProduto"); // NOI18N

        ELProperty eLProperty = ELProperty.create("${model.listaProduto}");
        JComboBoxBinding jComboBoxBinding = SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, this, eLProperty, comboProduto);
        bindingGroup.addBinding(jComboBoxBinding);
        Binding binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.documentacaoProduto.operacao}"), comboProduto, BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        labelQuantidadeKg.setText("Qtd. (Kg):");
        labelQuantidadeKg.setName("labelQuantidadeKg"); // NOI18N

        sNumericTextField1.setDecimalPlaces(new Short((short)3));
        sNumericTextField1.setIntegerPlaces(new Short((short)11));
        sNumericTextField1.setNumberClass(Double.class);
        sNumericTextField1.setText("sNumericTextField1");
        sNumericTextField1.setName("sNumericTextField1"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.documentacaoProduto.quantidadeKg}"), sNumericTextField1, BeanProperty.create("doubleValue"));
        bindingGroup.addBinding(binding);

        labelCE.setText("CE:");
        labelCE.setName("labelCE"); // NOI18N

        sTextField1.setDocument(new GenericDocument(15, GenericDocument.OPTION_APPLY_UPPERCASE ));
        sTextField1.setName("sTextField1"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.documentacaoProduto.conhecimentoEletronico}"), sTextField1, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.permitidoEditarCE}"), sTextField1, BeanProperty.create("editable"));
        bindingGroup.addBinding(binding);

        labelQuantidadeLitro.setText("Qtd. (Litro):");
        labelQuantidadeLitro.setName("labelQuantidadeLitro"); // NOI18N

        sNumericTextField2.setDecimalPlaces(new Short((short)3));
        sNumericTextField2.setIntegerPlaces(new Short((short)11));
        sNumericTextField2.setNumberClass(Double.class);
        sNumericTextField2.setText("sNumericTextField1");
        sNumericTextField2.setName("sNumericTextField2"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.documentacaoProduto.quantidadeLt}"), sNumericTextField2, BeanProperty.create("doubleValue"));
        bindingGroup.addBinding(binding);

        labelCtac.setText("CTAC:");
        labelCtac.setName("labelCtac"); // NOI18N

        sTextField2.setDocument(new GenericDocument(16, GenericDocument.OPTION_APPLY_UPPERCASE ));
        sTextField2.setName("sTextField2"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.documentacaoProduto.ctac}"), sTextField2, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.permitidoEditarCTAC}"), sTextField2, BeanProperty.create("editable"));
        bindingGroup.addBinding(binding);

        labelQuantidadeLitro1.setText("Frete (R$):");
        labelQuantidadeLitro1.setName("labelQuantidadeLitro1"); // NOI18N

        sNumericTextField3.setIntegerPlaces(new Short((short)13));
        sNumericTextField3.setNumberClass(Double.class);
        sNumericTextField3.setText("sNumericTextField1");
        sNumericTextField3.setName("sNumericTextField3"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.documentacaoProduto.frete}"), sNumericTextField3, BeanProperty.create("doubleValue"));
        bindingGroup.addBinding(binding);

        labelCtac1.setText("Terminal de Descarga:");
        labelCtac1.setName("labelCtac1"); // NOI18N

        sTextField3.setDocument(new GenericDocument(100));
        sTextField3.setName("sTextField3"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.documentacaoProduto.terminal}"), sTextField3, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        GroupLayout painelInformacoesLayout = new GroupLayout(painelInformacoes);
        painelInformacoes.setLayout(painelInformacoesLayout);
        painelInformacoesLayout.setHorizontalGroup(
            painelInformacoesLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(painelInformacoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelInformacoesLayout.createParallelGroup(Alignment.LEADING)
                    .addComponent(labelProduto, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelQuantidadeKg, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelQuantidadeLitro, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelQuantidadeLitro1, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.UNRELATED)
                .addGroup(painelInformacoesLayout.createParallelGroup(Alignment.LEADING)
                    .addComponent(comboProduto, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(painelInformacoesLayout.createSequentialGroup()
                        .addGroup(painelInformacoesLayout.createParallelGroup(Alignment.TRAILING, false)
                            .addComponent(sNumericTextField3, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                            .addComponent(sNumericTextField1, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sNumericTextField2, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(painelInformacoesLayout.createParallelGroup(Alignment.TRAILING)
                            .addComponent(labelCE, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelCtac, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelCtac1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addGroup(painelInformacoesLayout.createParallelGroup(Alignment.LEADING)
                            .addComponent(sTextField2, GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
                            .addComponent(sTextField1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sTextField3, GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE))))
                .addContainerGap())
        );
        painelInformacoesLayout.setVerticalGroup(
            painelInformacoesLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(painelInformacoesLayout.createSequentialGroup()
                .addGroup(painelInformacoesLayout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(labelProduto, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboProduto, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.UNRELATED)
                .addGroup(painelInformacoesLayout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(labelQuantidadeKg, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sNumericTextField1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCE, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sTextField1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.UNRELATED)
                .addGroup(painelInformacoesLayout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(labelQuantidadeLitro, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sNumericTextField2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCtac, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sTextField2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.UNRELATED)
                .addGroup(painelInformacoesLayout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(labelQuantidadeLitro1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sNumericTextField3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCtac1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sTextField3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        painelBotoes.setBorder(new SoftBevelBorder(BevelBorder.RAISED));
        painelBotoes.setName("painelBotoes"); // NOI18N

        botaoSalvar.setAction(actionSalvar);
        botaoSalvar.setName("botaoSalvar"); // NOI18N
        painelBotoes.add(botaoSalvar);

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(Alignment.LEADING)
                    .addComponent(painelInformacoes, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painelBotoes, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painelInformacoes, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(painelBotoes, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //CHECKSTYLE:ON

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}
