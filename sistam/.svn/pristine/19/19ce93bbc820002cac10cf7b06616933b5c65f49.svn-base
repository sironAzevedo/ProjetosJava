package br.com.petrobras.sistam.desktop.agenciamento.protecao;

import br.com.petrobras.fcorp.swing.base.SDialog;
import br.com.petrobras.fcorp.swing.base.action.GenericAction;
import br.com.petrobras.fcorp.swing.components.SButton;
import br.com.petrobras.fcorp.swing.components.SCheckBox;
import br.com.petrobras.fcorp.swing.components.SComboBox;
import br.com.petrobras.fcorp.swing.components.SLabel;
import br.com.petrobras.fcorp.swing.components.SNumericTextField;
import br.com.petrobras.fcorp.swing.components.SPanel;
import br.com.petrobras.fcorp.swing.components.STable;
import br.com.petrobras.fcorp.swing.components.STextField;
import br.com.petrobras.fcorp.swing.components.util.GenericDocument;
import br.com.petrobras.sistam.common.entity.ServicoSuprimentoTransito;
import br.com.petrobras.sistam.common.enums.TipoVeiculo;
import br.com.petrobras.sistam.desktop.components.SistamNumberCellRenderer;
import br.com.petrobras.sistam.desktop.components.lookups.servicoprotecao.EmpresaProtecaoLookup;
import br.com.petrobras.sistam.desktop.components.lookups.servicoprotecao.PessoaProtecaoLookup;
import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
import java.awt.Component;
import java.math.BigDecimal;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JScrollPane;
import javax.swing.LayoutStyle;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.WindowConstants;
import javax.swing.border.BevelBorder;
import javax.swing.border.SoftBevelBorder;
import org.jdesktop.beansbinding.AutoBinding;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.Binding;
import org.jdesktop.beansbinding.BindingGroup;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.JTableBinding;
import org.jdesktop.swingbinding.SwingBindings;

public class RegistroDeSolicitacaoDeTransitoDialog extends SDialog {

    public static final String SOLICITACAO_TRANSITO_INSERIDO = "FORNECEDOR_INSERIDO";
    public static final String SOLICITACAO_TRANSITO_ALTERADO = "FORNECEDOR_ALTERADO"; 
    private RegistroDeSolicitacaoDeTransitoModel model;

    public RegistroDeSolicitacaoDeTransitoDialog(java.awt.Frame parent, ServicoSuprimentoTransito suprimentoTransito, boolean edicao, boolean editarTerminal) {
        super(parent, true); 
        model = new RegistroDeSolicitacaoDeTransitoModel(suprimentoTransito, edicao, editarTerminal);
        initComponents(); 
        setLocationRelativeTo(parent);
    } 
    
    public RegistroDeSolicitacaoDeTransitoModel getModel() {
        return model;
    }

    public void salvar() {
        String property = model.isEdicao() ? SOLICITACAO_TRANSITO_ALTERADO : SOLICITACAO_TRANSITO_INSERIDO;

        model.validar();
//        model.salvar();
        firePropertyChange(property, null, null);

        //Se não for pra continuar inserindo, fecha a tela.
        if (!model.isContinuarInserindo()) {
            dispose();
        } else {
            //caso continue inserindo, prepara um novo serviço
            model.prepararNovaSolicitaçãoTransito();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings({"unchecked", "PMD"})
    @SuppressFBWarnings
    //CHECKSTYLE:OFF
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new BindingGroup();

        actionSalvar = new GenericAction();
        GenericAction actionAdicionarFornecedor = new GenericAction();
        GenericAction actionExcluirFornecedor = new GenericAction();
        GenericAction actionAdicionarVeiculo = new GenericAction();
        GenericAction actionExcluirVeiculo = new GenericAction();
        SistamNumberCellRenderer rendererMonetario = new SistamNumberCellRenderer();
        SPanel pnlRegistroFornecedor = new SPanel();
        labelLocaisAcesso = new SLabel();
        chkTerminal = new SCheckBox();
        chkCompanhia = new SCheckBox();
        txtTerminal = new STextField();
        SPanel pnlRegistroFornecedor1 = new SPanel();
        labelEmpresa = new SLabel();
        prestadorServicoLookup = new EmpresaProtecaoLookup();
        labelCNPJ = new SLabel();
        STextField sTextField1 = new STextField();
        labelPesoBruto = new SLabel();
        labelVolume = new SLabel();
        labelDocOuNotaFiscal = new SLabel();
        scrollTripulante = new JScrollPane();
        tabelaCadastroFornecedor = new STable();
        SButton btnAdicionarFornecedor = new SButton();
        SButton btnRemoverFornecedor = new SButton();
        labelDocOuNotaFiscal1 = new SLabel();
        SNumericTextField sntfValorMercadoria = new SNumericTextField();
        STextField txtDocNotaFiscal = new STextField();
        SNumericTextField sntfQtdVolume = new SNumericTextField();
        STextField txtPesoBruto = new STextField();
        SPanel pnlCadastroDeCondutores = new SPanel();
        labelCondutor = new SLabel();
        labelCNPJ1 = new SLabel();
        STextField sTextField2 = new STextField();
        scrollTripulante1 = new JScrollPane();
        tabelaCadastroFornecedor1 = new STable();
        SButton btnAdicionarVeiculo = new SButton();
        SButton btnRemoverVeiculo = new SButton();
        labelCNPJ2 = new SLabel();
        labelCNPJ3 = new SLabel();
        STextField txtPlaca = new STextField();
        pessoaProtecaoLookup = new PessoaProtecaoLookup();
        SComboBox comboVeiculo = new SComboBox();
        labelTipoAcesso = new SLabel();
        comboMercadorias = new SComboBox();
        labelTipoMaterial = new SLabel();
        comboTipoMaterial = new SComboBox();
        painelBotoes = new SPanel();
        SButton sButton4 = new SButton();
        checkContinuarInserindo = new SCheckBox();

        actionSalvar.setIcon(new ImageIcon(getClass().getResource("/icons/disk.png"))); // NOI18N
        actionSalvar.setMethodName("salvar");
        actionSalvar.setTarget(this);
        actionSalvar.setText("Salvar");
        actionSalvar.setToolTipText("Salva a pessoa");

        actionAdicionarFornecedor.setIcon(new ImageIcon(getClass().getResource("/icons/add.png"))); // NOI18N
        actionAdicionarFornecedor.setMethodName("adicionarFornecedor");
        actionAdicionarFornecedor.setTarget(model);
        actionAdicionarFornecedor.setText("");
        actionAdicionarFornecedor.setToolTipText("Adicionar Fornecedor");

        actionExcluirFornecedor.setConfirm("Confirma exclusão do fornecedor selecionado?");
        actionExcluirFornecedor.setIcon(new ImageIcon(getClass().getResource("/icons/delete.png"))); // NOI18N
        actionExcluirFornecedor.setMethodName("excluirFornecedor");
        actionExcluirFornecedor.setTarget(model);
        actionExcluirFornecedor.setToolTipText("Excluir Fornecedor");

        Binding binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${not empty model.suprimentoTransitoEmpresaSelecionado}"), actionExcluirFornecedor, BeanProperty.create("enabled"), "");
        bindingGroup.addBinding(binding);

        actionAdicionarVeiculo.setIcon(new ImageIcon(getClass().getResource("/icons/add.png"))); // NOI18N
        actionAdicionarVeiculo.setMethodName("adicionarVeiculo");
        actionAdicionarVeiculo.setTarget(model);
        actionAdicionarVeiculo.setToolTipText("Adicionar Condutor");

        actionExcluirVeiculo.setConfirm("Confirma exclusão do veículo selecionado?");
        actionExcluirVeiculo.setIcon(new ImageIcon(getClass().getResource("/icons/delete.png"))); // NOI18N
        actionExcluirVeiculo.setMethodName("excluirVeiculo");
        actionExcluirVeiculo.setTarget(model);
        actionExcluirVeiculo.setToolTipText("Excluir Condutor");

        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${not empty model.suprimentoTransitoVeiculoSelecionado}"), actionExcluirVeiculo, BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registro de Solicitação de Trânsito");

        pnlRegistroFornecedor.setBorder(BorderFactory.createTitledBorder(""));
        pnlRegistroFornecedor.setName("pnlRegistroFornecedor"); // NOI18N

        labelLocaisAcesso.setText("Local(is) do acesso:");
        labelLocaisAcesso.setName("labelLocaisAcesso"); // NOI18N

        chkTerminal.setText("Terminal");
        chkTerminal.setName("chkTerminal"); // NOI18N
        chkTerminal.setOpaque(false);

        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.suprimentoTransito.terminal}"), chkTerminal, BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        chkCompanhia.setText("Companhia Docas");
        chkCompanhia.setName("chkCompanhia"); // NOI18N
        chkCompanhia.setOpaque(false);

        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.suprimentoTransito.companhiaDocas}"), chkCompanhia, BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        txtTerminal.setDocument(new GenericDocument(50));
        txtTerminal.setName("txtTerminal"); // NOI18N

        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.suprimentoTransito.descricaoTerminal}"), txtTerminal, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.suprimentoTransito.terminal && model.editarTerminal}"), txtTerminal, BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        pnlRegistroFornecedor1.setBorder(BorderFactory.createTitledBorder("Fornecedores"));
        pnlRegistroFornecedor1.setToolTipText("");
        pnlRegistroFornecedor1.setName("pnlRegistroFornecedor1"); // NOI18N

        labelEmpresa.setText("Empresa:");
        labelEmpresa.setName("labelEmpresa"); // NOI18N

        prestadorServicoLookup.setName("prestadorServicoLookup"); // NOI18N

        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.suprimentoTransitoEmpresa.id==null}"), prestadorServicoLookup, BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);
        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.prestadorServico}"), prestadorServicoLookup, BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        labelCNPJ.setText("CNPJ:");
        labelCNPJ.setName("labelCNPJ"); // NOI18N

        sTextField1.setEditable(false);
        sTextField1.setName("sTextField1"); // NOI18N

        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.suprimentoTransitoEmpresa.cnpjPrestadorServicoComMascara}"), sTextField1, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.suprimentoTransitoEmpresa.id==null}"), sTextField1, BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        labelPesoBruto.setText("Peso Bruto:");
        labelPesoBruto.setName("labelPesoBruto"); // NOI18N

        labelVolume.setText("Volume:");
        labelVolume.setName("labelVolume"); // NOI18N

        labelDocOuNotaFiscal.setText("Doc/Nº da Nota Fiscal:");
        labelDocOuNotaFiscal.setName("labelDocOuNotaFiscal"); // NOI18N

        scrollTripulante.setName("scrollTripulante"); // NOI18N

        tabelaCadastroFornecedor.setSortable(true);
        tabelaCadastroFornecedor.setName("tabelaCadastroFornecedor"); // NOI18N
        tabelaCadastroFornecedor.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        ELProperty eLProperty = ELProperty.create("${model.suprimentoTransito.transitosEmpresas}");
        JTableBinding jTableBinding = SwingBindings.createJTableBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, tabelaCadastroFornecedor);
        JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${nomePrestadorServico}"));
        columnBinding.setColumnName("Fornecedor");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${valorPesoBruto}"));
        columnBinding.setColumnName("Peso Bruto");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${quantidadeVolume}"));
        columnBinding.setColumnName("Volumes");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${descNotaFiscal}"));
        columnBinding.setColumnName("Nota Fiscal/GTRM");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.suprimentoTransitoEmpresaSelecionado}"), tabelaCadastroFornecedor, BeanProperty.create("selectedElement"));
        bindingGroup.addBinding(binding);

        scrollTripulante.setViewportView(tabelaCadastroFornecedor);
        tabelaCadastroFornecedor.getColumnModel().getColumn(1).setMinWidth(120);
        tabelaCadastroFornecedor.getColumnModel().getColumn(1).setMaxWidth(120);
        tabelaCadastroFornecedor.getColumnModel().getColumn(1).setCellRenderer(rendererMonetario);
        tabelaCadastroFornecedor.getColumnModel().getColumn(2).setMinWidth(120);
        tabelaCadastroFornecedor.getColumnModel().getColumn(2).setMaxWidth(120);
        tabelaCadastroFornecedor.getColumnModel().getColumn(3).setMinWidth(120);
        tabelaCadastroFornecedor.getColumnModel().getColumn(3).setMaxWidth(120);

        btnAdicionarFornecedor.setAction(actionAdicionarFornecedor);
        btnAdicionarFornecedor.setName("btnAdicionarFornecedor"); // NOI18N

        btnRemoverFornecedor.setAction(actionExcluirFornecedor);
        btnRemoverFornecedor.setName("btnRemoverFornecedor"); // NOI18N

        labelDocOuNotaFiscal1.setText("Valor Mercadoria:");
        labelDocOuNotaFiscal1.setName("labelDocOuNotaFiscal1"); // NOI18N

        sntfValorMercadoria.setIntegerPlaces(new Short((short)13));
        sntfValorMercadoria.setNumberClass(BigDecimal.class);
        sntfValorMercadoria.setText("sNumericTextField2");
        sntfValorMercadoria.setName("sntfValorMercadoria"); // NOI18N

        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.suprimentoTransitoEmpresa.valorMercadorias}"), sntfValorMercadoria, BeanProperty.create("bigDecimalValue"));
        bindingGroup.addBinding(binding);

        txtDocNotaFiscal.setDocument(new GenericDocument(50));
        txtDocNotaFiscal.setName("txtDocNotaFiscal"); // NOI18N

        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.suprimentoTransitoEmpresa.descNotaFiscal}"), txtDocNotaFiscal, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        sntfQtdVolume.setIntegerPlaces(new Short((short)8));
        sntfQtdVolume.setText("sNumericTextField2");
        sntfQtdVolume.setName("sntfQtdVolume"); // NOI18N

        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.suprimentoTransitoEmpresa.quantidadeVolume}"), sntfQtdVolume, BeanProperty.create("integerValue"));
        bindingGroup.addBinding(binding);

        txtPesoBruto.setDocument(new GenericDocument(30));
        txtPesoBruto.setName("txtPesoBruto"); // NOI18N

        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.suprimentoTransitoEmpresa.valorPesoBruto}"), txtPesoBruto, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        GroupLayout pnlRegistroFornecedor1Layout = new GroupLayout(pnlRegistroFornecedor1);
        pnlRegistroFornecedor1.setLayout(pnlRegistroFornecedor1Layout);
        pnlRegistroFornecedor1Layout.setHorizontalGroup(
            pnlRegistroFornecedor1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(pnlRegistroFornecedor1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlRegistroFornecedor1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(labelEmpresa, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCNPJ, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelPesoBruto, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(pnlRegistroFornecedor1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(pnlRegistroFornecedor1Layout.createSequentialGroup()
                        .addComponent(sTextField1, GroupLayout.PREFERRED_SIZE, 192, GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnlRegistroFornecedor1Layout.createSequentialGroup()
                        .addComponent(txtPesoBruto, GroupLayout.PREFERRED_SIZE, 96, GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(labelVolume, GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sntfQtdVolume, GroupLayout.PREFERRED_SIZE, 94, GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(labelDocOuNotaFiscal, GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDocNotaFiscal, GroupLayout.PREFERRED_SIZE, 86, GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(labelDocOuNotaFiscal1, GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sntfValorMercadoria, GroupLayout.PREFERRED_SIZE, 94, GroupLayout.PREFERRED_SIZE))
                    .addComponent(scrollTripulante)
                    .addComponent(prestadorServicoLookup, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlRegistroFornecedor1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(btnRemoverFornecedor, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdicionarFornecedor, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        pnlRegistroFornecedor1Layout.setVerticalGroup(
            pnlRegistroFornecedor1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(pnlRegistroFornecedor1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlRegistroFornecedor1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(prestadorServicoLookup, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelEmpresa, GroupLayout.PREFERRED_SIZE, 20, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlRegistroFornecedor1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(sTextField1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCNPJ, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlRegistroFornecedor1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(labelVolume, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelDocOuNotaFiscal, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sntfValorMercadoria, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelPesoBruto, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelDocOuNotaFiscal1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtDocNotaFiscal, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sntfQtdVolume, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtPesoBruto, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(pnlRegistroFornecedor1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(scrollTripulante, GroupLayout.PREFERRED_SIZE, 108, GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlRegistroFornecedor1Layout.createSequentialGroup()
                        .addComponent(btnAdicionarFornecedor, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemoverFornecedor, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlRegistroFornecedor1Layout.linkSize(SwingConstants.VERTICAL, new Component[] {labelCNPJ, labelEmpresa, prestadorServicoLookup, sTextField1});

        pnlCadastroDeCondutores.setBorder(BorderFactory.createTitledBorder("Condutores"));
        pnlCadastroDeCondutores.setToolTipText("");
        pnlCadastroDeCondutores.setName("pnlCadastroDeCondutores"); // NOI18N

        labelCondutor.setText("Nome:");
        labelCondutor.setName("labelCondutor"); // NOI18N

        labelCNPJ1.setText("CPF:");
        labelCNPJ1.setName("labelCNPJ1"); // NOI18N

        sTextField2.setEditable(false);
        sTextField2.setName("sTextField2"); // NOI18N

        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.suprimentoTransitoVeiculo.cpfComMascara}"), sTextField2, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.suprimentoTransitoVeiculo.id==null}"), sTextField2, BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        scrollTripulante1.setName("scrollTripulante1"); // NOI18N

        tabelaCadastroFornecedor1.setSortable(true);
        tabelaCadastroFornecedor1.setName("tabelaCadastroFornecedor1"); // NOI18N
        tabelaCadastroFornecedor1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        eLProperty = ELProperty.create("${model.suprimentoTransito.transitosVeiculos}");
        jTableBinding = SwingBindings.createJTableBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, tabelaCadastroFornecedor1);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${nomeCondutor}"));
        columnBinding.setColumnName("Condutor");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${cpfComMascara}"));
        columnBinding.setColumnName("CPF");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${tipoVeiculo}"));
        columnBinding.setColumnName("Veículo");
        columnBinding.setColumnClass(TipoVeiculo.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${placaVeiculo}"));
        columnBinding.setColumnName("Placa");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.suprimentoTransitoVeiculoSelecionado}"), tabelaCadastroFornecedor1, BeanProperty.create("selectedElement"));
        bindingGroup.addBinding(binding);

        scrollTripulante1.setViewportView(tabelaCadastroFornecedor1);
        tabelaCadastroFornecedor1.getColumnModel().getColumn(1).setMinWidth(120);
        tabelaCadastroFornecedor1.getColumnModel().getColumn(1).setMaxWidth(120);
        tabelaCadastroFornecedor1.getColumnModel().getColumn(2).setMinWidth(120);
        tabelaCadastroFornecedor1.getColumnModel().getColumn(2).setMaxWidth(120);
        tabelaCadastroFornecedor1.getColumnModel().getColumn(3).setMinWidth(120);
        tabelaCadastroFornecedor1.getColumnModel().getColumn(3).setMaxWidth(120);

        btnAdicionarVeiculo.setAction(actionAdicionarVeiculo);
        btnAdicionarVeiculo.setName("btnAdicionarVeiculo"); // NOI18N

        btnRemoverVeiculo.setAction(actionExcluirVeiculo);
        btnRemoverVeiculo.setName("btnRemoverVeiculo"); // NOI18N

        labelCNPJ2.setText("Veículo:");
        labelCNPJ2.setName("labelCNPJ2"); // NOI18N

        labelCNPJ3.setText("Placa:");
        labelCNPJ3.setName("labelCNPJ3"); // NOI18N

        txtPlaca.setDocument(new GenericDocument(20));
        txtPlaca.setName("txtPlaca"); // NOI18N

        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.suprimentoTransitoVeiculo.placaVeiculo}"), txtPlaca, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        pessoaProtecaoLookup.setName("pessoaProtecaoLookup"); // NOI18N

        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.suprimentoTransitoVeiculo.id==null}"), pessoaProtecaoLookup, BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);
        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.pessoa}"), pessoaProtecaoLookup, BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        comboVeiculo.setName("comboVeiculo"); // NOI18N

        eLProperty = ELProperty.create("${model.listaVeiculos}");
        JComboBoxBinding jComboBoxBinding = SwingBindings.createJComboBoxBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, comboVeiculo);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.suprimentoTransitoVeiculo.tipoVeiculo}"), comboVeiculo, BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);
        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.suprimentoTransitoVeiculo.id==null}"), comboVeiculo, BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        GroupLayout pnlCadastroDeCondutoresLayout = new GroupLayout(pnlCadastroDeCondutores);
        pnlCadastroDeCondutores.setLayout(pnlCadastroDeCondutoresLayout);
        pnlCadastroDeCondutoresLayout.setHorizontalGroup(
            pnlCadastroDeCondutoresLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(pnlCadastroDeCondutoresLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(pnlCadastroDeCondutoresLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(labelCondutor, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCNPJ1, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(pnlCadastroDeCondutoresLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlCadastroDeCondutoresLayout.createSequentialGroup()
                        .addComponent(sTextField2, GroupLayout.PREFERRED_SIZE, 176, GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(labelCNPJ2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboVeiculo, GroupLayout.PREFERRED_SIZE, 176, GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(labelCNPJ3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPlaca, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(scrollTripulante1)
                    .addComponent(pessoaProtecaoLookup, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlCadastroDeCondutoresLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnRemoverVeiculo, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdicionarVeiculo, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        pnlCadastroDeCondutoresLayout.setVerticalGroup(
            pnlCadastroDeCondutoresLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(pnlCadastroDeCondutoresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCadastroDeCondutoresLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCondutor, GroupLayout.PREFERRED_SIZE, 20, GroupLayout.PREFERRED_SIZE)
                    .addComponent(pessoaProtecaoLookup, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCadastroDeCondutoresLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(sTextField2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelCNPJ1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCNPJ2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCNPJ3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPlaca, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboVeiculo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCadastroDeCondutoresLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(scrollTripulante1, GroupLayout.PREFERRED_SIZE, 117, GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlCadastroDeCondutoresLayout.createSequentialGroup()
                        .addComponent(btnAdicionarVeiculo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemoverVeiculo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        labelTipoAcesso.setText("Tipo de Acesso:");
        labelTipoAcesso.setName("labelTipoAcesso"); // NOI18N

        comboMercadorias.setName("comboMercadorias"); // NOI18N

        eLProperty = ELProperty.create("${model.listaTipoMercadorias}");
        jComboBoxBinding = SwingBindings.createJComboBoxBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, comboMercadorias);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.suprimentoTransito.tipoMercadorias}"), comboMercadorias, BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        labelTipoMaterial.setText("Tipo de Material:");
        labelTipoMaterial.setName("labelTipoMaterial"); // NOI18N

        comboTipoMaterial.setName("comboTipoMaterial"); // NOI18N

        eLProperty = ELProperty.create("${model.listaTipoMaterial}");
        jComboBoxBinding = SwingBindings.createJComboBoxBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, comboTipoMaterial);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.suprimentoTransito.tipoMaterial}"), comboTipoMaterial, BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        GroupLayout pnlRegistroFornecedorLayout = new GroupLayout(pnlRegistroFornecedor);
        pnlRegistroFornecedor.setLayout(pnlRegistroFornecedorLayout);
        pnlRegistroFornecedorLayout.setHorizontalGroup(
            pnlRegistroFornecedorLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(pnlRegistroFornecedorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlRegistroFornecedorLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlRegistroFornecedor1, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(GroupLayout.Alignment.LEADING, pnlRegistroFornecedorLayout.createSequentialGroup()
                        .addGroup(pnlRegistroFornecedorLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addGroup(pnlRegistroFornecedorLayout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(pnlRegistroFornecedorLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                    .addComponent(labelTipoAcesso, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelTipoMaterial, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                            .addComponent(labelLocaisAcesso, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlRegistroFornecedorLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(chkCompanhia, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlRegistroFornecedorLayout.createSequentialGroup()
                                .addComponent(chkTerminal, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTerminal, GroupLayout.DEFAULT_SIZE, 635, Short.MAX_VALUE))
                            .addComponent(comboTipoMaterial, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comboMercadorias, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(pnlCadastroDeCondutores, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlRegistroFornecedorLayout.setVerticalGroup(
            pnlRegistroFornecedorLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(pnlRegistroFornecedorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlRegistroFornecedorLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(labelLocaisAcesso, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkCompanhia, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlRegistroFornecedorLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(pnlRegistroFornecedorLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(txtTerminal, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                    .addComponent(chkTerminal, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlRegistroFornecedorLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(comboMercadorias, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelTipoAcesso, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlRegistroFornecedorLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(comboTipoMaterial, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelTipoMaterial, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlRegistroFornecedor1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlCadastroDeCondutores, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlRegistroFornecedorLayout.linkSize(SwingConstants.VERTICAL, new Component[] {chkCompanhia, chkTerminal, comboMercadorias, comboTipoMaterial, txtTerminal});

        painelBotoes.setBorder(new SoftBevelBorder(BevelBorder.RAISED));
        painelBotoes.setName("painelBotoes"); // NOI18N

        sButton4.setAction(actionSalvar);
        sButton4.setName("sButton4"); // NOI18N
        painelBotoes.add(sButton4);

        checkContinuarInserindo.setText("Após salvar, continuar inserindo.");
        checkContinuarInserindo.setName("checkContinuarInserindo"); // NOI18N
        checkContinuarInserindo.setOpaque(false);

        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.continuarInserindo}"), checkContinuarInserindo, BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(checkContinuarInserindo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlRegistroFornecedor, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(20, Short.MAX_VALUE))))
            .addComponent(painelBotoes, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlRegistroFornecedor, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(checkContinuarInserindo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                .addComponent(painelBotoes, GroupLayout.PREFERRED_SIZE, 39, GroupLayout.PREFERRED_SIZE))
        );

        bindingGroup.bind();

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    //CHECKSTYLE:ON
    // Variables declaration - do not modify//GEN-BEGIN:variables
    GenericAction actionSalvar;
    SCheckBox checkContinuarInserindo;
    SCheckBox chkCompanhia;
    SCheckBox chkTerminal;
    SComboBox comboMercadorias;
    SComboBox comboTipoMaterial;
    SLabel labelCNPJ;
    SLabel labelCNPJ1;
    SLabel labelCNPJ2;
    SLabel labelCNPJ3;
    SLabel labelCondutor;
    SLabel labelDocOuNotaFiscal;
    SLabel labelDocOuNotaFiscal1;
    SLabel labelEmpresa;
    SLabel labelLocaisAcesso;
    SLabel labelPesoBruto;
    SLabel labelTipoAcesso;
    SLabel labelTipoMaterial;
    SLabel labelVolume;
    SPanel painelBotoes;
    PessoaProtecaoLookup pessoaProtecaoLookup;
    EmpresaProtecaoLookup prestadorServicoLookup;
    JScrollPane scrollTripulante;
    JScrollPane scrollTripulante1;
    STable tabelaCadastroFornecedor;
    STable tabelaCadastroFornecedor1;
    STextField txtTerminal;
    private BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
