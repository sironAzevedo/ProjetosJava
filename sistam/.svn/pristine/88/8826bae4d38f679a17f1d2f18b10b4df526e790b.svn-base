package br.com.petrobras.sistam.desktop.components;

import br.com.petrobras.fcorp.i18n.I18nManager;
import br.com.petrobras.fcorp.swing.base.SDialog;
import br.com.petrobras.sistam.common.enums.TipoExcecao;
import br.com.petrobras.sistam.desktop.Icones;
import br.com.petrobras.snarf.common.exception.Pendency;
import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.Icon;
import javax.swing.WindowConstants;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

public class PendenciasDialog extends SDialog {

    public PendenciasDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent);
    }
    
    public void criarArvore(Map<TipoExcecao, List<Pendency>> map){
        DefaultMutableTreeNode root = new DefaultMutableTreeNode("ROOT");
        DefaultTreeModel model = new DefaultTreeModel(root);
        
        for (Entry entry : map.entrySet()){
            DefaultMutableTreeNode nodePai = null;
            
            if (entry.getKey() != null) {
                nodePai = new STreeNode(entry.getKey()) {
                    @Override
                    public Icon getExpandedIcon() {
                        return Icones.iconeTipoExcecao;
                    }

                    @Override
                    public Icon getCollapsedIcon() {
                        return Icones.iconeTipoExcecao;
                    }
                };
                root.add(nodePai);
            }
            
            for (Pendency pendency : (List<Pendency>)entry.getValue()){
                DefaultMutableTreeNode nodeFilho = new DefaultMutableTreeNode(I18nManager.getString(pendency.getMessage()));
                if (nodePai != null){
                    nodePai.add(nodeFilho);
                }else{
                    root.add(nodeFilho);
                }
            }
        }
        
        treeListingPanel1.getTreePane().setModel(model);
        treeListingPanel1.expandAll();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings({"unchecked", "PMD"}) @SuppressFBWarnings
    //CHECKSTYLE:OFF
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        treeListingPanel1 = new TreeListingPanel();

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("InconsistÃªncias de dados");

        treeListingPanel1.setName("treeListingPanel1"); // NOI18N

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addComponent(treeListingPanel1, GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(treeListingPanel1, GroupLayout.PREFERRED_SIZE, 318, GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //CHECKSTYLE:ON

    // Variables declaration - do not modify//GEN-BEGIN:variables
    TreeListingPanel treeListingPanel1;
    // End of variables declaration//GEN-END:variables

}
