package br.com.petrobras.sistam.desktop.components.lookups.servicoprotecao;

import br.com.petrobras.fcorp.swing.base.SDialog;
import br.com.petrobras.fcorp.swing.base.action.GenericAction;
import br.com.petrobras.fcorp.swing.components.SButton;
import br.com.petrobras.fcorp.swing.components.SComboBox;
import br.com.petrobras.fcorp.swing.components.SLabel;
import br.com.petrobras.fcorp.swing.components.SPanel;
import br.com.petrobras.fcorp.swing.components.STable;
import br.com.petrobras.fcorp.swing.components.STextField;
import br.com.petrobras.sistam.common.entity.Pessoa;
import br.com.petrobras.sistam.common.enums.TipoAtendimentoServico;
import br.com.petrobras.sistam.desktop.SistamApp;
import br.com.petrobras.sistam.desktop.servicoprotecao.DetalhesPessoaProtecaoDialog;
import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.GroupLayout;
import javax.swing.InputMap;
import javax.swing.JScrollPane;
import javax.swing.KeyStroke;
import javax.swing.LayoutStyle;
import javax.swing.WindowConstants;
import org.jdesktop.beansbinding.AutoBinding;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.Binding;
import org.jdesktop.beansbinding.BindingGroup;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.JTableBinding;
import org.jdesktop.swingbinding.SwingBindings;

/**
 * @author adzk
 */
public class PessoaProtecaoInputDialog extends SDialog {

    private PessoaProtecaoInputPresentationModel model;

    /**
     * Constrói um dialog modal centralizado no frame pai.
     */
    public PessoaProtecaoInputDialog(java.awt.Frame parent, TipoAtendimentoServico tipoAtendimentoServico) {
        super(parent, true);
        this.model = new PessoaProtecaoInputPresentationModel(tipoAtendimentoServico);
        initComponents();
        InputMap im = tabela.getInputMap(STable.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        KeyStroke enter = KeyStroke.getKeyStroke("ENTER");
        im.put(enter, im.get(KeyStroke.getKeyStroke(KeyEvent.VK_GREATER, 0)));
        tabela.getActionMap().put(im.get(enter), actionConfirmar);
        setLocationRelativeTo(parent);

        tabela.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() > 1 && null != model.getPessoaSelecionada()) {
                    confirmar();
                }
            }
        });
    }

    public PessoaProtecaoInputPresentationModel getModel() {
        return model;
    }

    public void confirmar() {
        model.setConfirmado(true);
        dispose();
    }
    
    public void adicionar() {
        Pessoa pessoa = new Pessoa();
        if (model.getEmpresa() != null) {
            pessoa.setEmpresa(model.getEmpresa());
        }
        DetalhesPessoaProtecaoDialog dialog = new DetalhesPessoaProtecaoDialog(SistamApp.getSistamApp().getMainFrame(), pessoa);
        dialog.setVisible(true);
        if (dialog.getModel().isSalvo()) {
            pessoa = dialog.getModel().getPessoa();
            model.setNome(pessoa.getNome());
            model.setEmpresa(pessoa.getEmpresa());
        }
    }

    @Override
    public void setVisible(boolean visible) {
        if (visible) {
            if (model.getPessoas() != null) {
                if (!model.getPessoas().isEmpty()) {
                    tabela.requestFocus();
                    tabela.getSelectionModel().setSelectionInterval(0, 0);
                } else {
                    campoNome.requestFocus();
                    getRootPane().setDefaultButton(btConsultar);
                }
            } else {
                campoNome.requestFocus();
                getRootPane().setDefaultButton(btConsultar);
            }
        }
        super.setVisible(visible);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings({"unchecked", "PMD"})
    @SuppressFBWarnings
    //CHECKSTYLE:OFF
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new BindingGroup();

        GenericAction actionConsultar = new GenericAction();
        actionConfirmar = new GenericAction();
        GenericAction actionCancelar = new GenericAction();
        GenericAction actionAdicionar = new GenericAction();
        SPanel sPanel1 = new SPanel();
        SLabel sLabel1 = new SLabel();
        campoNome = new STextField();
        btConsultar = new SButton();
        JScrollPane jScrollPane1 = new JScrollPane();
        tabela = new STable();
        SLabel sLabel2 = new SLabel();
        SComboBox sComboBox1 = new SComboBox();
        SButton btCancelar = new SButton();
        SButton btOk = new SButton();
        btConsultar1 = new SButton();

        actionConsultar.setMethodName("consultar");
        actionConsultar.setTarget(model);
        actionConsultar.setText("Consultar");

        actionConfirmar.setMethodName("confirmar");
        actionConfirmar.setTarget(this);
        actionConfirmar.setText("OK");

        actionCancelar.setMethodName("dispose");
        actionCancelar.setTarget(this);
        actionCancelar.setText("Cancelar");

        actionAdicionar.setMethodName("adicionar");
        actionAdicionar.setTarget(this);
        actionAdicionar.setText("Nova Pessoa");

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Buscar Pessoas do Serviço de Proteção");

        sPanel1.setName("sPanel1"); // NOI18N

        sLabel1.setText("Nome:");
        sLabel1.setName("sLabel1"); // NOI18N

        campoNome.setName("campoNome"); // NOI18N

        Binding binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.nome}"), campoNome, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        btConsultar.setAction(actionAdicionar);
        btConsultar.setName("btConsultar"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        tabela.setToolTipText("");
        tabela.setName("tabela"); // NOI18N

        ELProperty eLProperty = ELProperty.create("${model.pessoas}");
        JTableBinding jTableBinding = SwingBindings.createJTableBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, tabela);
        JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${nome}"));
        columnBinding.setColumnName("Nome");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${tipoDocumentoIdentificacao}"));
        columnBinding.setColumnName("Tipo Documento");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${documento}"));
        columnBinding.setColumnName("Nº Documento");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${cpfComMascara}"));
        columnBinding.setColumnName("CPF");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${nomeEmpresa}"));
        columnBinding.setColumnName("Empresa");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.pessoaSelecionada}"), tabela, BeanProperty.create("selectedElement"));
        bindingGroup.addBinding(binding);

        jScrollPane1.setViewportView(tabela);
        tabela.getColumnModel().getColumn(1).setMinWidth(120);
        tabela.getColumnModel().getColumn(1).setMaxWidth(120);
        tabela.getColumnModel().getColumn(2).setMinWidth(120);
        tabela.getColumnModel().getColumn(2).setMaxWidth(120);
        tabela.getColumnModel().getColumn(3).setMinWidth(120);
        tabela.getColumnModel().getColumn(3).setMaxWidth(120);

        sLabel2.setText("Empresa:");
        sLabel2.setName("sLabel2"); // NOI18N

        sComboBox1.setName("sComboBox1"); // NOI18N

        eLProperty = ELProperty.create("${model.empresas}");
        JComboBoxBinding jComboBoxBinding = SwingBindings.createJComboBoxBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, sComboBox1);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.empresa}"), sComboBox1, BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        btCancelar.setAction(actionCancelar);
        btCancelar.setName("btCancelar"); // NOI18N

        btOk.setAction(actionConfirmar);
        btOk.setName("btOk"); // NOI18N

        btConsultar1.setAction(actionConsultar);
        btConsultar1.setName("btConsultar1"); // NOI18N

        GroupLayout sPanel1Layout = new GroupLayout(sPanel1);
        sPanel1.setLayout(sPanel1Layout);
        sPanel1Layout.setHorizontalGroup(
            sPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(sPanel1Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(sLabel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoNome, GroupLayout.PREFERRED_SIZE, 246, GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(sLabel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sComboBox1, GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btConsultar1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btConsultar, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane1, GroupLayout.Alignment.TRAILING)
            .addGroup(GroupLayout.Alignment.TRAILING, sPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btOk, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btCancelar, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        );
        sPanel1Layout.setVerticalGroup(
            sPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(sPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(sPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(sLabel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoNome, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(btConsultar, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sComboBox1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(btConsultar1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(sPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(btCancelar, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(btOk, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
        );

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //CHECKSTYLE:ON
    // Variables declaration - do not modify//GEN-BEGIN:variables
    GenericAction actionConfirmar;
    SButton btConsultar;
    SButton btConsultar1;
    STextField campoNome;
    STable tabela;
    private BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
