package br.com.petrobras.sistam.desktop.agenciamento.formularios.capitania;

import br.com.petrobras.fcorp.swing.base.SDialog;
import br.com.petrobras.fcorp.swing.base.action.GenericAction;
import br.com.petrobras.fcorp.swing.components.SButton;
import br.com.petrobras.fcorp.swing.components.SDateChooser;
import br.com.petrobras.fcorp.swing.components.SLabel;
import br.com.petrobras.fcorp.swing.components.SPanel;
import br.com.petrobras.fcorp.swing.components.SRadioPanel;
import br.com.petrobras.fcorp.swing.components.STextArea;
import br.com.petrobras.fcorp.swing.components.STextField;
import br.com.petrobras.fcorp.swing.components.util.GenericDocument;
import br.com.petrobras.sistam.common.entity.Agenciamento;
import br.com.petrobras.sistam.desktop.util.RelatorioUtil;
import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
import java.awt.BorderLayout;
import java.awt.Color;
import java.util.ResourceBundle;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.ImageIcon;
import javax.swing.JScrollPane;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.WindowConstants;
import javax.swing.border.BevelBorder;
import javax.swing.border.LineBorder;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.Binding;
import org.jdesktop.beansbinding.BindingGroup;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.ELProperty;

public class PedidoDespachoDialog extends SDialog {
    private PedidoDespachoModel model;
    
    public PedidoDespachoDialog(java.awt.Frame parent, Agenciamento agenciamento) {
        super(parent, true);
        model = new PedidoDespachoModel(agenciamento);
        initComponents();        
        setLocationRelativeTo(parent);        
    }

    public PedidoDespachoModel getModel() {
        return model;
    }
    
    public void imprimir(){
        model.validar();
        model.carregarVO();
        model.registrarEmissao();
        RelatorioUtil.abrirRelatorioPedidoDespachoCapitania(model.getVoFormulario());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings({"unchecked", "PMD"}) @SuppressFBWarnings
    //CHECKSTYLE:OFF
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new BindingGroup();

        GenericAction actionImprimir = new GenericAction();
        SPanel pnlCabecalho = new SPanel();
        SLabel sLabel8 = new SLabel();
        SLabel sLabel10 = new SLabel();
        SLabel labelNome = new SLabel();
        SLabel labelNomeConteudo = new SLabel();
        SPanel pnlEscalas = new SPanel();
        SPanel pnlManobras = new SPanel();
        SLabel sLabel1 = new SLabel();
        STextField sTextField1 = new STextField();
        SRadioPanel sRadioPanel1 = new SRadioPanel();
        SLabel sLabel2 = new SLabel();
        SRadioPanel sRadioPanel2 = new SRadioPanel();
        JScrollPane jScrollPane1 = new JScrollPane();
        STextArea sTextArea1 = new STextArea();
        SLabel sLabel3 = new SLabel();
        SLabel sLabel4 = new SLabel();
        SLabel sLabel5 = new SLabel();
        SRadioPanel sRadioPanel3 = new SRadioPanel();
        SRadioPanel sRadioPanel4 = new SRadioPanel();
        SLabel sLabel6 = new SLabel();
        SLabel sLabel13 = new SLabel();
        SDateChooser sDateChooser3 = new SDateChooser();
        SPanel pnlBotoes = new SPanel();
        SButton sButton1 = new SButton();

        actionImprimir.setIcon(new ImageIcon(getClass().getResource("/icons/print.png"))); // NOI18N
        actionImprimir.setMethodName("imprimir");
        actionImprimir.setTarget(this);
        actionImprimir.setText("Gerar Formulário");

        Binding binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.possuiPermissao}"), actionImprimir, BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pedido de Despacho");

        pnlCabecalho.setBorder(new LineBorder(new Color(0, 0, 0), 1, true));
        pnlCabecalho.setName("pnlCabecalho"); // NOI18N

        ResourceBundle bundle = ResourceBundle.getBundle("sistam-labels"); // NOI18N
        sLabel8.setText(bundle.getString("lblViagem")); // NOI18N
        sLabel8.setName("sLabel8"); // NOI18N

        sLabel10.setName("sLabel10"); // NOI18N
        sLabel10.setRequiredField(true);

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.agenciamento.vgm}"), sLabel10, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        labelNome.setText("Nome:");
        labelNome.setName("labelNome"); // NOI18N

        labelNomeConteudo.setName("labelNomeConteudo"); // NOI18N
        labelNomeConteudo.setRequiredField(true);

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.agenciamento.embarcacao.nomeCompleto}"), labelNomeConteudo, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        GroupLayout pnlCabecalhoLayout = new GroupLayout(pnlCabecalho);
        pnlCabecalho.setLayout(pnlCabecalhoLayout);
        pnlCabecalhoLayout.setHorizontalGroup(
            pnlCabecalhoLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlCabecalhoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelNome, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(labelNomeConteudo, GroupLayout.PREFERRED_SIZE, 282, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(sLabel8, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(sLabel10, GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlCabecalhoLayout.setVerticalGroup(
            pnlCabecalhoLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlCabecalhoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCabecalhoLayout.createParallelGroup(Alignment.LEADING)
                    .addGroup(pnlCabecalhoLayout.createParallelGroup(Alignment.TRAILING)
                        .addComponent(labelNomeConteudo, GroupLayout.PREFERRED_SIZE, 16, GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelNome, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                    .addComponent(sLabel10, GroupLayout.PREFERRED_SIZE, 14, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel8, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(pnlCabecalho, BorderLayout.PAGE_START);

        pnlEscalas.setBorder(BorderFactory.createEtchedBorder());
        pnlEscalas.setName("pnlEscalas"); // NOI18N

        pnlManobras.setBorder(BorderFactory.createEtchedBorder());
        pnlManobras.setName("pnlManobras"); // NOI18N

        sLabel1.setText("Ao  (To):");
        sLabel1.setName("sLabel1"); // NOI18N

        sTextField1.setDocument(new GenericDocument(100));
        sTextField1.setName("sTextField1"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.voFormulario.aoTo}"), sTextField1, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        sRadioPanel1.setName("sRadioPanel1"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.despachoRevalidacao}"), sRadioPanel1, BeanProperty.create("elements"));
        bindingGroup.addBinding(binding);
        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.despachoRevalidacaoSelecionado}"), sRadioPanel1, BeanProperty.create("selectedElement"));
        bindingGroup.addBinding(binding);

        sLabel2.setText("Embarcação possui Atestado de Inscrição Temporária (AIT)?");
        sLabel2.setName("sLabel2"); // NOI18N

        sRadioPanel2.setName("sRadioPanel2"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.listaSimNao}"), sRadioPanel2, BeanProperty.create("elements"));
        bindingGroup.addBinding(binding);
        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.ait}"), sRadioPanel2, BeanProperty.create("selectedElement"));
        bindingGroup.addBinding(binding);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        sTextArea1.setColumns(20);
        sTextArea1.setDocument(new GenericDocument(100) );
        sTextArea1.setLineWrap(true);
        sTextArea1.setRows(2);
        sTextArea1.setWrapStyleWord(true);
        sTextArea1.setName("sTextArea1"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.voFormulario.observacao}"), sTextArea1, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jScrollPane1.setViewportView(sTextArea1);

        sLabel3.setText("Observação:");
        sLabel3.setName("sLabel3"); // NOI18N

        sLabel4.setText("Transporta carga no convés?");
        sLabel4.setName("sLabel4"); // NOI18N

        sLabel5.setText("Transporta carga perigosa?");
        sLabel5.setName("sLabel5"); // NOI18N

        sRadioPanel3.setName("sRadioPanel3"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.listaSimNao}"), sRadioPanel3, BeanProperty.create("elements"));
        bindingGroup.addBinding(binding);
        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.cargaConves}"), sRadioPanel3, BeanProperty.create("selectedElement"));
        bindingGroup.addBinding(binding);

        sRadioPanel4.setName("sRadioPanel4"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.listaSimNao}"), sRadioPanel4, BeanProperty.create("elements"));
        bindingGroup.addBinding(binding);
        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.cargaPerigosa}"), sRadioPanel4, BeanProperty.create("selectedElement"));
        bindingGroup.addBinding(binding);

        sLabel6.setText("Emissão:");
        sLabel6.setName("sLabel6"); // NOI18N

        sLabel13.setText("Data do Documento:");
        sLabel13.setName("sLabel13"); // NOI18N

        sDateChooser3.setName("sDateChooser3"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.voFormulario.dataDocumento}"), sDateChooser3, BeanProperty.create("date"));
        bindingGroup.addBinding(binding);

        GroupLayout pnlManobrasLayout = new GroupLayout(pnlManobras);
        pnlManobras.setLayout(pnlManobrasLayout);
        pnlManobrasLayout.setHorizontalGroup(
            pnlManobrasLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlManobrasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlManobrasLayout.createParallelGroup(Alignment.LEADING)
                    .addComponent(sLabel3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel13, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.RELATED)
                .addGroup(pnlManobrasLayout.createParallelGroup(Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(pnlManobrasLayout.createSequentialGroup()
                        .addComponent(sDateChooser3, GroupLayout.PREFERRED_SIZE, 101, GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(pnlManobrasLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(sLabel6, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.UNRELATED)
                .addComponent(sRadioPanel1, GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                .addContainerGap(410, Short.MAX_VALUE))
            .addGroup(pnlManobrasLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(sLabel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(sTextField1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap(386, Short.MAX_VALUE))
            .addGroup(pnlManobrasLayout.createSequentialGroup()
                .addGroup(pnlManobrasLayout.createParallelGroup(Alignment.LEADING)
                    .addGroup(pnlManobrasLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(sLabel4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addComponent(sRadioPanel3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(sLabel5, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addComponent(sRadioPanel4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlManobrasLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(sLabel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addComponent(sRadioPanel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlManobrasLayout.setVerticalGroup(
            pnlManobrasLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlManobrasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlManobrasLayout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(sLabel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sTextField1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlManobrasLayout.createParallelGroup(Alignment.CENTER)
                    .addComponent(sLabel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sRadioPanel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.RELATED)
                .addGroup(pnlManobrasLayout.createParallelGroup(Alignment.CENTER)
                    .addComponent(sLabel4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sRadioPanel3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel5, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sRadioPanel4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.RELATED)
                .addGroup(pnlManobrasLayout.createParallelGroup(Alignment.CENTER)
                    .addComponent(sLabel6, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sRadioPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.RELATED)
                .addGroup(pnlManobrasLayout.createParallelGroup(Alignment.LEADING)
                    .addComponent(sLabel3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 74, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlManobrasLayout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(sDateChooser3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel13, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pnlBotoes.setBorder(BorderFactory.createBevelBorder(BevelBorder.RAISED));
        pnlBotoes.setName("pnlBotoes"); // NOI18N

        sButton1.setAction(actionImprimir);
        sButton1.setName("sButton1"); // NOI18N
        pnlBotoes.add(sButton1);

        GroupLayout pnlEscalasLayout = new GroupLayout(pnlEscalas);
        pnlEscalas.setLayout(pnlEscalasLayout);
        pnlEscalasLayout.setHorizontalGroup(
            pnlEscalasLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(Alignment.TRAILING, pnlEscalasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlManobras, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(pnlBotoes, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 599, Short.MAX_VALUE)
        );
        pnlEscalasLayout.setVerticalGroup(
            pnlEscalasLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlEscalasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlManobras, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(pnlBotoes, GroupLayout.PREFERRED_SIZE, 39, GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(pnlEscalas, BorderLayout.CENTER);

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //CHECKSTYLE:ON

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}
