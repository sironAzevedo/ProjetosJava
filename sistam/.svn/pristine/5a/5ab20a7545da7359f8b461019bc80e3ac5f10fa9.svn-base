package br.com.petrobras.sistam.desktop.agenciamento.protecao;

import br.com.petrobras.fcorp.swing.base.SDialog;
import br.com.petrobras.fcorp.swing.base.action.GenericAction;
import br.com.petrobras.fcorp.swing.components.SButton;
import br.com.petrobras.fcorp.swing.components.SCheckBox;
import br.com.petrobras.fcorp.swing.components.SLabel;
import br.com.petrobras.fcorp.swing.components.SNumericTextField;
import br.com.petrobras.fcorp.swing.components.SPanel;
import br.com.petrobras.fcorp.swing.components.STextArea;
import br.com.petrobras.fcorp.swing.components.STextField;
import br.com.petrobras.fcorp.swing.components.util.GenericDocument;
import br.com.petrobras.sistam.common.entity.EmpresaProtecao;
import br.com.petrobras.sistam.common.entity.PessoaAcesso;
import br.com.petrobras.sistam.desktop.components.lookups.servicoprotecao.PessoaProtecaoLookup;
import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.ImageIcon;
import javax.swing.JScrollPane;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.WindowConstants;
import javax.swing.border.BevelBorder;
import javax.swing.border.SoftBevelBorder;
import org.jdesktop.beansbinding.AutoBinding;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.Binding;
import org.jdesktop.beansbinding.BindingGroup;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.ELProperty;

public class RegistroPessoaDialog extends SDialog {

    public static final String PESSOA_INSERIDO = "PESSOA_INSERIDO";
    public static final String PESSOA_ALTERADO = "PESSOA_ALTERADO";
    private RegistroPessoaModel model;

    public RegistroPessoaDialog(java.awt.Frame parent, PessoaAcesso pessoaAcesso, boolean edicao) {
        super(parent, true);
        model = new RegistroPessoaModel(pessoaAcesso, edicao);
        initComponents();
        pessoaProtecaoLookup.setTipoAtendimentoServico(pessoaAcesso.getServicoProtecao().getTipoAtendimentoServico());
        EmpresaProtecao empresa = model.getService().buscarEmpresaProtecaoPorCnpj(pessoaAcesso.getServicoProtecao().getServicoAcessoPessoa().getCnpjPrestadorServico());
        pessoaProtecaoLookup.setEmpresa(empresa);
        setLocationRelativeTo(parent);
    }

    public RegistroPessoaModel getModel() {
        return model;
    }

    public void salvar() {
        String property = model.isEdicao() ? PESSOA_ALTERADO : PESSOA_INSERIDO;

        model.validar();
        firePropertyChange(property, null, null);

        //Se não for pra continuar inserindo, fecha a tela.
        if (!model.isContinuarInserindo()) {
            dispose();
        } else {
            //caso continue inserindo, prepara um novo serviço
            model.prepararNovoPessoa();
            model.setPessoa(null);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings({"unchecked", "PMD"})
    @SuppressFBWarnings
    //CHECKSTYLE:OFF
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new BindingGroup();

        actionSalvar = new GenericAction();
        SPanel painelDados = new SPanel();
        SLabel labelNome = new SLabel();
        SLabel labelTipo = new SLabel();
        SLabel sLabel3 = new SLabel();
        STextField campoTipo = new STextField();
        SLabel labelNome1 = new SLabel();
        STextField campoNome1 = new STextField();
        SLabel labelNome2 = new SLabel();
        SLabel labelNome3 = new SLabel();
        SLabel labelNome4 = new SLabel();
        SLabel labelDescricaoBagagem = new SLabel();
        STextField campoNome2 = new STextField();
        scrollObservacao = new JScrollPane();
        txtDescricaoBagagem = new STextArea();
        SNumericTextField txtVolume = new SNumericTextField();
        pessoaProtecaoLookup = new PessoaProtecaoLookup();
        STextField campoNome3 = new STextField();
        STextField campoNome4 = new STextField();
        SLabel labelNome5 = new SLabel();
        STextField campoNome5 = new STextField();
        SLabel sLabel6 = new SLabel();
        STextField sTextField4 = new STextField();
        painelBotoes = new SPanel();
        SButton sButton4 = new SButton();
        checkContinuarInserindo = new SCheckBox();

        actionSalvar.setIcon(new ImageIcon(getClass().getResource("/icons/disk.png"))); // NOI18N
        actionSalvar.setMethodName("salvar");
        actionSalvar.setTarget(this);
        actionSalvar.setText("Salvar");
        actionSalvar.setToolTipText("Salva a pessoa");

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registro de Pessoa");

        painelDados.setBorder(BorderFactory.createTitledBorder(""));
        painelDados.setName("painelDados"); // NOI18N

        labelNome.setText("Nome:");
        labelNome.setName("labelNome"); // NOI18N

        labelTipo.setText("Nº Documento");
        labelTipo.setName("labelTipo"); // NOI18N

        sLabel3.setText("CPF:");
        sLabel3.setName("sLabel3"); // NOI18N

        campoTipo.setEditable(false);
        campoTipo.setName("campoTipo"); // NOI18N

        Binding binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.pessoaAcesso.documento}"), campoTipo, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        labelNome1.setText("Responsável:");
        labelNome1.setName("labelNome1"); // NOI18N

        campoNome1.setDocument(new GenericDocument(50, 
            GenericDocument.OPTION_APPLY_UPPERCASE ));
    campoNome1.setName("campoNome1"); // NOI18N

    binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.pessoaAcesso.responsavel}"), campoNome1, BeanProperty.create("text"));
    bindingGroup.addBinding(binding);

    labelNome2.setText("Nascimento:");
    labelNome2.setName("labelNome2"); // NOI18N

    labelNome3.setText("Nacionalidade:");
    labelNome3.setName("labelNome3"); // NOI18N

    labelNome4.setText("Volumes:");
    labelNome4.setName("labelNome4"); // NOI18N

    labelDescricaoBagagem.setText("Descrição da bagagem:");
    labelDescricaoBagagem.setName("labelDescricaoBagagem"); // NOI18N

    campoNome2.setEditable(false);
    campoNome2.setName("campoNome2"); // NOI18N

    binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.pessoaAcesso.nacionalidade}"), campoNome2, BeanProperty.create("text"));
    bindingGroup.addBinding(binding);

    scrollObservacao.setName("scrollObservacao"); // NOI18N

    txtDescricaoBagagem.setColumns(20);
    txtDescricaoBagagem.setDocument(new GenericDocument(500));
    txtDescricaoBagagem.setLineWrap(true);
    txtDescricaoBagagem.setRows(3);
    txtDescricaoBagagem.setWrapStyleWord(true);
    txtDescricaoBagagem.setName("txtDescricaoBagagem"); // NOI18N

    binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.pessoaAcesso.bagagem}"), txtDescricaoBagagem, BeanProperty.create("text"));
    bindingGroup.addBinding(binding);

    scrollObservacao.setViewportView(txtDescricaoBagagem);

    txtVolume.setDecimalPlaces(new Short((short)0));
    txtVolume.setIntegerPlaces(new Short((short)2));
    txtVolume.setText("sNumericTextField1");
    txtVolume.setUseGroupDigit(false);
    txtVolume.setName("txtVolume"); // NOI18N

    binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.pessoaAcesso.volume}"), txtVolume, BeanProperty.create("integerValue"));
    bindingGroup.addBinding(binding);

    pessoaProtecaoLookup.setText("pessoaProtecaoLookup");
    pessoaProtecaoLookup.setName("pessoaProtecaoLookup"); // NOI18N

    binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.pessoa}"), pessoaProtecaoLookup, BeanProperty.create("value"));
    bindingGroup.addBinding(binding);

    campoNome3.setEditable(false);
    campoNome3.setName("campoNome3"); // NOI18N

    binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.pessoaAcesso.dataNascimentoFormatada}"), campoNome3, BeanProperty.create("text"));
    bindingGroup.addBinding(binding);

    campoNome4.setEditable(false);
    campoNome4.setName("campoNome4"); // NOI18N

    binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.pessoaAcesso.cpfComMascara}"), campoNome4, BeanProperty.create("text"));
    bindingGroup.addBinding(binding);

    labelNome5.setText("Empresa:");
    labelNome5.setName("labelNome5"); // NOI18N

    campoNome5.setEditable(false);
    campoNome5.setName("campoNome5"); // NOI18N

    binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.pessoaAcesso.nomeEmpresa}"), campoNome5, BeanProperty.create("text"));
    bindingGroup.addBinding(binding);

    sLabel6.setText("Tipo de Documento:");
    sLabel6.setName("sLabel6"); // NOI18N

    sTextField4.setEditable(false);
    sTextField4.setDocument(new GenericDocument(40));
    sTextField4.setName("sTextField4"); // NOI18N

    binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.pessoaAcesso.tipoDocumentoIdentificacao}"), sTextField4, BeanProperty.create("text"));
    bindingGroup.addBinding(binding);

        GroupLayout painelDadosLayout = new GroupLayout(painelDados);
    painelDados.setLayout(painelDadosLayout);
    painelDadosLayout.setHorizontalGroup(
        painelDadosLayout.createParallelGroup(Alignment.LEADING)
        .addGroup(painelDadosLayout.createSequentialGroup()
            .addGap(9, 9, 9)
            .addGroup(painelDadosLayout.createParallelGroup(Alignment.LEADING)
                .addComponent(labelNome, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(sLabel6, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(sLabel3, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(labelNome2, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(labelNome3, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(labelNome5, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(labelNome1, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(labelNome4, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(labelDescricaoBagagem, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(ComponentPlacement.RELATED)
            .addGroup(painelDadosLayout.createParallelGroup(Alignment.LEADING)
                .addComponent(campoNome2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(campoNome1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pessoaProtecaoLookup, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(campoNome5, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(campoNome3, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(painelDadosLayout.createSequentialGroup()
                    .addComponent(txtVolume, GroupLayout.PREFERRED_SIZE, 45, GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE))
                .addGroup(painelDadosLayout.createSequentialGroup()
                    .addGroup(painelDadosLayout.createParallelGroup(Alignment.TRAILING, false)
                        .addComponent(campoNome4, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(sTextField4, Alignment.LEADING, GroupLayout.PREFERRED_SIZE, 191, GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(ComponentPlacement.RELATED)
                    .addComponent(labelTipo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(ComponentPlacement.RELATED)
                    .addComponent(campoTipo, GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)))
            .addContainerGap())
        .addGroup(painelDadosLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(scrollObservacao)
            .addGap(10, 10, 10))
    );
    painelDadosLayout.setVerticalGroup(
        painelDadosLayout.createParallelGroup(Alignment.LEADING)
        .addGroup(painelDadosLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(painelDadosLayout.createParallelGroup(Alignment.BASELINE)
                .addComponent(labelNome, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(pessoaProtecaoLookup, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(ComponentPlacement.RELATED)
            .addGroup(painelDadosLayout.createParallelGroup(Alignment.TRAILING)
                .addComponent(sLabel3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGroup(painelDadosLayout.createSequentialGroup()
                    .addGroup(painelDadosLayout.createParallelGroup(Alignment.LEADING)
                        .addGroup(painelDadosLayout.createParallelGroup(Alignment.BASELINE)
                            .addComponent(labelTipo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(campoTipo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addGroup(painelDadosLayout.createParallelGroup(Alignment.BASELINE)
                            .addComponent(sTextField4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(sLabel6, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                    .addPreferredGap(ComponentPlacement.RELATED)
                    .addComponent(campoNome4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
            .addPreferredGap(ComponentPlacement.RELATED)
            .addGroup(painelDadosLayout.createParallelGroup(Alignment.BASELINE)
                .addComponent(labelNome2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(campoNome3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(ComponentPlacement.RELATED)
            .addGroup(painelDadosLayout.createParallelGroup(Alignment.BASELINE)
                .addComponent(labelNome3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(campoNome2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(ComponentPlacement.RELATED)
            .addGroup(painelDadosLayout.createParallelGroup(Alignment.BASELINE)
                .addComponent(labelNome5, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(campoNome5, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(ComponentPlacement.RELATED)
            .addGroup(painelDadosLayout.createParallelGroup(Alignment.BASELINE)
                .addComponent(labelNome1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(campoNome1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(ComponentPlacement.RELATED)
            .addGroup(painelDadosLayout.createParallelGroup(Alignment.BASELINE)
                .addComponent(labelNome4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(txtVolume, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(ComponentPlacement.RELATED)
            .addComponent(labelDescricaoBagagem, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(ComponentPlacement.RELATED)
            .addComponent(scrollObservacao, GroupLayout.PREFERRED_SIZE, 117, GroupLayout.PREFERRED_SIZE)
            .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    painelBotoes.setBorder(new SoftBevelBorder(BevelBorder.RAISED));
    painelBotoes.setName("painelBotoes"); // NOI18N

    sButton4.setAction(actionSalvar);
    sButton4.setName("sButton4"); // NOI18N
    painelBotoes.add(sButton4);

    checkContinuarInserindo.setText("Após salvar, continuar inserindo.");
    checkContinuarInserindo.setName("checkContinuarInserindo"); // NOI18N
    checkContinuarInserindo.setOpaque(false);

    binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.continuarInserindo}"), checkContinuarInserindo, BeanProperty.create("selected"));
    bindingGroup.addBinding(binding);

        GroupLayout layout = new GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(Alignment.LEADING)
        .addComponent(painelBotoes, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(checkContinuarInserindo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE))
                .addComponent(painelDados, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addContainerGap())
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(painelDados, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
            .addComponent(checkContinuarInserindo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(ComponentPlacement.RELATED)
            .addComponent(painelBotoes, GroupLayout.PREFERRED_SIZE, 39, GroupLayout.PREFERRED_SIZE)
            .addGap(0, 0, 0))
    );

    bindingGroup.bind();

    pack();
    }// </editor-fold>//GEN-END:initComponents
    //CHECKSTYLE:ON
    // Variables declaration - do not modify//GEN-BEGIN:variables
    GenericAction actionSalvar;
    SCheckBox checkContinuarInserindo;
    SPanel painelBotoes;
    PessoaProtecaoLookup pessoaProtecaoLookup;
    JScrollPane scrollObservacao;
    STextArea txtDescricaoBagagem;
    private BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
