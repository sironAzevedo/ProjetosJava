package br.com.petrobras.sistam.desktop.agenciamento.formularios.capitania;

import br.com.petrobras.fcorp.swing.base.SDialog;
import br.com.petrobras.fcorp.swing.base.action.GenericAction;
import br.com.petrobras.fcorp.swing.components.SButton;
import br.com.petrobras.fcorp.swing.components.SCheckBox;
import br.com.petrobras.fcorp.swing.components.SComboBox;
import br.com.petrobras.fcorp.swing.components.SDateChooser;
import br.com.petrobras.fcorp.swing.components.SFormattedTextField;
import br.com.petrobras.fcorp.swing.components.SLabel;
import br.com.petrobras.fcorp.swing.components.SPanel;
import br.com.petrobras.fcorp.swing.components.SRadioPanel;
import br.com.petrobras.fcorp.swing.components.STextArea;
import br.com.petrobras.fcorp.swing.components.STextField;
import br.com.petrobras.fcorp.swing.components.util.GenericDocument;
import br.com.petrobras.sistam.common.entity.Agenciamento;
import br.com.petrobras.sistam.desktop.util.DesktopUtil;
import br.com.petrobras.sistam.desktop.util.RelatorioUtil;
import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ResourceBundle;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JScrollPane;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.WindowConstants;
import javax.swing.border.BevelBorder;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.NumberFormatter;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.Binding;
import org.jdesktop.beansbinding.BindingGroup;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;

public class PedidoDespachoPorPeriodoDialog extends SDialog {
    private PedidoDespachoPorPeriodoModel model;
    
    public PedidoDespachoPorPeriodoDialog(java.awt.Frame parent, Agenciamento agenciamento) {
        super(parent, true);
        model = new PedidoDespachoPorPeriodoModel(agenciamento);
        initComponents();        
        setLocationRelativeTo(parent);        
        DesktopUtil.configurarComponenteCNPJ(campoCnpj, actionImprimir); 
    }

    public PedidoDespachoPorPeriodoModel getModel() {
        return model;
    }
    
    public void imprimir(){
        model.carregarVO();
        model.registrarEmissao();
        RelatorioUtil.abrirRelatorioPedidoDespachoPorPeriodo(model.getVoFormulario());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings({"unchecked", "PMD"}) @SuppressFBWarnings
    //CHECKSTYLE:OFF
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new BindingGroup();

        actionImprimir = new GenericAction();
        SPanel pnlEscalas = new SPanel();
        SPanel pnlManobras = new SPanel();
        SLabel sLabel13 = new SLabel();
        SDateChooser sDateChooser3 = new SDateChooser();
        SPanel sPanel1 = new SPanel();
        SRadioPanel sRadioPanel2 = new SRadioPanel();
        SPanel sPanel3 = new SPanel();
        SDateChooser sDateChooser4 = new SDateChooser();
        SLabel sLabel4 = new SLabel();
        SLabel sLabel5 = new SLabel();
        STextField sTextField2 = new STextField();
        SLabel sLabel1 = new SLabel();
        SLabel sLabel2 = new SLabel();
        campoCnpj = new SFormattedTextField();
        JLabel jLabel1 = new JLabel();
        SRadioPanel sRadioPanel3 = new SRadioPanel();
        SPanel sPanel2 = new SPanel();
        SLabel sLabel3 = new SLabel();
        JScrollPane jScrollPane1 = new JScrollPane();
        STextArea sTextArea1 = new STextArea();
        SCheckBox checkBoxPlataforma1 = new SCheckBox();
        SCheckBox checkBoxPlataforma2 = new SCheckBox();
        SCheckBox checkBoxPlataforma3 = new SCheckBox();
        SCheckBox checkBoxPlataforma4 = new SCheckBox();
        SCheckBox checkBoxPlataforma5 = new SCheckBox();
        SCheckBox checkBoxPlataforma6 = new SCheckBox();
        SCheckBox checkBoxPlataforma7 = new SCheckBox();
        SCheckBox checkBoxPlataforma8 = new SCheckBox();
        SCheckBox checkBoxPlataforma9 = new SCheckBox();
        SCheckBox checkBoxPlataforma10 = new SCheckBox();
        SPanel sPanel4 = new SPanel();
        SComboBox sComboBox1 = new SComboBox();
        SLabel sLabel6 = new SLabel();
        SPanel pnlBotoes = new SPanel();
        SButton sButton1 = new SButton();

        actionImprimir.setIcon(new ImageIcon(getClass().getResource("/icons/print.png"))); // NOI18N
        actionImprimir.setMethodName("imprimir");
        actionImprimir.setTarget(this);
        actionImprimir.setText("Gerar Formulário");

        Binding binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.possuiPermissao}"), actionImprimir, BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pedido de Despacho por Periodo");

        pnlEscalas.setBorder(BorderFactory.createEtchedBorder());
        pnlEscalas.setName("pnlEscalas"); // NOI18N

        pnlManobras.setBorder(BorderFactory.createEtchedBorder());
        pnlManobras.setName("pnlManobras"); // NOI18N

        sLabel13.setText("Data do Documento:");
        sLabel13.setName("sLabel13"); // NOI18N

        sDateChooser3.setName("sDateChooser3"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.dataDocumento}"), sDateChooser3, BeanProperty.create("date"));
        bindingGroup.addBinding(binding);

        sPanel1.setBorder(BorderFactory.createTitledBorder("Dados da Embarcação"));
        sPanel1.setName("sPanel1"); // NOI18N

        sRadioPanel2.setName("sRadioPanel2"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.listaSimNao}"), sRadioPanel2, BeanProperty.create("elements"));
        bindingGroup.addBinding(binding);
        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.voFormulario.atestadoInscricaoTemporariaEmbarcacao}"), sRadioPanel2, BeanProperty.create("selectedElement"));
        bindingGroup.addBinding(binding);

        GroupLayout sRadioPanel2Layout = new GroupLayout(sRadioPanel2);
        sRadioPanel2.setLayout(sRadioPanel2Layout);
        sRadioPanel2Layout.setHorizontalGroup(sRadioPanel2Layout.createParallelGroup(Alignment.LEADING)
            .addGap(0, 101, Short.MAX_VALUE)
        );
        sRadioPanel2Layout.setVerticalGroup(sRadioPanel2Layout.createParallelGroup(Alignment.LEADING)
            .addGap(0, 25, Short.MAX_VALUE)
        );

        sPanel3.setBorder(BorderFactory.createTitledBorder("Certificado de Registro de Armador (CRA)"));
        sPanel3.setName("sPanel3"); // NOI18N

        sDateChooser4.setName("sDateChooser4"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.dataValidade}"), sDateChooser4, BeanProperty.create("date"));
        bindingGroup.addBinding(binding);

        sLabel4.setText("Nº do registro:");
        sLabel4.setName("sLabel4"); // NOI18N

        sLabel5.setText("Validade:");
        sLabel5.setName("sLabel5"); // NOI18N

        sTextField2.setDocument(new GenericDocument(15) );
        sTextField2.setName("sTextField2"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.numero_registro}"), sTextField2, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        GroupLayout sPanel3Layout = new GroupLayout(sPanel3);
        sPanel3.setLayout(sPanel3Layout);
        sPanel3Layout.setHorizontalGroup(sPanel3Layout.createParallelGroup(Alignment.LEADING)
            .addGroup(sPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sLabel4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(sTextField2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(ComponentPlacement.UNRELATED)
                .addComponent(sLabel5, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(sDateChooser4, GroupLayout.PREFERRED_SIZE, 101, GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        sPanel3Layout.setVerticalGroup(sPanel3Layout.createParallelGroup(Alignment.LEADING)
            .addGroup(sPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sPanel3Layout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(sDateChooser4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel5, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sTextField2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        sLabel1.setText("Embarcação possui Atestado de Inscrição Temporária (AIT)?");
        sLabel1.setName("sLabel1"); // NOI18N

        sLabel2.setText("CNPJ do Armador:");
        sLabel2.setName("sLabel2"); // NOI18N

        campoCnpj.setFormatterFactory(new DefaultFormatterFactory(new NumberFormatter()));
        campoCnpj.setName("campoCnpj"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.armadorCnpjComMascara}"), campoCnpj, BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        jLabel1.setText("Embarcação Prep?");
        jLabel1.setName("jLabel1"); // NOI18N

        sRadioPanel3.setName("sRadioPanel3"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.listaSimNao}"), sRadioPanel3, BeanProperty.create("elements"));
        bindingGroup.addBinding(binding);
        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.voFormulario.embarcacaoPrep}"), sRadioPanel3, BeanProperty.create("selectedElement"));
        bindingGroup.addBinding(binding);

        GroupLayout sRadioPanel3Layout = new GroupLayout(sRadioPanel3);
        sRadioPanel3.setLayout(sRadioPanel3Layout);
        sRadioPanel3Layout.setHorizontalGroup(sRadioPanel3Layout.createParallelGroup(Alignment.LEADING)
            .addGap(0, 101, Short.MAX_VALUE)
        );
        sRadioPanel3Layout.setVerticalGroup(sRadioPanel3Layout.createParallelGroup(Alignment.LEADING)
            .addGap(0, 25, Short.MAX_VALUE)
        );

        GroupLayout sPanel1Layout = new GroupLayout(sPanel1);
        sPanel1.setLayout(sPanel1Layout);
        sPanel1Layout.setHorizontalGroup(sPanel1Layout.createParallelGroup(Alignment.LEADING)
            .addGroup(sPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sPanel1Layout.createParallelGroup(Alignment.LEADING)
                    .addComponent(sPanel3, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(sPanel1Layout.createSequentialGroup()
                        .addGroup(sPanel1Layout.createParallelGroup(Alignment.LEADING)
                            .addGroup(sPanel1Layout.createSequentialGroup()
                                .addComponent(sLabel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(ComponentPlacement.RELATED)
                                .addComponent(campoCnpj, GroupLayout.PREFERRED_SIZE, 165, GroupLayout.PREFERRED_SIZE))
                            .addComponent(sLabel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addGroup(sPanel1Layout.createParallelGroup(Alignment.LEADING)
                            .addComponent(sRadioPanel2, GroupLayout.PREFERRED_SIZE, 101, GroupLayout.PREFERRED_SIZE)
                            .addComponent(sRadioPanel3, GroupLayout.PREFERRED_SIZE, 101, GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        sPanel1Layout.setVerticalGroup(sPanel1Layout.createParallelGroup(Alignment.LEADING)
            .addGroup(sPanel1Layout.createSequentialGroup()
                .addGroup(sPanel1Layout.createParallelGroup(Alignment.LEADING)
                    .addGroup(sPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(sRadioPanel2, GroupLayout.PREFERRED_SIZE, 25, GroupLayout.PREFERRED_SIZE))
                    .addComponent(sLabel1, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.RELATED)
                .addGroup(sPanel1Layout.createParallelGroup(Alignment.LEADING)
                    .addComponent(sRadioPanel3, GroupLayout.PREFERRED_SIZE, 25, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, Alignment.TRAILING))
                .addPreferredGap(ComponentPlacement.UNRELATED)
                .addGroup(sPanel1Layout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(sLabel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoCnpj, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.UNRELATED)
                .addComponent(sPanel3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(0, 8, Short.MAX_VALUE))
        );

        sPanel2.setBorder(BorderFactory.createTitledBorder("Equipamentos de Comunicação"));
        sPanel2.setName("sPanel2"); // NOI18N

        sLabel3.setText("Observação:");
        sLabel3.setName("sLabel3"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        sTextArea1.setColumns(20);
        sTextArea1.setDocument(new GenericDocument(150) );
        sTextArea1.setLineWrap(true);
        sTextArea1.setRows(2);
        sTextArea1.setWrapStyleWord(true);
        sTextArea1.setName("sTextArea1"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.observacao}"), sTextArea1, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jScrollPane1.setViewportView(sTextArea1);

        checkBoxPlataforma1.setText("VHF");
        checkBoxPlataforma1.setName("checkBoxPlataforma1"); // NOI18N
        checkBoxPlataforma1.setOpaque(false);

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.voFormulario.vhf}"), checkBoxPlataforma1, BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        checkBoxPlataforma2.setText("VHS SEM DSC");
        checkBoxPlataforma2.setName("checkBoxPlataforma2"); // NOI18N
        checkBoxPlataforma2.setOpaque(false);

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.voFormulario.vhsSemDsc}"), checkBoxPlataforma2, BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        checkBoxPlataforma3.setText("MF COM DSC (Frequencia)");
        checkBoxPlataforma3.setName("checkBoxPlataforma3"); // NOI18N
        checkBoxPlataforma3.setOpaque(false);

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.voFormulario.mfComDsc}"), checkBoxPlataforma3, BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        checkBoxPlataforma4.setText("SEM DSC");
        checkBoxPlataforma4.setName("checkBoxPlataforma4"); // NOI18N
        checkBoxPlataforma4.setOpaque(false);

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.voFormulario.semDsc}"), checkBoxPlataforma4, BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        checkBoxPlataforma5.setText("HF COM DSC(Fequencia)");
        checkBoxPlataforma5.setName("checkBoxPlataforma5"); // NOI18N
        checkBoxPlataforma5.setOpaque(false);

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.voFormulario.hfComDsc}"), checkBoxPlataforma5, BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        checkBoxPlataforma6.setText("SEM DSC");
        checkBoxPlataforma6.setName("checkBoxPlataforma6"); // NOI18N
        checkBoxPlataforma6.setOpaque(false);

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.voFormulario.semDsc1}"), checkBoxPlataforma6, BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        checkBoxPlataforma7.setText("INMARSSAT TIPO (A)");
        checkBoxPlataforma7.setName("checkBoxPlataforma7"); // NOI18N
        checkBoxPlataforma7.setOpaque(false);

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.voFormulario.inmarssatTipoA}"), checkBoxPlataforma7, BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        checkBoxPlataforma8.setText("TRANSPONDER-9 GHz");
        checkBoxPlataforma8.setName("checkBoxPlataforma8"); // NOI18N
        checkBoxPlataforma8.setOpaque(false);

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.voFormulario.tranponder9Ghz}"), checkBoxPlataforma8, BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        checkBoxPlataforma9.setText("EPIRB");
        checkBoxPlataforma9.setName("checkBoxPlataforma9"); // NOI18N
        checkBoxPlataforma9.setOpaque(false);

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.voFormulario.epirb}"), checkBoxPlataforma9, BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        checkBoxPlataforma10.setText("NAVTEX");
        checkBoxPlataforma10.setName("checkBoxPlataforma10"); // NOI18N
        checkBoxPlataforma10.setOpaque(false);

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.voFormulario.navtex}"), checkBoxPlataforma10, BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        GroupLayout sPanel2Layout = new GroupLayout(sPanel2);
        sPanel2.setLayout(sPanel2Layout);
        sPanel2Layout.setHorizontalGroup(sPanel2Layout.createParallelGroup(Alignment.LEADING)
            .addGroup(sPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sPanel2Layout.createParallelGroup(Alignment.LEADING)
                    .addComponent(checkBoxPlataforma8, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkBoxPlataforma7, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addGroup(sPanel2Layout.createSequentialGroup()
                        .addGroup(sPanel2Layout.createParallelGroup(Alignment.LEADING)
                            .addComponent(checkBoxPlataforma1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkBoxPlataforma9, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkBoxPlataforma2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addGap(71, 71, 71)
                        .addGroup(sPanel2Layout.createParallelGroup(Alignment.LEADING)
                            .addComponent(checkBoxPlataforma10, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkBoxPlataforma4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkBoxPlataforma3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkBoxPlataforma5, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkBoxPlataforma6, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                    .addGroup(sPanel2Layout.createSequentialGroup()
                        .addComponent(sLabel3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 350, GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        sPanel2Layout.setVerticalGroup(sPanel2Layout.createParallelGroup(Alignment.LEADING)
            .addGroup(Alignment.TRAILING, sPanel2Layout.createSequentialGroup()
                .addGroup(sPanel2Layout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(checkBoxPlataforma1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkBoxPlataforma3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.RELATED)
                .addGroup(sPanel2Layout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(checkBoxPlataforma4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkBoxPlataforma2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(checkBoxPlataforma5, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(checkBoxPlataforma6, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(checkBoxPlataforma7, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(checkBoxPlataforma8, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addGroup(sPanel2Layout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(checkBoxPlataforma9, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkBoxPlataforma10, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(sPanel2Layout.createParallelGroup(Alignment.LEADING)
                    .addComponent(sLabel3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 74, GroupLayout.PREFERRED_SIZE))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        sPanel4.setBorder(BorderFactory.createTitledBorder("Dados do Despacho"));
        sPanel4.setName("sPanel4"); // NOI18N

        sComboBox1.setName("sComboBox1"); // NOI18N

        ELProperty eLProperty = ELProperty.create("${model.agenciamento.agencia.agenciaOrgao}");
        JComboBoxBinding jComboBoxBinding = SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, this, eLProperty, sComboBox1);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.agenciaOrgaoSelecionado}"), sComboBox1, BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        ResourceBundle bundle = ResourceBundle.getBundle("sistam-labels"); // NOI18N
        sLabel6.setText(bundle.getString("lblOrgaoDespacho")); // NOI18N
        sLabel6.setName("sLabel6"); // NOI18N

        GroupLayout sPanel4Layout = new GroupLayout(sPanel4);
        sPanel4.setLayout(sPanel4Layout);
        sPanel4Layout.setHorizontalGroup(sPanel4Layout.createParallelGroup(Alignment.LEADING)
            .addGroup(sPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sLabel6, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.UNRELATED)
                .addComponent(sComboBox1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        sPanel4Layout.setVerticalGroup(sPanel4Layout.createParallelGroup(Alignment.LEADING)
            .addGroup(sPanel4Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(sPanel4Layout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(sComboBox1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel6, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        GroupLayout pnlManobrasLayout = new GroupLayout(pnlManobras);
        pnlManobras.setLayout(pnlManobrasLayout);
        pnlManobrasLayout.setHorizontalGroup(pnlManobrasLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlManobrasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlManobrasLayout.createParallelGroup(Alignment.LEADING)
                    .addGroup(pnlManobrasLayout.createSequentialGroup()
                        .addGroup(pnlManobrasLayout.createParallelGroup(Alignment.LEADING, false)
                            .addGroup(pnlManobrasLayout.createSequentialGroup()
                                .addComponent(sLabel13, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(ComponentPlacement.RELATED)
                                .addComponent(sDateChooser3, GroupLayout.PREFERRED_SIZE, 101, GroupLayout.PREFERRED_SIZE))
                            .addComponent(sPanel2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(sPanel4, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlManobrasLayout.setVerticalGroup(pnlManobrasLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlManobrasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sPanel4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(sPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(sPanel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlManobrasLayout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(sDateChooser3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel13, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        sPanel4.getAccessibleContext().setAccessibleName("Dados do Despacho");

        pnlBotoes.setBorder(BorderFactory.createBevelBorder(BevelBorder.RAISED));
        pnlBotoes.setName("pnlBotoes"); // NOI18N

        sButton1.setAction(actionImprimir);
        sButton1.setName("sButton1"); // NOI18N
        pnlBotoes.add(sButton1);

        GroupLayout pnlEscalasLayout = new GroupLayout(pnlEscalas);
        pnlEscalas.setLayout(pnlEscalasLayout);
        pnlEscalasLayout.setHorizontalGroup(pnlEscalasLayout.createParallelGroup(Alignment.LEADING)
            .addComponent(pnlBotoes, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlEscalasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlManobras, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlEscalasLayout.setVerticalGroup(pnlEscalasLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlEscalasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlManobras, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(pnlBotoes, GroupLayout.PREFERRED_SIZE, 39, GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(pnlEscalas, BorderLayout.CENTER);

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //CHECKSTYLE:ON

    // Variables declaration - do not modify//GEN-BEGIN:variables
    GenericAction actionImprimir;
    SFormattedTextField campoCnpj;
    private BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}
