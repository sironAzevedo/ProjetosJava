package br.com.petrobras.sistam.desktop.agenciamento.operacoes;

import br.com.petrobras.fcorp.swing.base.SDialog;
import br.com.petrobras.fcorp.swing.base.action.GenericAction;
import br.com.petrobras.fcorp.swing.components.SButton;
import br.com.petrobras.fcorp.swing.components.SComboBox;
import br.com.petrobras.fcorp.swing.components.SLabel;
import br.com.petrobras.fcorp.swing.components.SNumericTextField;
import br.com.petrobras.fcorp.swing.components.SPanel;
import br.com.petrobras.fcorp.swing.components.STextField;
import br.com.petrobras.fcorp.swing.components.util.GenericDocument;
import br.com.petrobras.sistam.common.entity.Operacao;
import br.com.petrobras.sistam.desktop.components.SistamDateChooser;
import br.com.petrobras.sistam.desktop.components.SistamTimeChooser;
import br.com.petrobras.sistam.desktop.components.TimeZoneComboBox;
import br.com.petrobras.sistam.desktop.components.lookups.produto.ProdutoLookup;
import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.ImageIcon;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.WindowConstants;
import javax.swing.border.BevelBorder;
import javax.swing.border.SoftBevelBorder;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.Binding;
import org.jdesktop.beansbinding.BindingGroup;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
public class DetalheOperacaoProdutoDialog extends SDialog {
    private DetalheOperacaoProdutoDialogModel model;
    
    public DetalheOperacaoProdutoDialog(java.awt.Frame parent, Operacao operacao) {
        super(parent, true);
        this.model = new DetalheOperacaoProdutoDialogModel(operacao);
        initComponents();
        setLocationRelativeTo(parent);
        
        timeZoneComboBox1.setSelectedItem(operacao.getAgenciamento().getAgencia().obterTimezone());
    }

    public DetalheOperacaoProdutoDialogModel getModel() {
        return model;
    }
    
    public void salvar(){
        model.salvar();
        dispose();
    }
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings({"unchecked", "PMD"}) @SuppressFBWarnings
    //CHECKSTYLE:OFF
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new BindingGroup();

        GenericAction actionSalvar = new GenericAction();
        SPanel painelInformacoes = new SPanel();
        SLabel labelOperacao = new SLabel();
        SComboBox sComboBox1 = new SComboBox();
        SLabel labelProduto = new SLabel();
        ProdutoLookup produtoLookup1 = new ProdutoLookup();
        SLabel labelQtdEstimada = new SLabel();
        SNumericTextField sNumericTextField1 = new SNumericTextField();
        SComboBox sComboBox2 = new SComboBox();
        SLabel labelDataInicio = new SLabel();
        SLabel labelDataFim = new SLabel();
        SLabel labelAnexoUnico = new SLabel();
        SistamDateChooser sistamDateChooser1 = new SistamDateChooser();
        SistamDateChooser sistamDateChooser2 = new SistamDateChooser();
        SistamTimeChooser campoHoraInicio = new SistamTimeChooser();
        SistamTimeChooser campoHoraFim = new SistamTimeChooser();
        STextField sTextField1 = new STextField();
        SLabel labelDataInicio1 = new SLabel();
        timeZoneComboBox1 = new TimeZoneComboBox();
        SPanel painelBotoes = new SPanel();
        SButton botaoSalvar = new SButton();

        actionSalvar.setIcon(new ImageIcon(getClass().getResource("/icons/disk.png"))); // NOI18N
        actionSalvar.setMethodName("salvar");
        actionSalvar.setTarget(this);
        actionSalvar.setText("Salvar");
        actionSalvar.setToolTipText("Salva as informações do produto");

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Produto da Operação");

        painelInformacoes.setBorder(BorderFactory.createTitledBorder("Informações"));
        painelInformacoes.setName("painelInformacoes"); // NOI18N

        labelOperacao.setText("Operação:");
        labelOperacao.setName("labelOperacao"); // NOI18N

        sComboBox1.setName("sComboBox1"); // NOI18N

        ELProperty eLProperty = ELProperty.create("${model.listaTipoOperacao}");
        JComboBoxBinding jComboBoxBinding = SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, this, eLProperty, sComboBox1);
        bindingGroup.addBinding(jComboBoxBinding);
        Binding binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.operacao.tipoOperacao}"), sComboBox1, BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);
        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${empty model.operacao.id}"), sComboBox1, BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        labelProduto.setText("Produto:");
        labelProduto.setName("labelProduto"); // NOI18N

        produtoLookup1.setName("produtoLookup1"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.operacao.produto}"), produtoLookup1, BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        labelQtdEstimada.setText("Qtd. Estimada:");
        labelQtdEstimada.setName("labelQtdEstimada"); // NOI18N

        sNumericTextField1.setDecimalPlaces(new Short((short)4));
        sNumericTextField1.setIntegerPlaces(new Short((short)11));
        sNumericTextField1.setNumberClass(Double.class);
        sNumericTextField1.setName("sNumericTextField1"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.operacao.quatidadeEstimada}"), sNumericTextField1, BeanProperty.create("doubleValue"));
        bindingGroup.addBinding(binding);

        sComboBox2.setName("sComboBox2"); // NOI18N

        eLProperty = ELProperty.create("${model.listaUnidadeMedida}");
        jComboBoxBinding = SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, this, eLProperty, sComboBox2);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.operacao.unidadeMedida}"), sComboBox2, BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        labelDataInicio.setText("Data Início:");
        labelDataInicio.setName("labelDataInicio"); // NOI18N

        labelDataFim.setText("Data Fim:");
        labelDataFim.setName("labelDataFim"); // NOI18N

        labelAnexoUnico.setText("Anexo Único:");
        labelAnexoUnico.setName("labelAnexoUnico"); // NOI18N

        sistamDateChooser1.setName("sistamDateChooser1"); // NOI18N
        sistamDateChooser1.setTimeChooser(campoHoraInicio);
        sistamDateChooser1.setTimeZoneComboBox(timeZoneComboBox1);

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.operacao.dataInicio}"), sistamDateChooser1, BeanProperty.create("date"));
        bindingGroup.addBinding(binding);

        sistamDateChooser2.setName("sistamDateChooser2"); // NOI18N
        sistamDateChooser2.setTimeChooser(campoHoraFim);
        sistamDateChooser2.setTimeZoneComboBox(timeZoneComboBox1);

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.operacao.dataFim}"), sistamDateChooser2, BeanProperty.create("date"));
        bindingGroup.addBinding(binding);

        campoHoraInicio.setName("campoHoraInicio"); // NOI18N

        campoHoraFim.setName("campoHoraFim"); // NOI18N

        sTextField1.setDocument(new GenericDocument(13,GenericDocument.OPTION_APPLY_UPPERCASE ));
        sTextField1.setName("sTextField1"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.operacao.anexoUnico}"), sTextField1, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        labelDataInicio1.setText("Fuso Horário:");
        labelDataInicio1.setName("labelDataInicio1"); // NOI18N

        timeZoneComboBox1.setEnabled(false);
        timeZoneComboBox1.setName("timeZoneComboBox1"); // NOI18N

        GroupLayout painelInformacoesLayout = new GroupLayout(painelInformacoes);
        painelInformacoes.setLayout(painelInformacoesLayout);
        painelInformacoesLayout.setHorizontalGroup(
            painelInformacoesLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(painelInformacoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelInformacoesLayout.createParallelGroup(Alignment.LEADING)
                    .addComponent(labelAnexoUnico, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelDataFim, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelDataInicio, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelDataInicio1, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelQtdEstimada, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelProduto, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelOperacao, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.RELATED)
                .addGroup(painelInformacoesLayout.createParallelGroup(Alignment.LEADING)
                    .addGroup(painelInformacoesLayout.createParallelGroup(Alignment.LEADING, false)
                        .addComponent(produtoLookup1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(sComboBox1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(painelInformacoesLayout.createSequentialGroup()
                            .addComponent(sNumericTextField1, GroupLayout.PREFERRED_SIZE, 104, GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(ComponentPlacement.RELATED)
                            .addComponent(sComboBox2, GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                            .addGap(98, 98, 98)))
                    .addGroup(painelInformacoesLayout.createParallelGroup(Alignment.TRAILING, false)
                        .addComponent(timeZoneComboBox1, Alignment.LEADING, GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                        .addGroup(Alignment.LEADING, painelInformacoesLayout.createSequentialGroup()
                            .addGroup(painelInformacoesLayout.createParallelGroup(Alignment.TRAILING, false)
                                .addComponent(sTextField1, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(Alignment.LEADING, painelInformacoesLayout.createSequentialGroup()
                                    .addGroup(painelInformacoesLayout.createParallelGroup(Alignment.LEADING, false)
                                        .addComponent(sistamDateChooser1, GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                                        .addComponent(sistamDateChooser2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addPreferredGap(ComponentPlacement.RELATED)
                                    .addGroup(painelInformacoesLayout.createParallelGroup(Alignment.LEADING, false)
                                        .addComponent(campoHoraFim, GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                                        .addComponent(campoHoraInicio, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGap(0, 0, Short.MAX_VALUE))))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        painelInformacoesLayout.setVerticalGroup(
            painelInformacoesLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(painelInformacoesLayout.createSequentialGroup()
                .addGroup(painelInformacoesLayout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(labelOperacao, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sComboBox1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.UNRELATED)
                .addGroup(painelInformacoesLayout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(labelProduto, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(produtoLookup1, GroupLayout.PREFERRED_SIZE, 20, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.UNRELATED)
                .addGroup(painelInformacoesLayout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(labelQtdEstimada, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sNumericTextField1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sComboBox2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.UNRELATED)
                .addGroup(painelInformacoesLayout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(labelDataInicio1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(timeZoneComboBox1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.UNRELATED)
                .addGroup(painelInformacoesLayout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(labelDataInicio, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sistamDateChooser1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoHoraInicio, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.UNRELATED)
                .addGroup(painelInformacoesLayout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(labelDataFim, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sistamDateChooser2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoHoraFim, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.UNRELATED)
                .addGroup(painelInformacoesLayout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(labelAnexoUnico, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sTextField1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
        );

        painelBotoes.setBorder(new SoftBevelBorder(BevelBorder.RAISED));
        painelBotoes.setName("painelBotoes"); // NOI18N

        botaoSalvar.setAction(actionSalvar);
        botaoSalvar.setName("botaoSalvar"); // NOI18N
        painelBotoes.add(botaoSalvar);

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addComponent(painelBotoes, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painelInformacoes, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painelInformacoes, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(painelBotoes, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //CHECKSTYLE:ON

    // Variables declaration - do not modify//GEN-BEGIN:variables
    TimeZoneComboBox timeZoneComboBox1;
    private BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}
