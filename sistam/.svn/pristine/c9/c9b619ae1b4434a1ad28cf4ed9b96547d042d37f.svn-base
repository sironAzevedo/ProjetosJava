package br.com.petrobras.sistam.desktop.embarcacao;

import br.com.petrobras.fcorp.common.support.AssertUtils;
import br.com.petrobras.fcorp.swing.base.SInternalFrame;
import br.com.petrobras.fcorp.swing.base.action.GenericAction;
import br.com.petrobras.fcorp.swing.components.SButton;
import br.com.petrobras.fcorp.swing.components.SLabel;
import br.com.petrobras.fcorp.swing.components.SPanel;
import br.com.petrobras.fcorp.swing.components.STable;
import br.com.petrobras.fcorp.swing.components.STextField;
import br.com.petrobras.fcorp.swing.components.util.GenericDocument;
import br.com.petrobras.sistam.common.entity.Embarcacao;
import br.com.petrobras.sistam.common.entity.Pais;
import br.com.petrobras.sistam.common.enums.TipoEmbarcacao;
import br.com.petrobras.sistam.common.util.ConstantesI18N;
import br.com.petrobras.sistam.desktop.SistamApp;
import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
import java.awt.BorderLayout;
import java.awt.Dimension;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.ImageIcon;
import javax.swing.JScrollPane;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.WindowConstants;
import javax.swing.border.BevelBorder;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.Binding;
import org.jdesktop.beansbinding.BindingGroup;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.swingbinding.JTableBinding;
import org.jdesktop.swingbinding.JTableBinding.ColumnBinding;
import org.jdesktop.swingbinding.SwingBindings;

/**
 *
 * Classe ConsultaAgenciamentoFrame
 */
public class EmbarcacoesFrame extends SInternalFrame  {

    private EmbarcacoesModel model;
        
    public EmbarcacoesFrame() {
        this.model = new EmbarcacoesModel();
        initComponents();
    }
    
    public EmbarcacoesModel getModel() {
        return model;
    }

    public void novo() {
        Embarcacao embarcacao = new Embarcacao();
        embarcacao.setTipoEmbarcacao(TipoEmbarcacao.NAVIO);
        embarcacao.setHeliporto(false);
        DetalheEmbarcacaoDialog dialog = new DetalheEmbarcacaoDialog(SistamApp.getSistamApp().getMainFrame(), embarcacao, true);
        dialog.txtCodigo.setEnabled(true);
        dialog.setVisible(true);
        consultar();
    }
    
    
    public void editar() {
         AssertUtils.assertNotNull(model.getEmbarcacaoSelecionada(), ConstantesI18N.EMBARCACAO_OBRIGATORIA);
        
        Embarcacao embarcacao = (Embarcacao)model.getEmbarcacaoSelecionada().clone();
        DetalheEmbarcacaoDialog dialog = new DetalheEmbarcacaoDialog(SistamApp.getSistamApp().getMainFrame(), embarcacao, false);
        dialog.setVisible(true);
        consultar();
    }
    
    public void consultar() {
        String nomeConsulta = this.txtNomeEmbarcacao.getText().trim();
       AssertUtils.assertExpression(!nomeConsulta.isEmpty() || !this.txtImo.getText().isEmpty() , ConstantesI18N.EMBARCACAO_FILTRO_OBRIGATORIO);
       AssertUtils.assertExpression(nomeConsulta.length()>= 3 || !this.txtImo.getText().isEmpty() , ConstantesI18N.EMBARCACAO_NOME_MAIOR);
        model.consultar();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings({"unchecked", "PMD"}) @SuppressFBWarnings
    //CHECKSTYLE:OFF
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new BindingGroup();

        GenericAction actionConsultar = new GenericAction();
        GenericAction actionEditar = new GenericAction();
        GenericAction actionIncluir = new GenericAction();
        SPanel pnlFiltro = new SPanel();
        SButton sButton1 = new SButton();
        SLabel sLabel1 = new SLabel();
        txtNomeEmbarcacao = new STextField();
        SLabel sLabel2 = new SLabel();
        txtImo = new STextField();
        SPanel pnlPrincipal = new SPanel();
        JScrollPane jScrollPane1 = new JScrollPane();
        STable sTable1 = new STable();
        SPanel pnlBotoes = new SPanel();
        SButton sButton2 = new SButton();
        SButton sButton3 = new SButton();

        actionConsultar.setIcon(new ImageIcon(getClass().getResource("/icons/listagem_busca.png"))); // NOI18N
        actionConsultar.setMethodName("consultar");
        actionConsultar.setNeededSecurityResources(new String[] {});
        actionConsultar.setTarget(this);
        actionConsultar.setText("Consultar");

        actionEditar.setIcon(new ImageIcon(getClass().getResource("/icons/edit.png"))); // NOI18N
        actionEditar.setMethodName("editar");
        actionEditar.setNeededSecurityResources(new String[] {});
        actionEditar.setTarget(this);
        actionEditar.setText("Editar");
        actionEditar.setToolTipText("Edita a embarcação selecionada");

        Binding binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${not empty model.agenciamentoSelecinado}"), actionEditar, BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        actionIncluir.setIcon(new ImageIcon(getClass().getResource("/icons/add.png"))); // NOI18N
        actionIncluir.setMethodName("novo");
        actionIncluir.setNeededSecurityResources(new String[] {});
        actionIncluir.setTarget(this);
        actionIncluir.setText("Incluir");
        actionIncluir.setToolTipText("Incluir nova embarcação");

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Consulta de Embarcação");
        setFrameIcon(new ImageIcon(getClass().getResource("/icons/find.png"))); // NOI18N

        pnlFiltro.setBorder(BorderFactory.createTitledBorder("Filtro para consulta de Embarcação"));
        pnlFiltro.setName("pnlFiltro"); // NOI18N

        sButton1.setAction(actionConsultar);
        sButton1.setName("sButton1"); // NOI18N

        sLabel1.setText("Embarcação:");
        sLabel1.setName("sLabel1"); // NOI18N

        txtNomeEmbarcacao.setDocument(new GenericDocument(25));
        txtNomeEmbarcacao.setName("txtNomeEmbarcacao"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.filtro.nomeEmbarcacao}"), txtNomeEmbarcacao, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        sLabel2.setText("IMO:");
        sLabel2.setName("sLabel2"); // NOI18N

        txtImo.setDocument(new GenericDocument(9));
        txtImo.setName("txtImo"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.filtro.imo}"), txtImo, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        GroupLayout pnlFiltroLayout = new GroupLayout(pnlFiltro);
        pnlFiltro.setLayout(pnlFiltroLayout);
        pnlFiltroLayout.setHorizontalGroup(
            pnlFiltroLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(Alignment.TRAILING, pnlFiltroLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(sLabel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(txtNomeEmbarcacao, GroupLayout.PREFERRED_SIZE, 136, GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(sLabel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(txtImo, GroupLayout.PREFERRED_SIZE, 72, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                .addComponent(sButton1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlFiltroLayout.setVerticalGroup(
            pnlFiltroLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlFiltroLayout.createSequentialGroup()
                .addGroup(pnlFiltroLayout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(sButton1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNomeEmbarcacao, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtImo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(pnlFiltro, BorderLayout.PAGE_START);

        pnlPrincipal.setBorder(BorderFactory.createTitledBorder("Embarcações"));
        pnlPrincipal.setName("pnlPrincipal"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        sTable1.setSortable(true);
        sTable1.setName("sTable1"); // NOI18N

        ELProperty eLProperty = ELProperty.create("${model.embarcacoes}");
        JTableBinding jTableBinding = SwingBindings.createJTableBinding(UpdateStrategy.READ_WRITE, this, eLProperty, sTable1);
        ColumnBinding columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${nomeCompleto}"));
        columnBinding.setColumnName("Nome Completo");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${imo}"));
        columnBinding.setColumnName("IMO");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${bandeira}"));
        columnBinding.setColumnName("Bandeira");
        columnBinding.setColumnClass(Pais.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.embarcacaoSelecionada}"), sTable1, BeanProperty.create("selectedElement"));
        bindingGroup.addBinding(binding);

        jScrollPane1.setViewportView(sTable1);

        GroupLayout pnlPrincipalLayout = new GroupLayout(pnlPrincipal);
        pnlPrincipal.setLayout(pnlPrincipalLayout);
        pnlPrincipalLayout.setHorizontalGroup(
            pnlPrincipalLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 523, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlPrincipalLayout.setVerticalGroup(
            pnlPrincipalLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );

        getContentPane().add(pnlPrincipal, BorderLayout.CENTER);

        pnlBotoes.setBorder(BorderFactory.createBevelBorder(BevelBorder.RAISED));
        pnlBotoes.setName("pnlBotoes"); // NOI18N
        pnlBotoes.setPreferredSize(new Dimension(565, 50));

        sButton2.setAction(actionIncluir);
        sButton2.setName("sButton2"); // NOI18N
        pnlBotoes.add(sButton2);

        sButton3.setAction(actionEditar);
        sButton3.setName("sButton3"); // NOI18N
        pnlBotoes.add(sButton3);

        getContentPane().add(pnlBotoes, BorderLayout.PAGE_END);

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //CHECKSTYLE:ON

    // Variables declaration - do not modify//GEN-BEGIN:variables
    STextField txtImo;
    STextField txtNomeEmbarcacao;
    private BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}
