package br.com.petrobras.sistam.desktop.porto;

import br.com.petrobras.fcorp.swing.base.SDialog;
import br.com.petrobras.fcorp.swing.base.action.GenericAction;
import br.com.petrobras.fcorp.swing.components.SButton;
import br.com.petrobras.fcorp.swing.components.SFormattedTextField;
import br.com.petrobras.fcorp.swing.components.SHelpLabel;
import br.com.petrobras.fcorp.swing.components.SLabel;
import br.com.petrobras.fcorp.swing.components.SPanel;
import br.com.petrobras.fcorp.swing.components.STextField;
import br.com.petrobras.fcorp.swing.components.util.GenericDocument;
import br.com.petrobras.sistam.common.entity.Porto;
import br.com.petrobras.sistam.desktop.util.DesktopUtil;
import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.LayoutStyle;
import javax.swing.WindowConstants;
import javax.swing.border.BevelBorder;
import javax.swing.border.SoftBevelBorder;
import org.jdesktop.beansbinding.AutoBinding;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.Binding;
import org.jdesktop.beansbinding.BindingGroup;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.ELProperty;

/**
 *
 */
public class DetalhesComplementoDialog extends SDialog {
    private DetalhesComplementoModel model;

    /** 
     * Constrói um dialog modal centralizado no frame pai.
     */
    public DetalhesComplementoDialog(java.awt.Frame parent, Porto porto) {
        super(parent, true);
        model = new DetalhesComplementoModel(porto);
        initComponents();
        setLocationRelativeTo(parent);
        
        DesktopUtil.configurarComponenteCNPJ(textCNPJ, actionSalvar);
    }

    public DetalhesComplementoModel getModel() {
        return model;
    }
    
    public void salvar(){
        model.validar();
        dispose();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings({"unchecked", "PMD"}) @SuppressFBWarnings
    //CHECKSTYLE:OFF
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new BindingGroup();

        actionSalvar = new GenericAction();
        SPanel panelInfo = new SPanel();
        SLabel labelNomeCtac = new SLabel();
        STextField textNomeCtac = new STextField();
        STextField textEndereco = new STextField();
        SLabel labelEndereco = new SLabel();
        STextField textCidade = new STextField();
        SLabel labelCidade = new SLabel();
        SLabel labelEstado = new SLabel();
        STextField textEstado = new STextField();
        SLabel labelEstado2 = new SLabel();
        textCNPJ = new SFormattedTextField();
        SLabel labelEstado1 = new SLabel();
        STextField textInscricaoEstadual = new STextField();
        SHelpLabel sHelpLabel1 = new SHelpLabel();
        SPanel panelBotao = new SPanel();
        SButton sButton1 = new SButton();

        actionSalvar.setIcon(new ImageIcon(getClass().getResource("/icons/disk.png"))); // NOI18N
        actionSalvar.setMethodName("salvar");
        actionSalvar.setTarget(this);
        actionSalvar.setText("Salvar");
        actionSalvar.setToolTipText("Salvar as informações complementares no Porto Nacional");

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);

        panelInfo.setBorder(BorderFactory.createTitledBorder("Informações"));
        panelInfo.setName("panelInfo"); // NOI18N

        labelNomeCtac.setText("Nome CTAC:");
        labelNomeCtac.setName("labelNomeCtac"); // NOI18N

        textNomeCtac.setDocument(new GenericDocument(30));
        textNomeCtac.setName("textNomeCtac"); // NOI18N

        Binding binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.portoComplemento.nomeCtac}"), textNomeCtac, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        textEndereco.setDocument(new GenericDocument(256));
        textEndereco.setName("textEndereco"); // NOI18N

        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.portoComplemento.endereco}"), textEndereco, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        labelEndereco.setText("Endereço:");
        labelEndereco.setName("labelEndereco"); // NOI18N

        textCidade.setDocument(new GenericDocument(30));
        textCidade.setName("textCidade"); // NOI18N

        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.portoComplemento.cidade}"), textCidade, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        labelCidade.setText("Cidade:");
        labelCidade.setName("labelCidade"); // NOI18N

        labelEstado.setText("Estado:");
        labelEstado.setName("labelEstado"); // NOI18N

        textEstado.setDocument(new GenericDocument(2, 
            GenericDocument.OPTION_APPLY_UPPERCASE ));
    textEstado.setName("textEstado"); // NOI18N

    binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.portoComplemento.estado}"), textEstado, BeanProperty.create("text"));
    bindingGroup.addBinding(binding);

    labelEstado2.setText("CNPJ:");
    labelEstado2.setName("labelEstado2"); // NOI18N

    textCNPJ.setName("textCNPJ"); // NOI18N

    binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.portoComplemento.cnpjComMascara}"), textCNPJ, BeanProperty.create("value"));
    bindingGroup.addBinding(binding);

    labelEstado1.setText("Inscrição Estadual:");
    labelEstado1.setName("labelEstado1"); // NOI18N

    textInscricaoEstadual.setDocument(new GenericDocument(12, GenericDocument.OPTION_REJECT_LETTERS | GenericDocument.OPTION_REJECT_SYMBOLS | GenericDocument.OPTION_REJECT_SPACE));
    textInscricaoEstadual.setName("textInscricaoEstadual"); // NOI18N

    binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.portoComplemento.inscricaoEstadual}"), textInscricaoEstadual, BeanProperty.create("text"));
    bindingGroup.addBinding(binding);

    sHelpLabel1.setText("Informe o 'Nome CTAC' quando o porto, utilizado no CTAC, for diferente do SIGO");
    sHelpLabel1.setName("sHelpLabel1"); // NOI18N

        GroupLayout panelInfoLayout = new GroupLayout(panelInfo);
    panelInfo.setLayout(panelInfoLayout);
    panelInfoLayout.setHorizontalGroup(
        panelInfoLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
        .addGroup(panelInfoLayout.createSequentialGroup()
            .addGroup(panelInfoLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(panelInfoLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(panelInfoLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                        .addComponent(labelNomeCtac, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelEndereco, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelCidade, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelEstado2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(panelInfoLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(textEndereco, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(textNomeCtac, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panelInfoLayout.createSequentialGroup()
                            .addComponent(textCidade, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGap(18, 18, 18)
                            .addComponent(labelEstado, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(textEstado, GroupLayout.PREFERRED_SIZE, 60, GroupLayout.PREFERRED_SIZE))
                        .addGroup(panelInfoLayout.createSequentialGroup()
                            .addComponent(textCNPJ, GroupLayout.PREFERRED_SIZE, 178, GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(labelEstado1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(textInscricaoEstadual, GroupLayout.PREFERRED_SIZE, 120, GroupLayout.PREFERRED_SIZE))))
                .addGroup(GroupLayout.Alignment.TRAILING, panelInfoLayout.createSequentialGroup()
                    .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sHelpLabel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
            .addContainerGap())
    );
    panelInfoLayout.setVerticalGroup(
        panelInfoLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
        .addGroup(panelInfoLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(panelInfoLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                .addComponent(labelNomeCtac, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(textNomeCtac, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(panelInfoLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                .addComponent(labelEstado2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(textCNPJ, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(textInscricaoEstadual, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(labelEstado1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panelInfoLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                .addComponent(labelEndereco, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(textEndereco, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(panelInfoLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                .addComponent(labelCidade, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(textCidade, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(labelEstado, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(textEstado, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(sHelpLabel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addContainerGap())
    );

    panelBotao.setBorder(new SoftBevelBorder(BevelBorder.RAISED));
    panelBotao.setName("panelBotao"); // NOI18N

    sButton1.setAction(actionSalvar);
    sButton1.setName("sButton1"); // NOI18N
    panelBotao.add(sButton1);

        GroupLayout layout = new GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addComponent(panelInfo, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panelBotao, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addContainerGap())
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(panelInfo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(panelBotao, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    bindingGroup.bind();

    pack();
    }// </editor-fold>//GEN-END:initComponents
    //CHECKSTYLE:ON

    // Variables declaration - do not modify//GEN-BEGIN:variables
    GenericAction actionSalvar;
    SFormattedTextField textCNPJ;
    private BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}
