package br.com.petrobras.sistam.desktop.agenciamento.taxa;

import br.com.petrobras.fcorp.swing.base.SDialog;
import br.com.petrobras.fcorp.swing.base.action.GenericAction;
import br.com.petrobras.fcorp.swing.components.SButton;
import br.com.petrobras.fcorp.swing.components.SCheckBox;
import br.com.petrobras.fcorp.swing.components.SComboBox;
import br.com.petrobras.fcorp.swing.components.SLabel;
import br.com.petrobras.fcorp.swing.components.SNumericTextField;
import br.com.petrobras.fcorp.swing.components.SPanel;
import br.com.petrobras.fcorp.swing.components.SRadioPanel;
import br.com.petrobras.sistam.common.entity.Taxa;
import br.com.petrobras.sistam.desktop.components.SistamDateChooser;
import br.com.petrobras.sistam.desktop.components.TimeZoneComboBox;
import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.GridLayout;
import java.util.ResourceBundle;
import java.util.TimeZone;
import javax.swing.BorderFactory;
import javax.swing.BoxLayout;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.ImageIcon;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.WindowConstants;
import javax.swing.border.BevelBorder;
import javax.swing.border.LineBorder;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.Binding;
import org.jdesktop.beansbinding.BindingGroup;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;

public class DetalheTaxaDialog extends SDialog {
    public static final String TAXA_INSERIDO = "TAXA_INSERIDO";
    public static final String TAXA_ALTERADO = "TAXA_ALTERADO";
    
    private DetalheTaxaDialogModel model;
   
    public DetalheTaxaDialog(java.awt.Frame parent, Taxa taxa) {
        super(parent, true);
        this.model = new DetalheTaxaDialogModel(taxa);
        initComponents();
        setLocationRelativeTo(parent);
        
        timeZoneComboBox.setSelectedItem(TimeZone.getTimeZone(taxa.getAgenciamento().getAgencia().getTimezone()));
    }
    
    public DetalheTaxaDialogModel getModel() {
        return model;
    }
    
    public void salvar() {
        //Propriedade que informe se está havendo alteração ou criação de uma taxa
        String property = model.getTaxa().getId() == null ? TAXA_INSERIDO : TAXA_ALTERADO;
        
        model.salvar();
        firePropertyChange(property,  null, null);
        
        //Se não for pra continuar inserindo, fecha a tela.
        if (! model.isContinuarInserindo()){
            dispose();
        } else{
            //caso continue inserindo, prepara uma nova taxa
            model.prepararNovaTaxa();
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings({"unchecked", "PMD"}) @SuppressFBWarnings
    //CHECKSTYLE:OFF
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new BindingGroup();

        GenericAction actionSalvar = new GenericAction();
        SPanel pnlCabecalho = new SPanel();
        SLabel sLabel7 = new SLabel();
        SLabel sLabel8 = new SLabel();
        SLabel sLabel12 = new SLabel();
        SLabel sLabel13 = new SLabel();
        SLabel sLabel9 = new SLabel();
        timeZoneComboBox = new TimeZoneComboBox();
        SPanel pnlEscalas = new SPanel();
        pnlInformacoes = new SPanel();
        SLabel sLabel1 = new SLabel();
        SComboBox sComboBox1 = new SComboBox();
        SPanel pnlInformacoesSap = new SPanel();
        SLabel sLabel6 = new SLabel();
        SLabel sLabel10 = new SLabel();
        SLabel sLabel11 = new SLabel();
        SNumericTextField sNumericTextField3 = new SNumericTextField();
        SNumericTextField sNumericTextField4 = new SNumericTextField();
        SNumericTextField sNumericTextField5 = new SNumericTextField();
        SNumericTextField sNumericTextField6 = new SNumericTextField();
        SLabel sLabel3 = new SLabel();
        SPanel pnlInformacoesTaxa = new SPanel();
        SLabel sLabel4 = new SLabel();
        SNumericTextField sNumericTextField2 = new SNumericTextField();
        SLabel sLabel2 = new SLabel();
        SLabel sLabel5 = new SLabel();
        SNumericTextField sNumericTextField1 = new SNumericTextField();
        SistamDateChooser sistamDateChooser1 = new SistamDateChooser();
        cboResponsavelCusto = new SComboBox();
        SLabel sLabel14 = new SLabel();
        SCheckBox sCheckBox1 = new SCheckBox();
        SPanel pnlBotoes = new SPanel();
        SButton btnSalvar = new SButton();

        actionSalvar.setIcon(new ImageIcon(getClass().getResource("/icons/disk.png"))); // NOI18N
        actionSalvar.setMethodName("salvar");
        actionSalvar.setTarget(this);
        ResourceBundle bundle = ResourceBundle.getBundle("sistam-labels"); // NOI18N
        actionSalvar.setText(bundle.getString("salvar")); // NOI18N
        actionSalvar.setToolTipText("Confirma as informações da taxa");

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Taxa");

        pnlCabecalho.setBorder(new LineBorder(new Color(0, 0, 0), 1, true));
        pnlCabecalho.setName("pnlCabecalho"); // NOI18N

        sLabel7.setText(bundle.getString("lblNome")); // NOI18N
        sLabel7.setName("sLabel7"); // NOI18N

        sLabel8.setText(bundle.getString("lblViagem")); // NOI18N
        sLabel8.setName("sLabel8"); // NOI18N

        sLabel12.setName("sLabel12"); // NOI18N
        sLabel12.setRequiredField(true);

        Binding binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.taxa.agenciamento.embarcacao.nomeCompleto}"), sLabel12, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        sLabel13.setName("sLabel13"); // NOI18N
        sLabel13.setRequiredField(true);

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.taxa.agenciamento.vgm}"), sLabel13, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        sLabel9.setText("Fuso Horário:");
        sLabel9.setName("sLabel9"); // NOI18N

        timeZoneComboBox.setEnabled(false);
        timeZoneComboBox.setName("timeZoneComboBox"); // NOI18N

        GroupLayout pnlCabecalhoLayout = new GroupLayout(pnlCabecalho);
        pnlCabecalho.setLayout(pnlCabecalhoLayout);
        pnlCabecalhoLayout.setHorizontalGroup(
            pnlCabecalhoLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlCabecalhoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sLabel7, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(sLabel12, GroupLayout.PREFERRED_SIZE, 180, GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(sLabel8, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(sLabel13, GroupLayout.PREFERRED_SIZE, 61, GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(sLabel9, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(timeZoneComboBox, GroupLayout.PREFERRED_SIZE, 167, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlCabecalhoLayout.setVerticalGroup(
            pnlCabecalhoLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(Alignment.TRAILING, pnlCabecalhoLayout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlCabecalhoLayout.createParallelGroup(Alignment.TRAILING)
                    .addGroup(pnlCabecalhoLayout.createParallelGroup(Alignment.BASELINE)
                        .addComponent(sLabel9, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addComponent(timeZoneComboBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlCabecalhoLayout.createParallelGroup(Alignment.LEADING, false)
                        .addComponent(sLabel13, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlCabecalhoLayout.createParallelGroup(Alignment.BASELINE, false)
                            .addComponent(sLabel7, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sLabel8, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(sLabel12, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        getContentPane().add(pnlCabecalho, BorderLayout.PAGE_START);

        pnlEscalas.setName("pnlEscalas"); // NOI18N

        pnlInformacoes.setBorder(BorderFactory.createEtchedBorder());
        pnlInformacoes.setName("pnlInformacoes"); // NOI18N

        sLabel1.setText(bundle.getString("lblTpTaxa")); // NOI18N
        sLabel1.setName("sLabel1"); // NOI18N

        sComboBox1.setName("sComboBox1"); // NOI18N

        ELProperty eLProperty = ELProperty.create("${model.listaTipoTaxa}");
        JComboBoxBinding jComboBoxBinding = SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, this, eLProperty, sComboBox1);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.taxa.tipoTaxa}"), sComboBox1, BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);
        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${empty model.taxa.id}"), sComboBox1, BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        pnlInformacoesSap.setBorder(BorderFactory.createTitledBorder("Informações SAP"));
        pnlInformacoesSap.setName("pnlInformacoesSap"); // NOI18N

        sLabel6.setText("Nr Pedido:");
        sLabel6.setName("sLabel6"); // NOI18N

        sLabel10.setText("FRS:");
        sLabel10.setName("sLabel10"); // NOI18N

        sLabel11.setText("NL:");
        sLabel11.setName("sLabel11"); // NOI18N

        sNumericTextField3.setDecimalPlaces(new Short((short)0));
        sNumericTextField3.setIntegerPlaces(new Short((short)11));
        sNumericTextField3.setNumberClass(Long.class);
        sNumericTextField3.setText("campoNrPrdido");
        sNumericTextField3.setUnities(null);
        sNumericTextField3.setUseGroupDigit(false);
        sNumericTextField3.setName("sNumericTextField3"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.taxa.numeroPedidoSap}"), sNumericTextField3, BeanProperty.create("longValue"));
        bindingGroup.addBinding(binding);

        sNumericTextField4.setDecimalPlaces(new Short((short)0));
        sNumericTextField4.setIntegerPlaces(new Short((short)11));
        sNumericTextField4.setNumberClass(Long.class);
        sNumericTextField4.setUseGroupDigit(false);
        sNumericTextField4.setName("sNumericTextField4"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.taxa.numeroFrsSap}"), sNumericTextField4, BeanProperty.create("longValue"));
        bindingGroup.addBinding(binding);

        sNumericTextField5.setDecimalPlaces(new Short((short)0));
        sNumericTextField5.setIntegerPlaces(new Short((short)11));
        sNumericTextField5.setNumberClass(Long.class);
        sNumericTextField5.setText("sNumericTextField5");
        sNumericTextField5.setUseGroupDigit(false);
        sNumericTextField5.setName("sNumericTextField5"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.taxa.numeroNecessidadeLiberacaoSap}"), sNumericTextField5, BeanProperty.create("longValue"));
        bindingGroup.addBinding(binding);

        sNumericTextField6.setDecimalPlaces(new Short((short)0));
        sNumericTextField6.setIntegerPlaces(new Short((short)12));
        sNumericTextField6.setNumberClass(Long.class);
        sNumericTextField6.setText("sNumericTextField1");
        sNumericTextField6.setUseGroupDigit(false);
        sNumericTextField6.setName("sNumericTextField6"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.taxa.numeroDocumentoContabil}"), sNumericTextField6, BeanProperty.create("longValue"));
        bindingGroup.addBinding(binding);

        sLabel3.setText("Nr. Doc. Contábil");
        sLabel3.setName("sLabel3"); // NOI18N

        GroupLayout pnlInformacoesSapLayout = new GroupLayout(pnlInformacoesSap);
        pnlInformacoesSap.setLayout(pnlInformacoesSapLayout);
        pnlInformacoesSapLayout.setHorizontalGroup(
            pnlInformacoesSapLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlInformacoesSapLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInformacoesSapLayout.createParallelGroup(Alignment.TRAILING)
                    .addGroup(pnlInformacoesSapLayout.createSequentialGroup()
                        .addComponent(sLabel11, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addComponent(sNumericTextField5, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlInformacoesSapLayout.createSequentialGroup()
                        .addComponent(sLabel6, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addComponent(sNumericTextField3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlInformacoesSapLayout.createParallelGroup(Alignment.TRAILING)
                    .addComponent(sLabel10, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.RELATED)
                .addGroup(pnlInformacoesSapLayout.createParallelGroup(Alignment.LEADING)
                    .addComponent(sNumericTextField4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sNumericTextField6, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        pnlInformacoesSapLayout.setVerticalGroup(
            pnlInformacoesSapLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlInformacoesSapLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInformacoesSapLayout.createParallelGroup(Alignment.CENTER)
                    .addComponent(sLabel6, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sNumericTextField3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel10, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sNumericTextField4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.RELATED)
                .addGroup(pnlInformacoesSapLayout.createParallelGroup(Alignment.CENTER)
                    .addComponent(sLabel11, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sNumericTextField5, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sNumericTextField6, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlInformacoesTaxa.setBorder(BorderFactory.createTitledBorder("Informações da Taxa"));
        pnlInformacoesTaxa.setName("pnlInformacoesTaxa"); // NOI18N

        sLabel4.setText(bundle.getString("lblValor")); // NOI18N
        sLabel4.setName("sLabel4"); // NOI18N

        sNumericTextField2.setIntegerPlaces(new Short((short)13));
        sNumericTextField2.setNumberClass(Double.class);
        sNumericTextField2.setText("sNumericTextField2");
        sNumericTextField2.setName("sNumericTextField2"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.taxa.valor}"), sNumericTextField2, BeanProperty.create("doubleValue"));
        bindingGroup.addBinding(binding);

        sLabel2.setText(bundle.getString("lblDtPagamento")); // NOI18N
        sLabel2.setName("sLabel2"); // NOI18N

        sLabel5.setText(bundle.getString("lblNrDocumento")); // NOI18N
        sLabel5.setName("sLabel5"); // NOI18N

        sNumericTextField1.setDecimalPlaces(new Short((short)0));
        sNumericTextField1.setIntegerPlaces(new Short((short)12));
        sNumericTextField1.setNumberClass(Long.class);
        sNumericTextField1.setText("sNumericTextField1");
        sNumericTextField1.setUseGroupDigit(false);
        sNumericTextField1.setName("sNumericTextField1"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.taxa.numeroDocumento}"), sNumericTextField1, BeanProperty.create("longValue"));
        bindingGroup.addBinding(binding);

        sistamDateChooser1.setName("sistamDateChooser1"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.taxa.dataPagamento}"), sistamDateChooser1, BeanProperty.create("date"));
        bindingGroup.addBinding(binding);

        GroupLayout pnlInformacoesTaxaLayout = new GroupLayout(pnlInformacoesTaxa);
        pnlInformacoesTaxa.setLayout(pnlInformacoesTaxaLayout);
        pnlInformacoesTaxaLayout.setHorizontalGroup(
            pnlInformacoesTaxaLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlInformacoesTaxaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sLabel4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.UNRELATED)
                .addComponent(sNumericTextField2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(sLabel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(sistamDateChooser1, GroupLayout.PREFERRED_SIZE, 104, GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(sLabel5, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(sNumericTextField1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        pnlInformacoesTaxaLayout.setVerticalGroup(
            pnlInformacoesTaxaLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlInformacoesTaxaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInformacoesTaxaLayout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(sNumericTextField2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sistamDateChooser1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel5, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sNumericTextField1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cboResponsavelCusto.setName("cboResponsavelCusto"); // NOI18N
        cboResponsavelCusto.setPopupResizeEnabled(true);

        eLProperty = ELProperty.create("${model.listaResponsavelCusto}");
        jComboBoxBinding = SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, this, eLProperty, cboResponsavelCusto);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.taxa.responsavelCusto}"), cboResponsavelCusto, BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        sLabel14.setText("Responsável pelo custo:");
        sLabel14.setName("sLabel14"); // NOI18N

        GroupLayout pnlInformacoesLayout = new GroupLayout(pnlInformacoes);
        pnlInformacoes.setLayout(pnlInformacoesLayout);
        pnlInformacoesLayout.setHorizontalGroup(
            pnlInformacoesLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlInformacoesLayout.createSequentialGroup()
                .addGroup(pnlInformacoesLayout.createParallelGroup(Alignment.LEADING)
                    .addComponent(pnlInformacoesTaxa, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlInformacoesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlInformacoesLayout.createParallelGroup(Alignment.LEADING)
                            .addGroup(pnlInformacoesLayout.createSequentialGroup()
                                .addGroup(pnlInformacoesLayout.createParallelGroup(Alignment.LEADING)
                                    .addComponent(sLabel1, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sLabel14, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(ComponentPlacement.RELATED)
                                .addGroup(pnlInformacoesLayout.createParallelGroup(Alignment.LEADING)
                                    .addComponent(sComboBox1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cboResponsavelCusto, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(pnlInformacoesSap, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        pnlInformacoesLayout.setVerticalGroup(
            pnlInformacoesLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlInformacoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInformacoesLayout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(sLabel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sComboBox1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.RELATED)
                .addGroup(pnlInformacoesLayout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(cboResponsavelCusto, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel14, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(pnlInformacoesSap, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(pnlInformacoesTaxa, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        sCheckBox1.setText("Após salvar, continuar inserindo.");
        sCheckBox1.setName("sCheckBox1"); // NOI18N
        sCheckBox1.setOpaque(false);

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.continuarInserindo}"), sCheckBox1, BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        GroupLayout pnlEscalasLayout = new GroupLayout(pnlEscalas);
        pnlEscalas.setLayout(pnlEscalasLayout);
        pnlEscalasLayout.setHorizontalGroup(
            pnlEscalasLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlEscalasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEscalasLayout.createParallelGroup(Alignment.LEADING)
                    .addComponent(sCheckBox1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlInformacoes, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        pnlEscalasLayout.setVerticalGroup(
            pnlEscalasLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlEscalasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlInformacoes, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.UNRELATED)
                .addComponent(sCheckBox1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(pnlEscalas, BorderLayout.CENTER);

        pnlBotoes.setBorder(BorderFactory.createBevelBorder(BevelBorder.RAISED));
        pnlBotoes.setName("pnlBotoes"); // NOI18N

        btnSalvar.setAction(actionSalvar);
        btnSalvar.setText("Salvar");
        btnSalvar.setName("btnSalvar"); // NOI18N
        pnlBotoes.add(btnSalvar);

        getContentPane().add(pnlBotoes, BorderLayout.PAGE_END);

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //CHECKSTYLE:ON

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private SComboBox cboResponsavelCusto;
    SPanel pnlInformacoes;
    TimeZoneComboBox timeZoneComboBox;
    private BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}
