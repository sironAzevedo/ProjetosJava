package br.com.petrobras.sistam.desktop.relatorio;

import br.com.petrobras.fcorp.swing.base.SDialog;
import br.com.petrobras.fcorp.swing.base.action.GenericAction;
import br.com.petrobras.fcorp.swing.components.SButton;
import br.com.petrobras.fcorp.swing.components.SCheckList;
import br.com.petrobras.fcorp.swing.components.SComboBox;
import br.com.petrobras.fcorp.swing.components.SDateChooser;
import br.com.petrobras.fcorp.swing.components.SLabel;
import br.com.petrobras.fcorp.swing.components.SPanel;
import br.com.petrobras.fcorp.swing.components.STable;
import br.com.petrobras.sistam.common.entity.ResponsavelCustoEntity;
import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.util.ResourceBundle;
import javax.swing.AbstractListModel;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JScrollPane;
import javax.swing.LayoutStyle;
import javax.swing.WindowConstants;
import javax.swing.border.BevelBorder;
import javax.swing.border.SoftBevelBorder;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.beansbinding.AutoBinding;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.Binding;
import org.jdesktop.beansbinding.BindingGroup;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.JListBinding;
import org.jdesktop.swingbinding.JTableBinding;
import org.jdesktop.swingbinding.SwingBindings;

public class RelatorioManobraDialog extends SDialog {
    
    private RelatorioManobraModel model = new RelatorioManobraModel();

    /**
     * Constrói um dialog modal centralizado no frame pai.
     */
    public RelatorioManobraDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent);
    }
    
    public RelatorioManobraModel getModel() {
        return model;
    }
    
    public void gerar() {
        boolean todos = false;
        if (model.getFiltro().getResponsaveis().isEmpty()) {
            tabelaREsponsaveisCusto.setRowSelectionInterval(0, 0);
        } else {
            for (ResponsavelCustoEntity responsavelCustoEntity : model.getFiltro().getResponsaveis()) {
                if (responsavelCustoEntity.getId() == null) {
                    todos = true;
                    break;
                }
            }
        }
        
        if (todos) {
            for (ResponsavelCustoEntity responsavelCustoEntity : model.getFiltro().getResponsaveis()) {
                if (responsavelCustoEntity.getId() != null) {
                    model.getFiltro().getResponsaveis().remove(responsavelCustoEntity.getId());
                }
            }
            tabelaREsponsaveisCusto.setRowSelectionInterval(0, 0);
        }
        
        
        model.gerar();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings({"unchecked", "PMD"})
    @SuppressFBWarnings
    //CHECKSTYLE:OFF
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new BindingGroup();

        GenericAction actionGerar = new GenericAction();
        SPanel pnlCentral = new SPanel();
        SPanel pnlBotao = new SPanel();
        SButton btGerar = new SButton();
        SPanel pnlFiltro = new SPanel();
        SLabel lblAgencia = new SLabel();
        SComboBox cboAgencia = new SComboBox();
        SLabel lblContrato = new SLabel();
        SComboBox cboTipoContrato = new SComboBox();
        SLabel lblPorto = new SLabel();
        SComboBox cboPorto = new SComboBox();
        SLabel lblPeriodo = new SLabel();
        SDateChooser dtPeriodoInicio = new SDateChooser();
        SDateChooser dtPeriodoTermino = new SDateChooser();
        SLabel sLabel1 = new SLabel();
        JScrollPane jScrollPane2 = new JScrollPane();
        tabelaREsponsaveisCusto = new STable();

        actionGerar.setIcon(new ImageIcon(getClass().getResource("/icons/excel.png"))); // NOI18N
        actionGerar.setMethodName("gerar");
        actionGerar.setTarget(this);
        actionGerar.setText("Gerar");
        actionGerar.setToolTipText("Gerar o relatório de manobras");

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Relatório de Manobras");
        setIconImage(null);

        pnlCentral.setName("pnlCentral"); // NOI18N

        pnlBotao.setBorder(new SoftBevelBorder(BevelBorder.RAISED));
        pnlBotao.setName("pnlBotao"); // NOI18N
        pnlBotao.setPreferredSize(new Dimension(14, 40));

        btGerar.setAction(actionGerar);
        btGerar.setName("btGerar"); // NOI18N
        pnlBotao.add(btGerar);

        pnlFiltro.setBorder(BorderFactory.createTitledBorder("Filtro para o Relatório"));
        pnlFiltro.setName("pnlFiltro"); // NOI18N

        ResourceBundle bundle = ResourceBundle.getBundle("sistam-labels"); // NOI18N
        lblAgencia.setText(bundle.getString("lblAgenciaMaritima")); // NOI18N
        lblAgencia.setName("lblAgencia"); // NOI18N

        cboAgencia.setName("cboAgencia"); // NOI18N

        ELProperty eLProperty = ELProperty.create("${model.agencias}");
        JComboBoxBinding jComboBoxBinding = SwingBindings.createJComboBoxBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, cboAgencia);
        bindingGroup.addBinding(jComboBoxBinding);
        Binding binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.filtro.agencia}"), cboAgencia, BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        lblContrato.setText(bundle.getString("lblTipoContrato")); // NOI18N
        lblContrato.setName("lblContrato"); // NOI18N

        cboTipoContrato.setName("cboTipoContrato"); // NOI18N

        eLProperty = ELProperty.create("${model.tiposContrato}");
        jComboBoxBinding = SwingBindings.createJComboBoxBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, cboTipoContrato);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.filtro.tipoContrato}"), cboTipoContrato, BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        lblPorto.setText(bundle.getString("lblPorto")); // NOI18N
        lblPorto.setName("lblPorto"); // NOI18N

        cboPorto.setName("cboPorto"); // NOI18N

        eLProperty = ELProperty.create("${model.portos}");
        jComboBoxBinding = SwingBindings.createJComboBoxBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, cboPorto);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.filtro.porto}"), cboPorto, BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        lblPeriodo.setText(bundle.getString("lblPeriodo")); // NOI18N
        lblPeriodo.setName("lblPeriodo"); // NOI18N

        dtPeriodoInicio.setName("dtPeriodoInicio"); // NOI18N

        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.filtro.periodoInicio}"), dtPeriodoInicio, BeanProperty.create("date"));
        bindingGroup.addBinding(binding);

        dtPeriodoTermino.setName("dtPeriodoTermino"); // NOI18N

        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.filtro.periodoTermino}"), dtPeriodoTermino, BeanProperty.create("date"));
        bindingGroup.addBinding(binding);

        sLabel1.setText(bundle.getString("lblAte")); // NOI18N
        sLabel1.setName("sLabel1"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        tabelaREsponsaveisCusto.setName("tabelaREsponsaveisCusto"); // NOI18N

        eLProperty = ELProperty.create("${model.responsaveisCusto}");
        JTableBinding jTableBinding = SwingBindings.createJTableBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, tabelaREsponsaveisCusto);
        JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${descricao}"));
        columnBinding.setColumnName("Responsável pelo Custo");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.filtro.responsaveis}"), tabelaREsponsaveisCusto, BeanProperty.create("selectedElements"));
        bindingGroup.addBinding(binding);

        jScrollPane2.setViewportView(tabelaREsponsaveisCusto);

        GroupLayout pnlFiltroLayout = new GroupLayout(pnlFiltro);
        pnlFiltro.setLayout(pnlFiltroLayout);
        pnlFiltroLayout.setHorizontalGroup(
            pnlFiltroLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(pnlFiltroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFiltroLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(lblAgencia, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPorto, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPeriodo, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblContrato, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFiltroLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(cboAgencia, GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
                    .addComponent(cboPorto, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlFiltroLayout.createSequentialGroup()
                        .addGroup(pnlFiltroLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(cboTipoContrato, GroupLayout.PREFERRED_SIZE, 120, GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlFiltroLayout.createSequentialGroup()
                                .addComponent(dtPeriodoInicio, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(sLabel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(dtPeriodoTermino, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlFiltroLayout.setVerticalGroup(
            pnlFiltroLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(pnlFiltroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFiltroLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAgencia, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboAgencia, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFiltroLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPorto, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboPorto, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFiltroLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(lblPeriodo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(dtPeriodoTermino, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlFiltroLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                        .addComponent(dtPeriodoInicio, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addComponent(sLabel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFiltroLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(cboTipoContrato, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblContrato, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        GroupLayout pnlCentralLayout = new GroupLayout(pnlCentral);
        pnlCentral.setLayout(pnlCentralLayout);
        pnlCentralLayout.setHorizontalGroup(
            pnlCentralLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(pnlCentralLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCentralLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(pnlFiltro, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlBotao, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlCentralLayout.setVerticalGroup(
            pnlCentralLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(pnlCentralLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlFiltro, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlBotao, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlFiltro.getAccessibleContext().setAccessibleName("Filtro para Relatório");

        getContentPane().add(pnlCentral, BorderLayout.CENTER);

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //CHECKSTYLE:ON
    // Variables declaration - do not modify//GEN-BEGIN:variables
    STable tabelaREsponsaveisCusto;
    private BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
