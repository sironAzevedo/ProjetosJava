package br.com.petrobras.sistam.desktop.agenciamento.formularios.capitania;

import br.com.petrobras.fcorp.swing.base.SDialog;
import br.com.petrobras.fcorp.swing.base.action.GenericAction;
import br.com.petrobras.fcorp.swing.components.SButton;
import br.com.petrobras.fcorp.swing.components.SComboBox;
import br.com.petrobras.fcorp.swing.components.SDateChooser;
import br.com.petrobras.fcorp.swing.components.SLabel;
import br.com.petrobras.fcorp.swing.components.SPanel;
import br.com.petrobras.fcorp.swing.components.SRadioPanel;
import br.com.petrobras.fcorp.swing.components.STextArea;
import br.com.petrobras.fcorp.swing.components.util.GenericDocument;
import br.com.petrobras.sistam.common.entity.Agenciamento;
import br.com.petrobras.sistam.desktop.components.SistamDateChooser;
import br.com.petrobras.sistam.desktop.components.SistamTimeChooser;
import br.com.petrobras.sistam.desktop.components.TimeZoneComboBox;
import br.com.petrobras.sistam.desktop.util.RelatorioUtil;
import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.util.ResourceBundle;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.ImageIcon;
import javax.swing.JScrollPane;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.WindowConstants;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.Binding;
import org.jdesktop.beansbinding.BindingGroup;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;

public class ParteEntradaDialog extends SDialog {

    private ParteEntradaModel model;
    
    public ParteEntradaDialog(java.awt.Frame parent, Agenciamento agenciamento) {
        super(parent, true);
        model = new ParteEntradaModel(agenciamento);
        initComponents();
        setLocationRelativeTo(parent);
        timeZoneComboBox.setSelectedItem(agenciamento.getAgencia().obterTimezone());
        model.setDataChegada(model.getAgenciamento().getDataChegada());
    }

    public ParteEntradaModel getModel() {
        return model;
    }
    
    
    
    public void gerarFormulario() {
        model.validarParteEntrada();
        model.carregarVO();
        model.registrarEmissao();
        RelatorioUtil.abrirRelatorioParteDeEntradaCapitania(model.getVoFormulario());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings({"unchecked", "PMD"}) @SuppressFBWarnings
    //CHECKSTYLE:OFF
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new BindingGroup();

        GenericAction actionSalvar = new GenericAction();
        GenericAction actionEmitirRelatorio = new GenericAction();
        timeZoneComboBox = new TimeZoneComboBox();
        SPanel pnlCabecalho = new SPanel();
        SLabel sLabel1 = new SLabel();
        SLabel sLabel2 = new SLabel();
        SLabel labelNomeConteudo = new SLabel();
        SLabel labeVgmConteudo = new SLabel();
        SPanel pnlCentral = new SPanel();
        SPanel pnlInfComplementares = new SPanel();
        SLabel sLabel9 = new SLabel();
        SLabel sLabel10 = new SLabel();
        SRadioPanel sRadioPanel2 = new SRadioPanel();
        SLabel sLabel11 = new SLabel();
        SRadioPanel sRadioPanel3 = new SRadioPanel();
        SRadioPanel sRadioPanel5 = new SRadioPanel();
        SPanel pnlNavioGraneleiroCombinado = new SPanel();
        SRadioPanel sRadioPanel4 = new SRadioPanel();
        SLabel sLabel12 = new SLabel();
        SPanel sPanel1 = new SPanel();
        SComboBox cboTpServico = new SComboBox();
        SLabel sLabel3 = new SLabel();
        lblPonto = new SLabel();
        JScrollPane jScrollPane1 = new JScrollPane();
        STextArea sTextArea1 = new STextArea();
        SLabel sLabel4 = new SLabel();
        sistamDateChooser = new SistamDateChooser();
        SistamTimeChooser sistamTimeChooser = new SistamTimeChooser();
        SDateChooser sDateChooser3 = new SDateChooser();
        SLabel sLabel13 = new SLabel();
        SPanel pnlBotoes = new SPanel();
        SButton btImprimir = new SButton();

        actionSalvar.setIcon(new ImageIcon(getClass().getResource("/icons/disk.png"))); // NOI18N
        actionSalvar.setText("Salvar");

        actionEmitirRelatorio.setIcon(new ImageIcon(getClass().getResource("/icons/print.png"))); // NOI18N
        actionEmitirRelatorio.setMethodName("gerarFormulario");
        actionEmitirRelatorio.setTarget(this);
        actionEmitirRelatorio.setText("Gerar Formul√°rio");

        timeZoneComboBox.setName("timeZoneComboBox"); // NOI18N

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Emitir Parte de Entrada");

        pnlCabecalho.setBorder(BorderFactory.createLineBorder(new Color(0, 0, 0)));
        pnlCabecalho.setName("pnlCabecalho"); // NOI18N
        pnlCabecalho.setPreferredSize(new Dimension(400, 40));

        ResourceBundle bundle = ResourceBundle.getBundle("sistam-labels"); // NOI18N
        sLabel1.setText(bundle.getString("lblNome")); // NOI18N
        sLabel1.setName("sLabel1"); // NOI18N

        sLabel2.setText(bundle.getString("lblViagem")); // NOI18N
        sLabel2.setName("sLabel2"); // NOI18N

        labelNomeConteudo.setName("labelNomeConteudo"); // NOI18N
        labelNomeConteudo.setRequiredField(true);

        Binding binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.agenciamento.embarcacao.nomeCompleto}"), labelNomeConteudo, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        labeVgmConteudo.setName("labeVgmConteudo"); // NOI18N
        labeVgmConteudo.setRequiredField(true);

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.agenciamento.vgm}"), labeVgmConteudo, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        GroupLayout pnlCabecalhoLayout = new GroupLayout(pnlCabecalho);
        pnlCabecalho.setLayout(pnlCabecalhoLayout);
        pnlCabecalhoLayout.setHorizontalGroup(
            pnlCabecalhoLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlCabecalhoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sLabel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED, 270, Short.MAX_VALUE)
                .addComponent(sLabel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(labeVgmConteudo, GroupLayout.PREFERRED_SIZE, 65, GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(pnlCabecalhoLayout.createParallelGroup(Alignment.LEADING)
                .addGroup(pnlCabecalhoLayout.createSequentialGroup()
                    .addGap(51, 51, 51)
                    .addComponent(labelNomeConteudo, GroupLayout.PREFERRED_SIZE, 255, GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(124, Short.MAX_VALUE)))
        );
        pnlCabecalhoLayout.setVerticalGroup(
            pnlCabecalhoLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlCabecalhoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCabecalhoLayout.createParallelGroup(Alignment.LEADING)
                    .addComponent(labeVgmConteudo, GroupLayout.DEFAULT_SIZE, 16, Short.MAX_VALUE)
                    .addGroup(pnlCabecalhoLayout.createSequentialGroup()
                        .addGroup(pnlCabecalhoLayout.createParallelGroup(Alignment.BASELINE)
                            .addComponent(sLabel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(sLabel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(pnlCabecalhoLayout.createParallelGroup(Alignment.LEADING)
                .addGroup(pnlCabecalhoLayout.createSequentialGroup()
                    .addGap(12, 12, 12)
                    .addComponent(labelNomeConteudo, GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
                    .addGap(12, 12, 12)))
        );

        getContentPane().add(pnlCabecalho, BorderLayout.PAGE_START);

        pnlCentral.setName("pnlCentral"); // NOI18N

        pnlInfComplementares.setBorder(BorderFactory.createTitledBorder(bundle.getString("informacoesComplementares"))); // NOI18N
        pnlInfComplementares.setName("pnlInfComplementares"); // NOI18N

        sLabel9.setText(bundle.getString("lblDeficienciaTratadas")); // NOI18N
        sLabel9.setName("sLabel9"); // NOI18N

        sLabel10.setText(bundle.getString("lblTransportaCarga")); // NOI18N
        sLabel10.setName("sLabel10"); // NOI18N

        sRadioPanel2.setName("sRadioPanel2"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.listaSimNao}"), sRadioPanel2, BeanProperty.create("elements"));
        bindingGroup.addBinding(binding);
        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.deficienciasTratadasPorto}"), sRadioPanel2, BeanProperty.create("selectedElement"));
        bindingGroup.addBinding(binding);

        GroupLayout sRadioPanel2Layout = new GroupLayout(sRadioPanel2);
        sRadioPanel2.setLayout(sRadioPanel2Layout);
        sRadioPanel2Layout.setHorizontalGroup(
            sRadioPanel2Layout.createParallelGroup(Alignment.LEADING)
            .addGap(0, 101, Short.MAX_VALUE)
        );
        sRadioPanel2Layout.setVerticalGroup(
            sRadioPanel2Layout.createParallelGroup(Alignment.LEADING)
            .addGap(0, 25, Short.MAX_VALUE)
        );

        sLabel11.setText(bundle.getString("lblTransportaCargaPerigosa")); // NOI18N
        sLabel11.setName("sLabel11"); // NOI18N

        sRadioPanel3.setName("sRadioPanel3"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.listaSimNao}"), sRadioPanel3, BeanProperty.create("elements"));
        bindingGroup.addBinding(binding);
        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.transportaCargaPerigosa}"), sRadioPanel3, BeanProperty.create("selectedElement"));
        bindingGroup.addBinding(binding);

        GroupLayout sRadioPanel3Layout = new GroupLayout(sRadioPanel3);
        sRadioPanel3.setLayout(sRadioPanel3Layout);
        sRadioPanel3Layout.setHorizontalGroup(
            sRadioPanel3Layout.createParallelGroup(Alignment.LEADING)
            .addGap(0, 101, Short.MAX_VALUE)
        );
        sRadioPanel3Layout.setVerticalGroup(
            sRadioPanel3Layout.createParallelGroup(Alignment.LEADING)
            .addGap(0, 25, Short.MAX_VALUE)
        );

        sRadioPanel5.setName("sRadioPanel5"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.listaSimNao}"), sRadioPanel5, BeanProperty.create("elements"));
        bindingGroup.addBinding(binding);
        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.transportaCargaConves}"), sRadioPanel5, BeanProperty.create("selectedElement"));
        bindingGroup.addBinding(binding);

        GroupLayout sRadioPanel5Layout = new GroupLayout(sRadioPanel5);
        sRadioPanel5.setLayout(sRadioPanel5Layout);
        sRadioPanel5Layout.setHorizontalGroup(
            sRadioPanel5Layout.createParallelGroup(Alignment.LEADING)
            .addGap(0, 101, Short.MAX_VALUE)
        );
        sRadioPanel5Layout.setVerticalGroup(
            sRadioPanel5Layout.createParallelGroup(Alignment.LEADING)
            .addGap(0, 25, Short.MAX_VALUE)
        );

        GroupLayout pnlInfComplementaresLayout = new GroupLayout(pnlInfComplementares);
        pnlInfComplementares.setLayout(pnlInfComplementaresLayout);
        pnlInfComplementaresLayout.setHorizontalGroup(
            pnlInfComplementaresLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(Alignment.TRAILING, pnlInfComplementaresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInfComplementaresLayout.createParallelGroup(Alignment.LEADING)
                    .addGroup(pnlInfComplementaresLayout.createSequentialGroup()
                        .addComponent(sLabel9, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(Alignment.TRAILING, pnlInfComplementaresLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(pnlInfComplementaresLayout.createParallelGroup(Alignment.LEADING)
                            .addComponent(sLabel11, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(sLabel10, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(pnlInfComplementaresLayout.createParallelGroup(Alignment.LEADING)
                    .addComponent(sRadioPanel3, GroupLayout.PREFERRED_SIZE, 101, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sRadioPanel2, GroupLayout.PREFERRED_SIZE, 101, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sRadioPanel5, GroupLayout.PREFERRED_SIZE, 101, GroupLayout.PREFERRED_SIZE))
                .addGap(77, 77, 77))
        );
        pnlInfComplementaresLayout.setVerticalGroup(
            pnlInfComplementaresLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlInfComplementaresLayout.createSequentialGroup()
                .addGroup(pnlInfComplementaresLayout.createParallelGroup(Alignment.TRAILING)
                    .addComponent(sLabel9, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sRadioPanel2, GroupLayout.PREFERRED_SIZE, 25, GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlInfComplementaresLayout.createParallelGroup(Alignment.LEADING)
                    .addComponent(sLabel10, GroupLayout.PREFERRED_SIZE, 14, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sRadioPanel5, GroupLayout.PREFERRED_SIZE, 25, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.RELATED)
                .addGroup(pnlInfComplementaresLayout.createParallelGroup(Alignment.CENTER)
                    .addComponent(sLabel11, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sRadioPanel3, GroupLayout.PREFERRED_SIZE, 25, GroupLayout.PREFERRED_SIZE)))
        );

        pnlNavioGraneleiroCombinado.setBorder(BorderFactory.createTitledBorder(bundle.getString("navioGraneleiro"))); // NOI18N
        pnlNavioGraneleiroCombinado.setName("pnlNavioGraneleiroCombinado"); // NOI18N

        sRadioPanel4.setName("sRadioPanel4"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.listaSimNao}"), sRadioPanel4, BeanProperty.create("elements"));
        bindingGroup.addBinding(binding);
        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.navioMaior18Anos}"), sRadioPanel4, BeanProperty.create("selectedElement"));
        bindingGroup.addBinding(binding);

        GroupLayout sRadioPanel4Layout = new GroupLayout(sRadioPanel4);
        sRadioPanel4.setLayout(sRadioPanel4Layout);
        sRadioPanel4Layout.setHorizontalGroup(
            sRadioPanel4Layout.createParallelGroup(Alignment.LEADING)
            .addGap(0, 112, Short.MAX_VALUE)
        );
        sRadioPanel4Layout.setVerticalGroup(
            sRadioPanel4Layout.createParallelGroup(Alignment.LEADING)
            .addGap(0, 25, Short.MAX_VALUE)
        );

        sLabel12.setText(bundle.getString("lblIgualMaior18")); // NOI18N
        sLabel12.setName("sLabel12"); // NOI18N

        GroupLayout pnlNavioGraneleiroCombinadoLayout = new GroupLayout(pnlNavioGraneleiroCombinado);
        pnlNavioGraneleiroCombinado.setLayout(pnlNavioGraneleiroCombinadoLayout);
        pnlNavioGraneleiroCombinadoLayout.setHorizontalGroup(
            pnlNavioGraneleiroCombinadoLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlNavioGraneleiroCombinadoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sLabel12, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(Alignment.TRAILING, pnlNavioGraneleiroCombinadoLayout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(sRadioPanel4, GroupLayout.PREFERRED_SIZE, 112, GroupLayout.PREFERRED_SIZE)
                .addGap(140, 140, 140))
        );
        pnlNavioGraneleiroCombinadoLayout.setVerticalGroup(
            pnlNavioGraneleiroCombinadoLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlNavioGraneleiroCombinadoLayout.createSequentialGroup()
                .addComponent(sLabel12, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(sRadioPanel4, GroupLayout.PREFERRED_SIZE, 25, GroupLayout.PREFERRED_SIZE))
        );

        sPanel1.setName("sPanel1"); // NOI18N

        cboTpServico.setName("cboTpServico"); // NOI18N

        ELProperty eLProperty = ELProperty.create("${model.agenciamento.agencia.representantes}");
        JComboBoxBinding jComboBoxBinding = SwingBindings.createJComboBoxBinding(UpdateStrategy.READ_WRITE, this, eLProperty, cboTpServico);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.representanteLegalSelecionado}"), cboTpServico, BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        sLabel3.setText(bundle.getString("lblRepresentante")); // NOI18N
        sLabel3.setName("sLabel3"); // NOI18N

        lblPonto.setText(bundle.getString("lblLocalizacaoPorto")); // NOI18N
        lblPonto.setName("lblPonto"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        sTextArea1.setColumns(20);
        sTextArea1.setDocument(new GenericDocument(80));
        sTextArea1.setLineWrap(true);
        sTextArea1.setRows(5);
        sTextArea1.setName("sTextArea1"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.localizacaoPorto}"), sTextArea1, BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jScrollPane1.setViewportView(sTextArea1);

        sLabel4.setText("Data de Chegada:");
        sLabel4.setName("sLabel4"); // NOI18N

        sistamDateChooser.setName("sistamDateChooser"); // NOI18N
        sistamDateChooser.setTimeChooser(sistamTimeChooser);
        sistamDateChooser.setTimeZoneComboBox(timeZoneComboBox);

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.dataChegada}"), sistamDateChooser, BeanProperty.create("date"));
        bindingGroup.addBinding(binding);

        sistamTimeChooser.setName("sistamTimeChooser"); // NOI18N
        sistamTimeChooser.setTimeZone(null);

        sDateChooser3.setName("sDateChooser3"); // NOI18N

        binding = Bindings.createAutoBinding(UpdateStrategy.READ_WRITE, this, ELProperty.create("${model.voFormulario.dataDocumento}"), sDateChooser3, BeanProperty.create("date"));
        bindingGroup.addBinding(binding);

        sLabel13.setText("Data do Documento:");
        sLabel13.setName("sLabel13"); // NOI18N

        GroupLayout sPanel1Layout = new GroupLayout(sPanel1);
        sPanel1.setLayout(sPanel1Layout);
        sPanel1Layout.setHorizontalGroup(
            sPanel1Layout.createParallelGroup(Alignment.LEADING)
            .addGroup(sPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(sPanel1Layout.createParallelGroup(Alignment.TRAILING)
                    .addComponent(sLabel4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPonto, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel13, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.RELATED)
                .addGroup(sPanel1Layout.createParallelGroup(Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(cboTpServico, GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
                    .addGroup(sPanel1Layout.createSequentialGroup()
                        .addGroup(sPanel1Layout.createParallelGroup(Alignment.LEADING)
                            .addComponent(sDateChooser3, GroupLayout.PREFERRED_SIZE, 101, GroupLayout.PREFERRED_SIZE)
                            .addGroup(sPanel1Layout.createSequentialGroup()
                                .addComponent(sistamDateChooser, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(ComponentPlacement.RELATED)
                                .addComponent(sistamTimeChooser, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        sPanel1Layout.setVerticalGroup(
            sPanel1Layout.createParallelGroup(Alignment.LEADING)
            .addGroup(sPanel1Layout.createSequentialGroup()
                .addGroup(sPanel1Layout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(sLabel4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sistamDateChooser, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sistamTimeChooser, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.RELATED)
                .addGroup(sPanel1Layout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(cboTpServico, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.UNRELATED)
                .addGroup(sPanel1Layout.createParallelGroup(Alignment.LEADING)
                    .addComponent(lblPonto, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(sPanel1Layout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(sDateChooser3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel13, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
        );

        GroupLayout pnlCentralLayout = new GroupLayout(pnlCentral);
        pnlCentral.setLayout(pnlCentralLayout);
        pnlCentralLayout.setHorizontalGroup(
            pnlCentralLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlCentralLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCentralLayout.createParallelGroup(Alignment.LEADING)
                    .addComponent(sPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlCentralLayout.createSequentialGroup()
                        .addGroup(pnlCentralLayout.createParallelGroup(Alignment.TRAILING, false)
                            .addComponent(pnlNavioGraneleiroCombinado, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnlInfComplementares, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 4, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlCentralLayout.setVerticalGroup(
            pnlCentralLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlCentralLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlInfComplementares, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(pnlNavioGraneleiroCombinado, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(sPanel1, GroupLayout.PREFERRED_SIZE, 192, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(pnlCentral, BorderLayout.CENTER);

        pnlBotoes.setBorder(BorderFactory.createEtchedBorder());
        pnlBotoes.setName("pnlBotoes"); // NOI18N
        pnlBotoes.setPreferredSize(new Dimension(400, 40));

        btImprimir.setAction(actionEmitirRelatorio);
        btImprimir.setName("btImprimir"); // NOI18N
        pnlBotoes.add(btImprimir);

        getContentPane().add(pnlBotoes, BorderLayout.PAGE_END);

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //CHECKSTYLE:ON

    // Variables declaration - do not modify//GEN-BEGIN:variables
    SLabel lblPonto;
    SistamDateChooser sistamDateChooser;
    TimeZoneComboBox timeZoneComboBox;
    private BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}
